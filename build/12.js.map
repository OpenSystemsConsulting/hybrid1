{"version":3,"sources":["../../src/pages/image-text/image-text.module.ts","../../src/pages/image-text/image-text.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACH;AAa7C;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAX/B,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,kEAAa,CAAC;aACxC;YACD,OAAO,EAAE;gBACP,kEAAa;aAChB;SACA,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACfU;AAC+B;AAEpB;AAEiC;AACW;AACF;AACT;AACtF;;;;;GAKG;AAOH;IAKE,uBAAmB,OAAsB,EAAU,gBAA0C,EACpF,SAAoB,EAAS,QAAwB,EACpD,aAAoC,EAAU,SAAmC,EACjF,aAAoC;QAH9C,iBAMC;QANkB,YAAO,GAAP,OAAO,CAAe;QAAU,qBAAgB,GAAhB,gBAAgB,CAA0B;QACpF,cAAS,GAAT,SAAS,CAAW;QAAS,aAAQ,GAAR,QAAQ,CAAgB;QACpD,kBAAa,GAAb,aAAa,CAAuB;QAAU,cAAS,GAAT,SAAS,CAA0B;QACjF,kBAAa,GAAb,aAAa,CAAuB;QAN9C,cAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;QAC3C,gBAAW,GAAW,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAexD,SAAI,GAAG;YACL,IAAI,KAAK,GAAG,KAAI,CAAC,YAAY,CAAC;YAC9B,KAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,KAAI,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YACzE,qBAAqB;YACrB,KAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC;QAEF,8BAA8B;QAC9B,eAAU,GAAG;YACX,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC;gBACnB,KAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,KAAI,CAAC,WAAW,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC;YACrF,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC1B,CAAC,CAAC;QAEF,UAAK,GAAG;YACN,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACzB,CAAC,CAAC;QA1BA,mEAAc,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACrD,mEAAc,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IAC/D,CAAC;IAED,wCAAgB,GAAhB;QACE,sCAAsC;QACtC,IAAI,CAAC,aAAa,CAAC,GAAG,GAAG,gBAAgB,CAAC;IAC5C,CAAC;IAhBU,aAAa;QAJzB,gEAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;WACG;SAC/B,CAAC;oJAM6F;YACzE,uGAA4B,kHAAc;YACrC,uGAAqB,EAA6C;YAClE,UAAqB;OARnC,aAAa,CAsCzB;IAAD,CAAC;AAAA;SAtCY,aAAa,gB","file":"12.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ImageTextPage } from './image-text';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ImageTextPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ImageTextPage),\r\n  ],\r\n  exports: [\r\n    ImageTextPage\r\n]\r\n})\r\nexport class ImageTextPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/image-text/image-text.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ViewController } from 'ionic-angular';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk';\r\n\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { ImageFileServiceProvider } from '../../providers/image-file-service/image-file-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\n/**\r\n * Generated class for the ImageTextPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-image-text',\r\n  templateUrl: 'image-text.html',\r\n})\r\nexport class ImageTextPage {\r\n  photoMessage;\r\n  loginFlag = this.pdaParams.isDrvLoggedOn();\r\n  newFileName: string = this.navParams.get('newFileName');\r\n\r\n  constructor(public navCtrl: NavController, private imageFileService: ImageFileServiceProvider,\r\n    public navParams: NavParams, public viewCtrl: ViewController,\r\n    private configService: ConfigServiceProvider, private pdaParams: PdaparamsServiceProvider,\r\n    private sharedService: SharedServiceProvider) {\r\n    LoopBackConfig.setBaseURL(this.configService.apiURL);\r\n    LoopBackConfig.setApiVersion(this.configService.API_VERSION);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    //set the tab string in shared-service\r\n    this.sharedService.tab = \"ImageText Page\";\r\n  }\r\n\r\n  save = () => {\r\n    var notes = this.photoMessage;\r\n    this.imageFileService.setImageProperty(this.newFileName, 'notes', notes);\r\n    // close after saving\r\n    this.closeModal();\r\n  };\r\n\r\n  // function to close the modal\r\n  closeModal = () => {\r\n    if (this.newFileName)\r\n      this.imageFileService.setImageProperty(this.newFileName, 'readyForUpload', 'true');\r\n    this.clear();\r\n    this.viewCtrl.dismiss();\r\n  };\r\n\r\n  clear = () => {\r\n    this.photoMessage = \"\";\r\n  };\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/image-text/image-text.ts"],"sourceRoot":""}