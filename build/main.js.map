{"version":3,"sources":["../../shared/sdk/models/GpsHistory.ts","../../shared/sdk/services/custom/GpsHistory.ts","../../src/providers/job-service/job-service.ts","../../src/providers/sod-service/sod-service.ts","../../src/providers/exit-service/exit-service.ts","../../src/providers/push-service/push-service.ts","../../src/pages/signature/signature.ts","../../src/providers/image-service/image-service.ts","../../src/providers/shared-service/shared-service.ts","../../shared/sdk/storage/storage.swaps.ts","../../shared/sdk/models/Job.ts","../../shared/sdk/models/Installation.ts","../../shared/sdk/models/JseaDriverAnswers.ts","../../shared/sdk/models/BarcodeHist.ts","../../shared/sdk/services/custom/JseaDriverQuestions.ts","../../src/pages/job-details/job-details.ts","../../src/providers/log-service/log-service.ts","../../src/providers/job-changed-service/job-changed-service.ts","../../src/providers/fixed-queue-service/fixed-queue-service.ts","../../src/pages/home/home.ts","../../src/providers/device-service/device-service.ts","../../src/providers/background-geolocation-service/background-geolocation-service.ts","../../src/providers/job-replication-service/job-replication-service.ts","../../src/providers/gps-service/gps-service.ts","../../src/providers/config-service/config-service.ts","../../src/pages/change/change.ts","../../src/app/app.component.ts","../../src/providers/customerconn-service/customerconn-service.ts","../../src/pages/login/login.ts","../../src/providers/login-service/login-service.ts","../../src/pages/tabs/tabs.ts","../../src/pages/pda/pda.ts","../../shared/sdk/lb.config.ts","../../node_modules/@angular/core/@angular lazy","../../shared/sdk/index.ts","../../shared/sdk/services/core/auth.service.ts","../../shared/sdk/services/custom/SDKModels.ts","../../src lazy","../../src/pages/jsea/jsea.module.ts","../../shared/sdk/models/BaseModels.ts","../../shared/sdk/models/TpmPdaController.ts","../../shared/sdk/models/Application.ts","../../shared/sdk/models/Notification.ts","../../shared/sdk/models/Push.ts","../../shared/sdk/models/Mobile_event.ts","../../shared/sdk/models/SiteConfig.ts","../../shared/sdk/models/DespatchToDriverMessages.ts","../../shared/sdk/models/JseaDriverQuestions.ts","../../shared/sdk/models/Photocontainer.ts","../../shared/sdk/models/Image.ts","../../shared/sdk/storage/cookie.browser.ts","../../shared/sdk/storage/storage.browser.ts","../../shared/sdk/services/core/search.params.ts","../../shared/sdk/services/core/error.service.ts","../../shared/sdk/sockets/socket.driver.ts","../../shared/sdk/services/core/real.time.ts","../../shared/sdk/models/index.ts","../../shared/sdk/services/custom/Job.ts","../../shared/sdk/services/custom/TpmPdaController.ts","../../shared/sdk/services/custom/Application.ts","../../shared/sdk/sockets/socket.connections.ts","../../shared/sdk/services/custom/Installation.ts","../../shared/sdk/services/custom/Notification.ts","../../shared/sdk/services/custom/Push.ts","../../shared/sdk/services/custom/Mobile_event.ts","../../shared/sdk/services/custom/SiteConfig.ts","../../shared/sdk/services/custom/DespatchToDriverMessages.ts","../../shared/sdk/services/custom/JseaDriverAnswers.ts","../../shared/sdk/services/custom/Photocontainer.ts","../../shared/sdk/services/custom/Image.ts","../../shared/sdk/services/custom/BarcodeHist.ts","../../src/providers/siteconfig-service/siteconfig-service.ts","../../src/pages/image-text/image-text.module.ts","../../src/pages/image-text/image-text.ts","../../src/pages/job-detail-notes/job-detail-notes.module.ts","../../src/pages/job-detail-notes/job-detail-notes.ts","../../src/pages/job-details/job-details.module.ts","../../src/providers/window-ref-service/window-ref-service.ts","../../src/providers/sync-service/sync-service.ts","../../src/pages/change/change.module.ts","../../src/pages/device/device.module.ts","../../src/pages/device/device.ts","../../src/pages/gps/gps.ts","../../src/pages/msgs/msgs.ts","../../src/providers/driver-message-service/driver-message-service.ts","../../shared/sdk/services/core/base.service.ts","../../src/pages/images/images.ts","../../src/pages/barcode/barcode.ts","../../src/providers/barcode-service/barcode-service.ts","../../src/pages/gps/gps.module.ts","../../src/pages/pda/pda.module.ts","../../src/pages/msgs/msgs.module.ts","../../src/pages/images/images.module.ts","../../src/pages/barcode/barcode.module.ts","../../src/pages/login/login.module.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../shared/sdk/sockets/socket.browser.ts","../../ws (ignored)","../../shared/sdk/services/core/io.service.ts","../../shared/sdk/models/FireLoop.ts","../../shared/sdk/models/FireLoopRef.ts","../../src/providers/base-service/base-service.ts","../../shared/sdk/services/core/index.ts","../../shared/sdk/services/custom/index.ts","../../src/providers/util-service/util-service.ts","../../src/providers/jsea-service/jsea-service.ts","../../src/providers/message-service/message-service.ts","../../src/providers/platform-ready-service/platform-ready-service.ts","../../shared/sdk/services/index.ts","../../src/providers/gps-audit-service/gps-audit-service.ts","../../src/providers/log-service/log-service-instance.ts","../../src/components/camera-button/camera-button.ts","../../src/providers/connectivity-monitor/connectivity-monitor.ts","../../src/pipes/keys.pipe.ts","../../src/pipes/change-display-from.pipe.ts","../../src/pipes/change-display-svc.pipe.ts","../../src/pipes/change-display-to.pipe.ts","../../src/pipes/display-status-detail.pipe.ts","../../src/providers/error-modal-service/error-modal-service.ts","../../shared/sdk/services/custom/logger.service.ts","../../src/providers/image-file-service/image-file-service.ts","../../src/providers/event-service/event-service.ts","../../src/providers/pdaparams-service/pdaparams-service.ts","../../src/pages/jsea/jsea.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface GpsHistoryInterface {\r\n  \"gps_driver_id\"?: number;\r\n  \"gps_timestamp\": Date;\r\n  \"gps_latitude\": number;\r\n  \"gps_longitude\": number;\r\n  \"gps_quality\": number;\r\n  \"gps_time\"?: number;\r\n  \"gps_heading\": number;\r\n  \"gps_speed\": number;\r\n  \"mobjobNumber\"?: number;\r\n  \"mobjobBookingDay\"?: Date;\r\n  \"mobjobStatus\"?: string;\r\n}\r\n\r\nexport class GpsHistory implements GpsHistoryInterface {\r\n  \"gps_driver_id\": number;\r\n  \"gps_timestamp\": Date;\r\n  \"gps_latitude\": number;\r\n  \"gps_longitude\": number;\r\n  \"gps_quality\": number;\r\n  \"gps_time\": number;\r\n  \"gps_heading\": number;\r\n  \"gps_speed\": number;\r\n  \"mobjobNumber\": number;\r\n  \"mobjobBookingDay\": Date;\r\n  \"mobjobStatus\": string;\r\n  constructor(data?: GpsHistoryInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `GpsHistory`.\r\n   */\r\n  public static getModelName() {\r\n    return \"GpsHistory\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of GpsHistory for dynamic purposes.\r\n  **/\r\n  public static factory(data: GpsHistoryInterface): GpsHistory{\r\n    return new GpsHistory(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'GpsHistory',\r\n      plural: 'gpsHistorys',\r\n      path: 'gpsHistorys',\r\n      idName: 'gps_driver_id',\r\n      properties: {\r\n        \"gps_driver_id\": {\r\n          name: 'gps_driver_id',\r\n          type: 'number'\r\n        },\r\n        \"gps_timestamp\": {\r\n          name: 'gps_timestamp',\r\n          type: 'Date'\r\n        },\r\n        \"gps_latitude\": {\r\n          name: 'gps_latitude',\r\n          type: 'number'\r\n        },\r\n        \"gps_longitude\": {\r\n          name: 'gps_longitude',\r\n          type: 'number'\r\n        },\r\n        \"gps_quality\": {\r\n          name: 'gps_quality',\r\n          type: 'number'\r\n        },\r\n        \"gps_time\": {\r\n          name: 'gps_time',\r\n          type: 'number'\r\n        },\r\n        \"gps_heading\": {\r\n          name: 'gps_heading',\r\n          type: 'number'\r\n        },\r\n        \"gps_speed\": {\r\n          name: 'gps_speed',\r\n          type: 'number'\r\n        },\r\n        \"mobjobNumber\": {\r\n          name: 'mobjobNumber',\r\n          type: 'number'\r\n        },\r\n        \"mobjobBookingDay\": {\r\n          name: 'mobjobBookingDay',\r\n          type: 'Date'\r\n        },\r\n        \"mobjobStatus\": {\r\n          name: 'mobjobStatus',\r\n          type: 'string'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/GpsHistory.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { GpsHistory } from '../../models/GpsHistory';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `GpsHistory` model.\r\n *\r\n * **Details**\r\n *\r\n * Controlling Pda Device Management\r\n */\r\n@Injectable()\r\nexport class gpshistoryapi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `GpsHistory` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/gpsHistorys\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id gpsHistory id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `GpsHistory` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/gpsHistorys/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `GpsHistory`.\r\n   */\r\n  public getModelName() {\r\n    return \"GpsHistory\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/GpsHistory.ts","import { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\n\r\ndeclare const lbclient: any;\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\r\n\r\n\r\n\r\n\r\n/*\r\n  Generated class for the JobServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class JobServiceProvider {\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'JobServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  jobs = [];\r\n  Job = lbclient.models.LocalJob;\r\n  job;\r\n  constructor(private logger: LogServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider,\r\n    private siteConfig: SiteconfigServiceProvider) {\r\n    //console.log('Hello JobServiceProvider Provider');\r\n  }\r\n\r\n  deleteOldJobs(daysback) {\r\n    // delete old jobs\r\n    // if daysback parameter provided use it otherwise use site config value\r\n    var val = this.siteConfig.getSiteConfigInt('PDA_DEL_DAYSBACK');//then(function (val) {\r\n\r\n    daysback = daysback || val;\r\n\r\n    var queryDate = new Date();\r\n    queryDate.setDate(queryDate.getDate() - daysback);\r\n\r\n    this.log.info(\"deleteOldJobs: daysback:\" + daysback + \", queryDate:\" + queryDate);\r\n    //console.log(\"deleteOldJobs: daysback:\" + daysback + \", queryDate:\" + queryDate);\r\n    daysback = 2;\r\n    if (daysback > 1) {\r\n      var delfilter = { \"where\": { \"mobjobBookingDay\": { \"lt\": queryDate } } };\r\n      this.log.info(\"deleteOldJobs: delfilter:\" + JSON.stringify(delfilter));\r\n      this.Job.find(delfilter, (err, jobs) => {\r\n        this.jobs = jobs;\r\n        var len = this.jobs.length;\r\n        this.log.info(\"deleteOldJobs: deleting:\" + len + \" job legs\");\r\n        //console.log(\"deleteOldJobs: deleting:\" + len + \" job legs\");\r\n\r\n        for (var leg = 0; leg < len; leg++) {\r\n\r\n          this.job = this.jobs[leg];\r\n          this.log.info(\"deleteOldJobs: delete leg:\" + leg + \" job:\" + this.job.mobjobSeq);        \r\n\r\n          //Riyaz: Deletes jobs from the local storage. \r\n          this.job.delete();\r\n\r\n\r\n\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/job-service/job-service.ts","import { Injectable } from '@angular/core';\r\nimport { AlertController } from 'ionic-angular';\r\n\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { JseaServiceProvider } from '../jsea-service/jsea-service';\r\nimport { MessageServiceProvider } from '../message-service/message-service';\r\nimport { EventServiceProvider } from '../event-service/event-service';\r\nimport { JobServiceProvider } from '../job-service/job-service';\r\n\r\n\r\n\r\n/*\r\n  Generated class for the SodServiceProvider provider.\r\n\r\n  Start of Day Service\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n\r\n@Injectable()\r\nexport class SodServiceProvider {\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'SodServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  d;\r\n  now;\r\n  type;\r\n  //When App starts Get from localstorage\r\n  //Logic is everytime the app resumes we check the resume datetime\r\n  // and if its a new day the update the time in local storage\r\n  // and do a logoff and clear local storage\r\n  today = new Date();\r\n  mycurday = this.today.getDate();\r\n\r\n  constructor(private jobService: JobServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider, private siteConfig: SiteconfigServiceProvider,\r\n    private logger: LogServiceProvider, private sharedService: SharedServiceProvider,\r\n    private jseaService: JseaServiceProvider, private messageService: MessageServiceProvider,\r\n    private alertCtrl: AlertController, private eventService: EventServiceProvider) {\r\n    //console.log('Hello SodServiceProvider Provider');\r\n    this.sharedService.RESUME.subscribe(val => {\r\n      this.log.debug('RESUME detected');\r\n      this.checkDoSodAction('FIRST_RESUME');\r\n    });\r\n\r\n  }\r\n\r\n  //this.log.debug('Instantiating mycurday = :' + mycurday);\r\n\r\n  checkDoSodAction(type) {\r\n\r\n    //Get What is stored from last initial resum on a day in past\r\n    var prevResumeDateStr = localStorage.getItem('FIRST_RESUME_DATE');\r\n\r\n    if (type == 'FIRST_RESUME') {\r\n      this.today = new Date();\r\n      this.mycurday = this.today.getDate();\r\n\r\n      if (prevResumeDateStr) {\r\n        var prevResumeDate = new Date(prevResumeDateStr);\r\n\r\n        var prevResumeDay = prevResumeDate.getDate();\r\n        this.log.debug('On Resume prevResumeDate from localstorage = :' + prevResumeDateStr + ' Str convertTodate = ' + prevResumeDate + ' prevResumeDay = ' + prevResumeDay + ' mycurday = ' + this.mycurday);\r\n\r\n        //Resume on different day\r\n        //if( prevResumeDay == mycurday )\r\n        if (prevResumeDay != this.mycurday) {\r\n          //Do some shit and store\r\n          this.now = new Date();\r\n          localStorage.setItem('FIRST_RESUME_DATE', this.now);\r\n          this.pdaParams.logoffDriver();\r\n          this.eventService.sendMsg('LOGOFF', '');\r\n          this.log.debug(\" prevResumeDay != mycurday mycurday = \" + this.mycurday);\r\n\r\n          //$rootScope.$broadcast('SODSERVICE_IS_NEW_DAY');\r\n          this.sharedService.SODSERVICE_IS_NEW_DAY.next(true);\r\n          localStorage.setItem('SODSERVICE_IS_NEW_DAY', 'true');\r\n\r\n          // Get site config parameters from server\r\n          var result$: Observable<string> = this.siteConfig\r\n            .loadAllConfigsFromServer()\r\n            .subscribe((result) => {\r\n              console.log(\"Site Config Reloaded!\");\r\n\r\n            },\r\n              (error) => {\r\n                this.showError(\"Unable to load Site Configs.Please check your connection.\");\r\n                return;\r\n              });\r\n\r\n\r\n\r\n          this.jobService.deleteOldJobs('');\r\n\r\n\r\n          this.jseaService.deleteOldData();\r\n\r\n          // NOTE - should really be done only after we've deleted data\r\n          // so perhaps in a callback wrapper?\r\n          this.messageService.clearChangeData();\r\n        }\r\n        else {\r\n          this.log.debug('Not new date');\r\n        }\r\n      }\r\n      else //Never Stored \r\n      {\r\n        this.now = new Date();\r\n        localStorage.setItem('FIRST_RESUME_DATE', this.now);\r\n        this.log.debug('On Resume prevResumeDate is NULL date = ' + this.now + ' Will clearChange Data');\r\n\r\n        //Riyaz: No need to logoff the driver, if he logs in for the first time.The config data is loaded dynamically\r\n        //this.pdaParams.logoffDriver();\r\n        //this.eventService.sendMsg('LOGOFF', '');\r\n\r\n        this.messageService.clearChangeData();\r\n\r\n        // Get site config parameters from server\r\n        var result$: Observable<string> = this.siteConfig\r\n          .loadAllConfigsFromServer()\r\n          .subscribe((result) => {\r\n            console.log(\"Site Config Reloaded!\");\r\n\r\n          },\r\n            (error) => {\r\n              this.showError(\"Unable to load Site Configs.Please check your connection.\");\r\n              return;\r\n            });\r\n      }\r\n\r\n      // TODO - maybe get site config parameters from server here?\r\n    }\r\n    else {\r\n      this.log.error('unknown type:' + type);\r\n    }\r\n  }//checkDoSodAction(type) ends here\r\n\r\n  showError(text) {\r\n    //this.loading.dismiss();\r\n\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Error',\r\n      subTitle: text,\r\n      buttons: ['OK']\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  clearSODDate() {\r\n    // This will force an initial start of day\r\n    localStorage.removeItem('FIRST_RESUME_DATE');\r\n  }\r\n\r\n  setSODDate() {\r\n    // This will force a start of day by setting date to yesterday\r\n    this.d = new Date();\r\n    this.d.setDate(this.d.getDate() - 1);\r\n    localStorage.setItem('FIRST_RESUME_DATE', this.d);\r\n  }\r\n\r\n  //This will happen the first time they resume the app on a day\r\n\r\n  //For testing, however JobsIndexCtrl wont see this as this service is initialised before JObsIndexCtrl is\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sod-service/sod-service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { AlertController, Platform } from 'ionic-angular';\r\n\r\nimport { GpsServiceProvider } from '../gps-service/gps-service';\r\nimport { EventServiceProvider } from '../event-service/event-service';\r\n\r\n\r\n/*\r\n  Generated class for the ExitServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n\r\n    Previously Named : appService\r\n*/\r\n@Injectable()\r\nexport class ExitServiceProvider {\r\n\r\n  constructor(public http: Http, private eventService: EventServiceProvider,\r\n    private gpsService: GpsServiceProvider, public alert: AlertController,\r\n    public platform: Platform) {\r\n    //console.log('Hello ExitServiceProvider Provider');\r\n  }\r\n\r\n\r\n\r\n  exitTplusMobile() {\r\n    let alert = this.alert.create({\r\n      title: 'Confirm',\r\n      message: 'This will exit the application and stop sending GPS.Do you want to exit?',\r\n      buttons: [{\r\n        text: \"exit?\",\r\n        handler: () => { this.exitApp() }\r\n      }, {\r\n        text: \"Cancel\",\r\n        role: 'cancel'\r\n      }]\r\n    })\r\n    alert.present();\r\n\r\n\r\n    /*alert(\"This will exit the application and stop sending GPS\");\r\n      this.gpsService.setSendGps(false);\r\n      this.eventService.sendMsg('LOGOFF', ''); \r\n      navigator.app.exitApp(); */\r\n\r\n  };//exitTplusMobile() ends here\r\n\r\n\r\n  exitApp() {\r\n    this.gpsService.setSendGps(false);\r\n    this.eventService.sendMsg('LOGOFF', '');\r\n    // NOTE - it is not possible to programatically exit an iOS app see:\r\n    // http://stackoverflow.com/questions/14422908/iphone-does-not-recognize-phonegaps-navigator-app\r\n    // https://groups.google.com/forum/?fromgroups=#!topic/phonegap/XjTm0ua4uOY\r\n\r\n    // NOTE - another option: ionic.Platform.exitApp()\r\n\r\n    // LT - TODO - NOTE - this does NOT close/exit the app on an android device\r\n    // LT - further note - it puts the app into background which apparently is the\r\n    // appropriate thing to do.  However this means that our GPS etc. updates keep\r\n    // going???.\r\n    this.platform.exitApp();\r\n  }\r\n\r\n  /* onConfirmQuit(button) {\r\n    if (button == \"1\") {\r\n      navigator.app.exitApp();\r\n    }\r\n  }; */\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/exit-service/exit-service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { AlertController } from 'ionic-angular';\r\n\r\nimport { Device } from '@ionic-native/device';\r\nimport { Push, PushObject, PushOptions } from '@ionic-native/push';\r\nimport { Media, MediaObject } from '@ionic-native/media';\r\nimport { ConfigServiceProvider } from '../config-service/config-service';\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { PlatformReadyServiceProvider } from '../platform-ready-service/platform-ready-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { UtilServiceProvider } from '../util-service/util-service';\r\n\r\nimport { InstallationApi } from '../../../shared/sdk/services';///shared/sdk/services';\r\n\r\n/*\r\n  Generated class for the PushServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class PushServiceProvider {\r\n  pushObject: PushObject;\r\n\r\n  /* \"senderID\" is \"Project Number\" from Google Developers Console (https://console.firebase.google.com)\r\n    NOTE that there is also a server component involved - see API key in /app/strongloop/OSC-API/server/gcm_config.js */\r\n\r\n  androidConfig = {\r\n    senderID: \"993694312238\",\r\n  };\r\n\r\n  iosConfig = {\r\n    badge: true,\r\n    sound: true,\r\n    alert: true,\r\n  };\r\n  browserConfig = {\r\n    pushServiceURL: 'http://push.api.phonegap.com/v1/push'\r\n  };\r\n\r\n  winConfig = {};\r\n\r\n  pushOptions: PushOptions = {\r\n    android: this.androidConfig,\r\n    ios: this.iosConfig,\r\n    windows: this.winConfig,\r\n    browser: this.browserConfig\r\n  };\r\n\r\n  registered = false;\r\n\r\n  notificationSnd: MediaObject;\r\n  lastSoundTime = Math.round(new Date().getTime() / 1000);\t\t// init when service instantiates\r\n  newSoundTime;\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'PushServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n\r\n  constructor(public http: Http, private pdaParams: PdaparamsServiceProvider,\r\n    private logger: LogServiceProvider, private platformReady: PlatformReadyServiceProvider,\r\n    private configService: ConfigServiceProvider,\r\n    private device: Device, private push: Push, private media: Media,\r\n    private installationApi: InstallationApi,\r\n    public alertCtrl: AlertController, private sharedService: SharedServiceProvider,\r\n    private utilService: UtilServiceProvider) {\r\n    //console.log('Hello PushServiceProvider Provider');\r\n  }\r\n\r\n\r\n\r\n\r\n  registerForPush() {\r\n    //console.log(\"Register for push called!\");\r\n    var openPopup = true;\r\n    this.log.debug('registerForPush: isready:' + this.platformReady.isPlatformReady() + ', driverId:' + this.pdaParams.driverId + ', registered:' + this.registered);\r\n\r\n    //If Device ready , driver > 0 and we are not already registered then do it\r\n    if (this.platformReady.isPlatformReady() && this.pdaParams.driverId > 0 && this.registered == false) {\r\n      // Determine platform e.g. 'Android', 'iOS'\r\n      var platform = this.device.platform;\r\n      if (platform != null) {\r\n        var deviceType = platform.toLowerCase();\t\t\t// lowercase for loopback installations collection\r\n        var mycurrent_drivernum = this.pdaParams.driverId;\r\n        // initialise the push plugin - phonegap-plugin-push\r\n        this.pushObject = this.push.init(this.pushOptions);\r\n        this.pushObject.on('registration').subscribe((data: any) => {\r\n          var token = data.registrationId;\r\n          var msg = 'Ionic Push register for Driver ' + mycurrent_drivernum + ' : token:' + token;\r\n          this.log.info(msg);\r\n          //Init an Object to insert into installation table if our filter below gets empty or filter \r\n          // returns not the same as the current token just got from Google\r\n          var installation_object = {\r\n            \"appId\": \"osc-push-demo\",\r\n            \"userId\": mycurrent_drivernum,\r\n            \"deviceToken\": token,\r\n            \"deviceType\": deviceType,\r\n            \"pdaVersion\": this.pdaParams.getAppVersion()\r\n          };\r\n          var filter = { \"where\": { \"deviceToken\": token } };\r\n          this.log.debug(platform + 'IonicPush.register: check for current registration, filter:' + JSON.stringify(filter));\r\n          this.installationApi.find(filter).subscribe((data) => {\r\n            // Try and ensure that there only ever one row for a driver or a token\r\n            // TODO - remove any registrations for this token but NOT for this driver\r\n            // TODO - remove any registrations for this driver but NOT for this token\r\n            // Then register current token for current driver\r\n            if (this.utilService.isEmpty(data) || data === null) {\t\t// no current registration found\r\n              this.log.info(platform + 'IonicPush.register: no current registration found in installations, saving...');\r\n              //This registers the Google Token with Strongloop and our Database\r\n              this.installationApi.create(installation_object).subscribe(data => {\r\n                // Save data to local storage (it also gets put into $rootScope below)\r\n                localStorage.setItem('osc-push-credentials', JSON.stringify(installation_object));\r\n                var alertPopup = this.alertCtrl.create({\r\n                  title: 'Device registered',\r\n                  message: token\r\n                });\r\n                alertPopup.present();\r\n\r\n              }, (error) => {\r\n                this.log.error(platform + 'IonicPush.register: failed error:' + error);\r\n              });\r\n            }\r\n            else {\r\n              this.log.info(platform + ':IonicPush.register: current registration already found in installations');\r\n              this.log.debug(platform + ':IonicPush.register: data:' + JSON.stringify(data));\r\n            }\r\n            this.registered = true;\t\t// we've either just registered or we were already registered\r\n          });\r\n        });\r\n\r\n\r\n        /*Job Cancel notification*/\r\n        this.pushObject.on('notification').subscribe((notification: any) => {\r\n          this.log.debug(platform + 'IonicPush:notificationReceived:' + JSON.stringify(notification));\r\n          // notification object will at least have \"message\" string and \"additionalData\" object\r\n          /* New possible elements in \"additionalData\":\r\n              foreground: true/false \t\t\t- sent by phonegap-plugin-push\r\n              content-available : \"1\"\t\t\t- added by OSC-API server to allow background notifications    \r\n          */\r\n\r\n          // If there is a payload type we use that as the broadcast event with the supplied payload\r\n          var payload = notification.additionalData.payload || {};\r\n          if (payload.type) {\r\n            // Add platform to payload\r\n            payload.platform = platform;\t\t\t// event handler may need to know this\r\n\r\n            // If a sound has been provided add to payload (normally iOS)\r\n            if (notification.sound)\r\n              payload.sound = notification.sound;\r\n\r\n            // If server requests we play the sound do it here\r\n            if (payload.playsound) {\r\n              var sound;\r\n\r\n              switch (payload.platform) {\r\n                case 'Android':\r\n                  sound = payload.sound || \"/android_asset/www/assets/audio/notification.mp3\";\r\n                  break;\r\n                case 'iOS':\r\n                  if (payload.hasOwnProperty('sound')) {\r\n                    sound = payload.sound;\r\n                  }\r\n                  else {\r\n                    // NOTE - this does not appear to work - ensure we send correct sound property for iOS\r\n                    sound = \"file://www/assets/audio/notification.aiff\";\r\n                  }\r\n                  break;\r\n                default:\r\n                  sound = 'default';\r\n                  break;\r\n              }\r\n\r\n              this.log.debug(platform + 'IonicPush:notificationReceived:sound now:[' + sound + ']');\r\n\r\n              if (sound != \"\") {\r\n\r\n                // Had issues when processing lots of notifications with soumds in quick succession\r\n                // So only do this if no sound received within last 10 seconds\r\n                this.newSoundTime = Math.round(new Date().getTime() / 1000);\r\n\r\n                if ((this.newSoundTime - this.lastSoundTime) > 10) {\t\t\t// TODO - should be a param\r\n                  this.lastSoundTime = Math.round(new Date().getTime() / 1000);\r\n                  this.notificationSnd = this.media.create(sound);\r\n                  this.notificationSnd.play();\r\n                  // Maybe turn up the volume?\t(0.0 - 1.0)\r\n                  //notificationSnd.setVolume(1.0);\r\n                  this.notificationSnd.onError.subscribe(err => {\r\n                    this.log.error(platform + 'IonicPush:notificationReceived:play error:[' + sound + '][' + JSON.stringify(err) + ']');\r\n\r\n                  });\r\n\r\n                }\r\n\r\n              }\r\n            }\r\n\r\n            \r\n\r\n            this.log.debug(platform + 'IonicPush:about to broadcast:' + payload.type + ':payload:' + JSON.stringify(payload));\r\n\r\n            //if notification.additionalData.payload.type=\"CANCEL\", then call next on CANCEL subject.\r\n            if (payload.type === \"CANCEL\") {\r\n              this.sharedService.CANCEL.next(payload);\r\n            }\r\n            //if notification.additionalData.payload.type=\"NEWJOB\", then call next on NEWJOB subject.\r\n            if (payload.type === \"NEWJOB\") {\r\n              this.sharedService.NEWJOB.next(payload);\r\n            }\r\n            //if notification.additionalData.payload.type=\"RESUME\", then call next on RESUME subject.\r\n            if (payload.type === \"RESUME\") {\r\n              this.sharedService.RESUME.next(payload);\r\n            }\r\n            //if notification.additionalData.payload.type=\"DESTROY\", then call next on DESTROY subject.\r\n            if (payload.type === \"DESTROY\") {\r\n              this.sharedService.DESTROY.next(payload);\r\n            }\r\n\r\n          }\r\n      \r\n\r\n          else {\r\n            // no payload type provided simply broadcast a received event with the full notification\r\n            // add platform to notification so we can check in the event handler\r\n            notification.platform = platform;\r\n\r\n            this.log.debug(platform + 'IonicPush:about to broadcast:' + 'pushNotificationReceived');\r\n\r\n            // $rootScope.$broadcast('pushNotificationReceived', notification);\t// broadcast to the world\r\n            this.sharedService.pushNotificationReceived.next(notification);\r\n          }\r\n        });\r\n\r\n        this.pushObject.on('error').subscribe(error =>\r\n          this.log.error(platform + ':Ionic push plugin:errorOccurred:' + JSON.stringify(error)));\r\n      }// if (platform != null)  ends here\r\n\r\n    } //isPlatformReady() ends here\r\n\r\n  }///registerForPush() ends here\r\n\r\n\r\n  // unRegister() {\r\n  //   var options = {};\r\n  //   if (this.platformReady.isPlatformReady() && this.pdaParams.driverId > 0) {\r\n  //     var platform = this.device.platform;\r\n\r\n  //     this.log.info(platform + ':unRegister: isready:' + this.platformReady.isPlatformReady() + ', driverId:' + this.pdaParams.driverId);\r\n\r\n  //     // WARNING: dangerous to unregister (results in loss of tokenID)\r\n  //     IonicPushV5.unregister(function () {\r\n  //       // Success!\r\n  //       this.log.info(platform + ':sunregister:success');\r\n  //       this.registered = false;\r\n  //       var alertPopup = $ionicPopup.alert({\r\n  //         title: 'Messaging',\r\n  //         template: 'Device successfully de-registered'\r\n  //       });\r\n  //     }, function (err) {\r\n  //       // Error\r\n  //       this.log.error(platform + ':unregister:error:' + err);\r\n  //     })\r\n\r\n  //     // LT - unregister appeared to work on testing but I did not receive a popup or any error logging\r\n  //     // Set to false anyway so we can try and get another token\r\n  //     this.registered = false;\r\n  //   }\r\n  // } //unRegister() ends here\r\n\r\n  getIsRegistered() {\r\n    return this.registered;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/push-service/push-service.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ViewController } from 'ionic-angular';\r\nimport { SignaturePad } from 'angular2-signaturepad/signature-pad';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\n\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\n\r\nimport { JobDetailsPage } from '../job-details/job-details';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\n\r\n/**\r\n * Generated class for the SignaturePage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n * \r\n * See: http://www.9lessons.info/2017/04/ionic-3-and-angular-4-working-with.html\r\n */\r\n\r\n@Component({\r\n  selector: 'page-signature',\r\n  templateUrl: 'signature.html',\r\n})\r\nexport class SignaturePage {\r\n  @ViewChild(SignaturePad) public signaturePad: SignaturePad;\r\n  signature;\r\n  podname;\r\n  loginFlag = this.pdaParams.isDrvLoggedOn();\r\n  signaturePadModel = {\r\n    'podname': '',\r\n    'signatureConfirm': false\r\n  };\r\n\r\n  public signaturePadOptions: Object = {\r\n    /*  'minWidth': 2,\r\n     'canvasWidth': 340,\r\n     'canvasHeight': 200 */\r\n    'backgroundColor': '#FFF',\r\n    'minWidth': 1,\r\n    'maxWidth': 1.5,\r\n    'dotSize': 3,\r\n    'penColor': 'rgb(66, 133, 244)',\r\n    'onEnd': function () {\r\n      //this.signature.image = this.signaturePad.toDataURL();\r\n      this.signature = this.signaturePad.toDataURL();\r\n    }\r\n  };\r\n  public signatureImage: string;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams,\r\n    private configService: ConfigServiceProvider, public viewCtrl: ViewController,\r\n    private pdaParams: PdaparamsServiceProvider, private sharedService: SharedServiceProvider) {\r\n    //console.log(\"SignaturePage loading...\");\r\n\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    //console.log('ionViewDidLoad SignaturePage');\r\n    this.signature = localStorage.getItem(\"signature\");\r\n    if (this.signature)\r\n      this.signaturePad.fromDataURL(this.signature);\r\n    this.signaturePadModel.podname = \"\";\r\n  }\r\n\r\n\r\n  //Other Functions\r\n  drawCancel() {\r\n    this.signaturePadModel.signatureConfirm = false;\r\n    this.signaturePadModel.podname = \"\";\r\n    this.signaturePad.clear();\r\n    this.signature = null;\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n  save() {\r\n    this.signature = this.signaturePad.toDataURL();\r\n    localStorage.setItem(\"signature\", this.signature);\r\n    this.podname = this.signaturePadModel.podname;\r\n    this.signaturePadModel.podname = '';\r\n    this.signaturePadModel.signatureConfirm = false;\r\n    this.viewCtrl.dismiss({\r\n      podname: this.podname,\r\n      signature: this.signature\r\n    });\r\n  }\r\n\r\n  clear() {\r\n    this.signaturePadModel.signatureConfirm = false;\r\n    this.signaturePad.clear();\r\n    this.signature = null;\r\n    localStorage.removeItem(\"signature\");\r\n    this.signaturePadModel.podname = \"\";\r\n  }\r\n\r\n  canvasResize() {\r\n    let canvas = document.querySelector('canvas');\r\n    this.signaturePad.set('minWidth', 1);\r\n    this.signaturePad.set('canvasWidth', canvas.offsetWidth);\r\n    this.signaturePad.set('canvasHeight', canvas.offsetHeight);\r\n  }\r\n\r\n  disableAcceptButton() {\r\n    this.signature = this.signaturePad.toDataURL();\r\n    return !(this.signaturePadModel.signatureConfirm && this.signature && this.signaturePadModel.podname)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signature/signature.ts","import { Observer } from 'rxjs/Rx';\r\nimport { LoadingController, ToastController } from 'ionic-angular';\r\n\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { File } from '@ionic-native/file';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera';\r\n\r\ndeclare const lbclient: any;\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { ImageFileServiceProvider } from '../image-file-service/image-file-service';\r\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\r\nimport { PlatformReadyServiceProvider } from '../platform-ready-service/platform-ready-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { UIEventManager } from 'ionic-angular/gestures/ui-event-manager';\r\n\r\ninterface imgfileInterface {\r\n  nativeURL: '',\r\n  name: '',\r\n  uploaded: false,\r\n  readyForUpload: '',\r\n  metadata: {},\r\n  notes: ''\r\n};\r\n/*\r\n  Generated class for the ImageServiceProvider provider.\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n  // Service to handle image files\r\n*/\r\n@Injectable()\r\nexport class ImageServiceProvider {\r\n  logParams: any;\r\n  log: any;\r\n  fileList;\r\n  calls = 0;\r\n  pollTime: any;\r\n  uploadUrl = \"\";\r\n  SITE_CONFIG_LOADED: boolean = false;\r\n  Job = lbclient.models.LocalJob;\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider, public http: Http,\r\n    private logger: LogServiceProvider, private imageFileService: ImageFileServiceProvider,\r\n    private siteConfig: SiteconfigServiceProvider, private platformReady: PlatformReadyServiceProvider,\r\n    private file: File, private transfer: FileTransfer, private camera: Camera,\r\n    private sharedService: SharedServiceProvider, public loadingCtrl: LoadingController,\r\n    public toastCtrl: ToastController) {\r\n    console.log('Hello ImageServiceProvider Provider');\r\n    this.logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'ImageServiceProvider' };\r\n    this.log = this.logger.getInstance(this.logParams);\r\n\r\n    //Subscribe to the SITE_CONFIG_LOADED subject.\r\n    this.sharedService.SITE_CONFIG_LOADED.subscribe(SITE_CONFIG_LOADED => {\r\n      this.SITE_CONFIG_LOADED = SITE_CONFIG_LOADED;\r\n    });\r\n\r\n    this.logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'ImageServiceProvider' };\r\n    this.log = this.logger.getInstance(this.logParams);\r\n\r\n    this.pollTime = this.pdaParams.imagePollTime || (60000 * 5);\t\t\t// 30000 = 30 secs   \r\n  }\r\n\r\n  poller = () => {\r\n    // read through image dir and grab any files\r\n    console.log(\"Running poller...\")\r\n    this.uploadUrl = localStorage.getItem('apiURL') + \"/api/images/upload\";\r\n    if (this.uploadUrl == \"\") {\r\n      var val = this.siteConfig.getSiteConfigValue('PDA_IMAGES_URL');\r\n      this.uploadUrl = val;\r\n      this.log.info('this.uploadUrl set to:[' + this.uploadUrl + ']');\r\n    }\r\n    if (this.platformReady.isPlatformReady()) {\r\n      this.uploadAllImages();\r\n      this.deleteObsoleteImages().subscribe(() => {\r\n        this.sharedService.imageRefresh.next(true);\r\n      });\r\n    }\r\n    this.calls++;\r\n    this.pollTime = this.pdaParams.imagePollTime || (60000 * 5);\r\n\r\n    console.log(\"pollTime is ::\" + this.pollTime);\r\n    // re-read from pda params\r\n    if (this.pollTime < 10000)\r\n      this.pollTime = 10000;\t\t\t\t\t// min allowed 10 seconds\r\n    setTimeout(this.poller, this.pollTime);\r\n  };//poller fn ends here\r\n\r\n\r\n  uploadAllImages = () => {\r\n    this.log.info('uploadAllImages: checking..');\r\n\r\n    this.getImageList().subscribe((images) => {\r\n      this.log.debug('uploadAllImages: found ' + images.length + ' images, check if ready for upload');\r\n      images.forEach((image) => {\r\n        // if already uploaded don't do it again\r\n        var uploaded = this.imageFileService.getImageProperty(image.name, 'uploaded');\r\n        var readyForUpload = this.imageFileService.getImageProperty(image.name, 'readyForUpload');\r\n\r\n        this.log.debug('uploadAllImages: image:' + image.name + ', readyForUpload:' + readyForUpload + ', uploaded:' + uploaded + ', pdaParams.imageUpload:' + this.pdaParams.imageUpload);\r\n\r\n        // if not ready don't upload - e.g. maybe still adding notes\r\n        if (readyForUpload == null || readyForUpload == 'false')\r\n          return;\t\t\t// stop processing this iteration\r\n\r\n        if (uploaded != null && !uploaded && this.pdaParams.imageUpload) {\r\n          this.uploadImage(image);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n\r\n  uploadImage = (image, callback?) => {\r\n    var imagedata = this.imageFileService.getImage(image.name) || {};\r\n    var cb = callback;\r\n\r\n    let loader = this.loadingCtrl.create({\r\n      content: \"Uploading...\"\r\n    });\r\n    loader.present();\r\n    const fileTransfer: FileTransferObject = this.transfer.create();\r\n    let options: FileUploadOptions = {\r\n      fileKey: \"file\",\r\n      fileName: image.name,\r\n      mimeType: \"image/jpeg\",\r\n      chunkedMode: false,\r\n      params: {\r\n        \"description\": \"Image from PDA\",\r\n        \"notes\": imagedata.notes\r\n      },\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        Connection: \"close\"\r\n      },\r\n      httpMethod: 'POST'\r\n    };\r\n\r\n    // If we have a metadata object retrieve each property and add to options.params\r\n    var metadata = imagedata.metadata || {};\r\n    for (var property in metadata) {\r\n      if (metadata.hasOwnProperty(property)) {\r\n        options.params[property] = metadata[property];\r\n      }\r\n    }\r\n\r\n\r\n    this.uploadUrl = localStorage.getItem('apiURL') + \"/api/images/upload\";\r\n    if (this.uploadUrl != \"\") {\r\n      //Riyaz: https://github.com/justinwoodcock/Loopback-Upload\r\n      fileTransfer.upload(image.nativeURL, this.uploadUrl, options).then((result) => {\r\n        this.imageFileService.setImageProperty(image.name, 'uploaded', true);\t\t// mark as uploaded on success   \r\n        loader.dismiss();\r\n        this.presentToast(\"Image uploaded successfully\");\r\n        if (cb) cb(result);\r\n      }, (err) => {\r\n        loader.dismiss();\r\n        this.presentToast(JSON.stringify(err));\r\n      });\r\n    } else {\r\n      this.log.info('this.uploadUrl:[' + this.uploadUrl + '], so getSiteConfig');\r\n      var val = this.siteConfig.getSiteConfigValue('PDA_IMAGES_URL');\r\n      this.uploadUrl = val;\r\n    }\r\n\r\n  };\r\n\r\n  getImageList = (imageId?) => {\r\n    if (this.platformReady.isPlatformReady()) {\r\n      return Observable.create((observer: Observer<string>) => {\r\n        var prefix = imageId || \"\";\t\t\t// optional image name to search for (first x chars no suffix)  \r\n\r\n        this.file.resolveLocalFilesystemUrl(this.file.dataDirectory).then((fileSystem: any) => {\r\n          var directoryReader = fileSystem.createReader();\r\n          directoryReader.readEntries((entries) => {\r\n            var numFilesAndDirs = entries.length;\r\n            this.fileList = [];\r\n\r\n            for (var i = 0; i < numFilesAndDirs; i++) {\r\n              var fileEntry = entries[i];\r\n              if (fileEntry.isFile) {\r\n                var imgfile: imgfileInterface = {\r\n                  nativeURL: '',\r\n                  name: '',\r\n                  uploaded: false,\r\n                  readyForUpload: '',\r\n                  metadata: {},\r\n                  notes: ''\r\n                };\r\n\r\n                var isImage = (/\\.(gif|jpg|jpeg|tiff|png)$/i).test(fileEntry.name);\r\n                var isMatch = true;\t\t// TODO - is this the correct default value?  Maybe false?\r\n                if (prefix) {\r\n                  var re = new RegExp('^' + prefix + '.*_.*$', 'i');\r\n                  isMatch = re.test(fileEntry.name);\r\n                }\r\n\r\n                if (isImage && isMatch) {\r\n                  imgfile.nativeURL = fileEntry.nativeURL;\r\n                  imgfile.name = fileEntry.name;\r\n                  imgfile.uploaded = this.imageFileService.getImageProperty(fileEntry.name, 'uploaded');\r\n                  imgfile.notes = this.imageFileService.getImageProperty(fileEntry.name, 'notes');\r\n                  imgfile.readyForUpload = this.imageFileService.getImageProperty(fileEntry.name, 'readyForUpload');\r\n                  this.fileList.push(imgfile);\r\n                }\r\n              }//End of if\r\n            }//end of for loop\r\n            observer.next(this.fileList);\r\n          }, (error) => {\r\n            this.log.error(error);\r\n            Observable.throw(error);\r\n          });//End of readentries()\r\n        }, (error) => {\r\n          this.log.error(error);\r\n          Observable.throw(error);\r\n        });\r\n      }, (error) => {\r\n        this.log.error(error);\r\n        Observable.throw(error);\r\n      });\r\n    }\r\n    else {\r\n      return this.fileList;\t// empty list if no cordova\r\n    }\r\n  };\r\n\r\n\r\n  takePhoto = (photoId) => {\r\n    var result: any;\r\n    const options: CameraOptions = {\r\n      quality: this.pdaParams.imageQuality || 50,\r\n      destinationType: this.camera.DestinationType.FILE_URI,\r\n      sourceType: this.camera.PictureSourceType.CAMERA,\r\n      encodingType: this.camera.EncodingType.JPEG,\r\n      cameraDirection: 1,\r\n      saveToPhotoAlbum: true\r\n    };\r\n    return Observable.create((observer: Observer<string>) => {\r\n      this.camera.getPicture(options).then((imageURI) => {\r\n        observer.next(imageURI);\r\n      }, (err) => {\r\n        Observable.throw(err);\r\n      });\r\n    });\r\n  };//takePhoto function ends here\r\n\r\n\r\n  dirname(path) {\r\n    return path.replace(/\\/[^\\/]*$/, '');\r\n  }\r\n\r\n\r\n  storeImageURI(photoId, imageURI, metadata) {\r\n    return Observable.create(observer => {\r\n      //Grab the file name of the photo in the temporary directory\r\n      var currentName = imageURI.replace(/^.*[\\\\\\/]/, '');\r\n      //Create a new name for the photo\r\n      var d = new Date(),\r\n        n = d.getTime(),\r\n        baseFileName = photoId + \"_\" + n;\r\n      var newFileName = baseFileName + \".jpg\";\r\n      var currentDirectory = this.dirname(imageURI);\r\n\r\n      // moves file from temp camera area on device to the app's local file system\r\n      this.file.moveFile(currentDirectory, currentName, this.file.dataDirectory, newFileName).then((success) => {\r\n        var data = {\r\n          savedImageURI: this.file.dataDirectory + newFileName,\r\n          baseFileName: baseFileName,\r\n          newFileName: newFileName,\r\n          metadata: metadata\r\n        };\r\n        var imageData = {\r\n          name: newFileName,\r\n          uploaded: false,\r\n          readyForUpload: 'false',\r\n          metadata: metadata,\r\n          notes: ''\r\n        };\r\n\r\n        this.imageFileService.addImage(imageData);\t\t\t// store name/status in local storage           \r\n        observer.next(data);\r\n      }, (error) => {\r\n        Observable.throw(error);\r\n      });\r\n    });\r\n  };// storeImageURI ends here\r\n\r\n\r\n  deleteSingleImage = (imageId) => {\r\n    if (this.platformReady.isPlatformReady()) {\r\n      return Observable.create(observer => {\r\n        if (!imageId) {\r\n          observer.throw(\"imageId must be supplied\");\r\n        }\r\n        var isImage = (/\\.(gif|jpg|jpeg|tiff|png)$/i).test(imageId);\r\n        if (isImage) {\r\n          this.file.removeFile(this.file.dataDirectory, imageId).then((result) => {\r\n            this.imageFileService.deleteImage(imageId);\r\n            this.log.info('deleteSingleImage:' + JSON.stringify(result));\r\n            observer.next(result);\r\n          });\r\n        }\r\n        else {\r\n          observer.throw('Not an image file:' + imageId);\r\n        }\r\n        //return deferred.promise;\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  deleteObsoleteImages = () => {\r\n    //var promises = [];\t\t\t// array of promises for $q.all\r\n    var observablesArray = [];\t\t\t// array of observables for Observable.forkJoin  \r\n    return Observable.create(deferredAllImages => {\r\n      var result = {\r\n        numImages: 0,\r\n        delImages: 0,\r\n        errImages: 0,\r\n        failed: []\t\t\t// array of filename/errors on error\r\n      };\r\n      this.getImageList().subscribe((images) => {\r\n        result.numImages = images.length;\r\n        this.log.info('deleteObsoleteImages: images found to check:' + result.numImages);\r\n        console.log('deleteObsoleteImages: images found to check:' + result.numImages);\r\n        /*\r\n            * For each image file check if there is still a job (jobSeq) for it\r\n            * and if not then delete the image from the file system and any metadata\r\n            * from local storage\r\n            */\r\n        images.forEach((image) => {\r\n          console.log(\"In foreach of deleteObsoleteImages with image as:\" + image.name);\r\n\r\n          var deferredImage = Observable.create(observer => {\r\n            console.log(\"Inside deferredImage observable creation!! \");\r\n            var name = image.name;\r\n            var jobSeq = name.substring(0, name.indexOf('_'));\r\n            var filter = { \"where\": { \"mobjobSeq\": jobSeq } };\r\n\r\n            // Check image has been uploaded and that the job no longer exists\r\n            var uploaded = this.imageFileService.getImageProperty(image.name, 'uploaded');\r\n            //image.uploaded;\r\n            this.log.debug('deleteObsoleteImages: check name:' + name + ', uploaded:' + uploaded + ', jobSeq:' + jobSeq);\r\n            console.log('deleteObsoleteImages: check name:' + name + ', uploaded:' + uploaded + ', jobSeq:' + jobSeq);\r\n\r\n            if (uploaded) {\r\n\r\n              this.Job.find(filter).then(jobs => {\r\n                this.log.debug('deleteObsoleteImages: found:' + jobs.length + ' job legs');\r\n                console.log('deleteObsoleteImages: found:' + jobs.length + ' job legs');\r\n\r\n                if (jobs.length == 0) {\t\t// no job found\r\n                  this.deleteSingleImage(name).subscribe((success) => {\r\n                    result.delImages += 1;\r\n                    this.log.info(\"deleteObsoleteImages: deleted:\" + success.fileRemoved.name);\r\n                  }, function (err) {\r\n                    this.log.error('deleteObsoleteImages: failed to delete:' + name + ', err:' + err);\r\n                    result.errImages += 1;\r\n                    var failed = {\r\n                      name: name,\r\n                      err: err\r\n                    };\r\n                    result.failed.push(failed);\r\n                  });\r\n                  observer.next();\r\n                }//jobs.length===0\r\n                else {\r\n                  console.log(\"deleteObsoleteImages: in the else.\")\r\n                  observer.next();\r\n                }\r\n              });//jobApi.find() ends here\r\n            }//if uploaded check ends here\r\n            else {\r\n              observer.next();\r\n            }// if (uploaded) check ends here\r\n          });\r\n          deferredImage.subscribe();\r\n          console.log(\"deleteObsoleteImages:Pushing the observables into array\");\r\n          observablesArray.push(deferredImage);\r\n        });//images.forEach closes here       \r\n      });//getImageList() subscription ends here.\r\n      Observable.forkJoin(observablesArray).subscribe((result) => {\r\n        console.log(\"deleteObsoleteImages:Inside forkjoin\");\r\n        deferredAllImages.next(result);\r\n      });\r\n    });//Observable for deferredAllImages ends here\r\n  }//End of deleteObsoleteImages();\r\n\r\n\r\n  startWatching = () => {\r\n    // Wait for site config to load and then start polling service if required\r\n    var poller_started = false;\r\n    //console.log(\"startWatching:SITE_CONFIG_LOADED value:\" + this.SITE_CONFIG_LOADED);\r\n    if (this.SITE_CONFIG_LOADED || localStorage.getItem('SITE_CONFIG_LOADED')) {\r\n\r\n      var YN = this.siteConfig.getSiteConfigValue('PDA_IMAGES');\r\n      this.log.info('startWatching: PDA_IMAGES:' + YN + ', poll_started:' + poller_started);\r\n      if (YN === 'Y' && !poller_started) {\r\n        this.log.info('startWatching: PDA_IMAGES:' + YN + ', calling poller()');\r\n        poller_started = true;\r\n        this.poller();\r\n      }\r\n      else {\r\n        this.log.info('startWatching: PDA_IMAGES:' + YN + ', NO polling or already started');\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  getCount = () => { return (this.calls) }\r\n\r\n  presentToast(msg) {\r\n    let toast = this.toastCtrl.create({\r\n      message: msg,\r\n      duration: 2000,\r\n      position: 'bottom'\r\n    });\r\n\r\n    toast.onDidDismiss(() => {\r\n      //console.log('Dismissed toast');\r\n    });\r\n\r\n    toast.present();\r\n  }\r\n\r\n  /* \r\n  deleteImagesForPrefix = function (imageId) {\r\n    if (this.platformReady.isPlatformReady()) {\r\n      var prefix = imageId || \"\";\r\n      this.file.resolveLocalFileSystemURL(this.file.dataDirectory).then((fileSystem: any) => {\r\n        var directoryReader = fileSystem.createReader();\r\n        directoryReader.readEntries(function (entries) {\r\n          var numFilesAndDirs = entries.length;\r\n          this.fileList = [];\r\n\r\n          for (var i = 0; i < numFilesAndDirs; i++) {\r\n            var fileEntry = entries[i];\r\n\r\n            if (fileEntry.isFile) {\r\n              var imgfile: imgfileInterface = {\r\n                nativeURL: '',\r\n                name: '',\r\n                uploaded: false,\r\n                readyForUpload: false,\r\n                metadata: {},\r\n                notes: ''\r\n              };\r\n\r\n              var isImage = (/\\.(gif|jpg|jpeg|tiff|png)$/i).test(fileEntry.name);\r\n              var isMatch = true;\t\t// TODO - is this the correct default value?  Maybe false?\r\n              if (prefix) {\r\n                var re = new RegExp('^' + prefix + '.*_.*$', 'i');\r\n                isMatch = re.test(fileEntry.name);\r\n              }\r\n              this.log.debug('deleteImagesForPrefix: prefix:[' + prefix + '], file:' + fileEntry.name + ', isIamge:' + isImage, +', isMatch:' + String(isMatch));\r\n              if (isImage && isMatch) {\r\n                imgfile.nativeURL = fileEntry.nativeURL;\r\n                imgfile.name = fileEntry.name;\r\n                imgfile.uploaded = fileEntry.uploaded;\r\n                imgfile.notes = fileEntry.notes;\r\n                // delete image and add to list of deleted files              \r\n                this.file.removeFile(this.file.dataDirectory, imgfile.name).then(function (success) {\r\n                  this.fileList.push(imgfile);\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }).catch((error) => {\r\n          this.log.error(error);\r\n          Observable.throw(error);\r\n        })\r\n      }).catch((error) => {\r\n        this.log.error(error);\r\n        Observable.throw(error);\r\n      });\r\n    }\r\n    else {\r\n      return this.fileList;\t// empty list if no cordova\r\n    }\r\n  }; */\r\n\r\n  /*  getImageList= getImageList;\r\n   deleteImagesForPrefix= deleteImagesForPrefix;\r\n   deleteSingleImage: deleteSingleImage;\r\n   uploadImage= uploadImage;\r\n   takePhoto= takePhoto;\r\n   storeImageURI= storeImageURI;\r\n   deleteObsoleteImages= deleteObsoleteImages; */\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/image-service/image-service.ts","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs/Rx';\r\nimport { Platform } from 'ionic-angular';\r\n\r\n/*\r\n  Generated class for the SharedServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n\r\n  Riyaz: Have a look at https://github.com/NamitaMalik/Realtime-Update-in-Angular2\r\n*/\r\ninterface fileData {\r\n  metadata: Metadata,\r\n\r\n}\r\n\r\ninterface Metadata {\r\n  legid: number,\r\n  legStatus: string\r\n}\r\ninterface pdaPayload {\r\n  command: string,\r\n  params: {};\r\n}\r\ninterface driverPayload {\r\n  message: string;\r\n}\r\ninterface Payload {\r\n  data: {\r\n    type: string,\r\n    baseJob: string,\r\n    bookingDay: number\r\n  },\r\n  platform: string,\r\n  playsound: boolean,\r\n  payload: Payload,\r\n  type: string,\r\n  sound: string\r\n}\r\ninterface Message {\r\n  type: string,\r\n  baseJob: string,\r\n  bookingDay: number\r\n}\r\n\r\ninterface additionalData {\r\n  payload: Payload,\r\n  message: string\r\n\r\n}\r\n\r\ninterface notification {\r\n  platform: string,\r\n  event: string,\r\n  message: Message,\r\n  title: string,\r\n  count: number,\r\n  image: string,\r\n  additionalData: additionalData,\r\n  payload: Payload,\r\n  alert: string,\r\n  sound: string,\r\n  type: string\r\n}\r\n\r\n@Injectable()\r\nexport class SharedServiceProvider {\r\n\r\n  //Riyaz: Events are implemented using Subjects & BehaviorSubjects\r\n  SITE_CONFIG_LOADED= new Subject<boolean>();\r\n  SODSERVICE_IS_NEW_DAY = new Subject<boolean>();\r\n\r\n  APP_ON_LINE: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  APP_OFF_LINE: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  commandToPDA: Subject<pdaPayload> = new Subject<pdaPayload>();\r\n  messageToDriver: Subject<driverPayload> = new Subject<driverPayload>();\r\n  pushNotificationReceived: Subject<notification> = new Subject<notification>();\r\n\r\n  jobMetaDataLoadedSubject = new Subject<Boolean>();\r\n  tpmPdaCtlsLoadedSubject = new Subject<Boolean>();\r\n  PAUSE = new Subject<Boolean>();\r\n  RESUME = new Subject<Boolean>();\r\n  DESTROY = new Subject<Payload>();\r\n\r\n  NEWJOB = new Subject<Payload>();\r\n  CANCEL = new Subject<Payload>();\r\n  imageSaved = new Subject<fileData>();\r\n  imageRefresh = new Subject<Boolean>();\r\n\r\n  loginFlag;\r\n  testing: boolean = true;\r\n\r\n  //Riyaz: Global variables are implemented using getter & setter methods\r\n  //See https://ionicallyspeaking.com/2016/03/10/global-variables-in-ionic-2/\r\n\r\n  props = new Map();\r\n\r\n  constructor() {\r\n    //console.log('Hello SharedServiceProvider Provider');\r\n  }\r\n\r\n  setJobId(value) {\r\n    this.props.set('jobid', value);\r\n  }\r\n\r\n  getJobId() {\r\n    return this.props.get('jobid');\r\n  }\r\n\r\n  setJobMetaData(value) {\r\n    //console.log(\"3.5 Jobmetadata in shared-service.ts set to==\" + value);\r\n    this.props.set('jobMetadata', value);\r\n  }\r\n\r\n  getJobMetaData() {\r\n    return this.props.get('jobMetadata');\r\n  }\r\n\r\n  setHistoryMetaData(value) {\r\n\r\n    this.props.set('historyMetadata', value);\r\n  }\r\n\r\n  getHistoryMetadata() {\r\n    return this.props.get('historyMetadata');\r\n  }\r\n\r\n  setBNewItem(value) {\r\n    this.props.set('bNewItem', value);\r\n  }\r\n\r\n  getBNewItem() {\r\n    return this.props.get('bNewItem');\r\n  }\r\n\r\n  setDesktopBrowserScrolling(value) {\r\n    this.props.set('desktopBrowserScrolling', value);\r\n  }\r\n\r\n  getDesktopBrowserScrolling() {\r\n    return this.props.get('desktopBrowserScrolling');\r\n  }\r\n\r\n  setSyncInProgress(value) {\r\n    this.props.set('syncInProgress', value);\r\n  }\r\n\r\n  getSyncInProgress() {\r\n    return this.props.get('syncInProgress');\r\n  }\r\n\r\n  setFirstTimeLoad(value) {\r\n    this.props.set('firstTimeLoad', value);\r\n  }\r\n\r\n  getFirstTimeLoad() {\r\n    return this.props.get('firstTimeLoad');\r\n  }\r\n\r\n  setMyConfiguredForJsea(value) {\r\n    this.props.set('myConfiguredForJsea', value);\r\n  }\r\n\r\n  getMyConfiguredForJsea() {\r\n    return this.props.get('myConfiguredForJsea');\r\n  }\r\n\r\n\r\n  setCancelNotif(value) {\r\n    this.props.set('CancelNotif', value);\r\n  }\r\n\r\n  getCancelNotif() {\r\n    return this.props.get('CancelNotif');\r\n  }\r\n   \r\n\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/shared-service/shared-service.ts","/* tslint:disable */\r\n/**\r\n * @module Storage\r\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n * @license MIT\r\n * @description\r\n * The InternalStorage class is used for dependency injection swapping.\r\n * It will be provided using factory method from different sources.\r\n **/\r\nexport class BaseStorage {\r\n  /**\r\n   * @method get\r\n   * @param {string} key Storage key name\r\n   * @return {any}\r\n   * @description\r\n   * The getter will return any type of data persisted in storage.\r\n   **/\r\n  get(key: string): any {}\r\n  /**\r\n   * @method set\r\n   * @param {string} key Storage key name\r\n   * @param {any} value Any value\r\n   * @return {void}\r\n   * @description\r\n   * The setter will return any type of data persisted in localStorage.\r\n   **/\r\n  set(key: string, value: any, expires?: Date): void {}\r\n  /**\r\n   * @method remove\r\n   * @param {string} key Storage key name\r\n   * @return {void}\r\n   * @description\r\n   * This method will remove a localStorage item from the client.\r\n   **/\r\n  remove(key: string): void {}\r\n}\r\n/**\r\n * @module InternalStorage\r\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n * @license MIT\r\n * @description\r\n * The InternalStorage class is used for dependency injection swapping.\r\n * It will be provided using factory method from different sources.\r\n * This is mainly required because Angular Universal integration.\r\n * It does inject a CookieStorage instead of LocalStorage.\r\n **/\r\nexport class InternalStorage extends BaseStorage {}\r\n/**\r\n * @module SDKStorage\r\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n * @license MIT\r\n * @description\r\n * The SDKStorage class is used for dependency injection swapping.\r\n * It will be provided using factory method according the right environment.\r\n * This is created for public usage, to allow persisting custom data\r\n * Into the local storage API.\r\n **/\r\nexport class SDKStorage extends BaseStorage {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/storage/storage.swaps.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface JobInterface {\r\n  \"mobjobuid\"?: string;\r\n  \"mobjobSeq\"?: number;\r\n  \"mobjobNumber\": number;\r\n  \"mobjobBookingDay\": Date;\r\n  \"mobjobBasejobNum\"?: number;\r\n  \"mobjobJobPieces\"?: number;\r\n  \"mobjobLegNumber\": number;\r\n  \"mobjobTotalLegs\"?: number;\r\n  \"mobjobStatus\"?: string;\r\n  \"mobjobServiceCode\"?: string;\r\n  \"mobjobReturnCode\"?: boolean;\r\n  \"mobjobWhichCompany\"?: string;\r\n  \"mobjobClientCode\": string;\r\n  \"mobjobClientName\"?: string;\r\n  \"mobjobClientRef\"?: string;\r\n  \"mobjobClientRef2\"?: string;\r\n  \"mobjobCallersName\"?: string;\r\n  \"mobjobAddress1\"?: string;\r\n  \"mobjobAddress2\"?: string;\r\n  \"mobjobAddress3\"?: string;\r\n  \"mobjobAddress4\"?: string;\r\n  \"mobjobAddress5\"?: string;\r\n  \"mobjobSuburb\"?: string;\r\n  \"mobjobAddrExtras\"?: string;\r\n  \"mobjobEtaTime\"?: Date;\r\n  \"mobjobDriver\"?: number;\r\n  \"mobjobJobType\"?: number;\r\n  \"mobjobWeight\"?: number;\r\n  \"mobjobSignat\"?: string;\r\n  \"mobjobTimeAC\"?: Date;\r\n  \"mobjobTimePU\"?: Date;\r\n  \"mobjobTimeAp\"?: Date;\r\n  \"mobjobTimeAd\"?: Date;\r\n  \"mobjobTimeDp\"?: Date;\r\n  \"onDeviceTime\": Date;\r\n  \"jseaCaptured\"?: string;\r\n  \"mobjobPupInstructions\"?: string;\r\n  \"mobjobDelInstructions\"?: string;\r\n  \"mobjobDrvName\"?: string;\r\n  \"mobjobDrvSurname\"?: string;\r\n  \"mobjobTrailerId\"?: string;\r\n  \"mobjobTrailerDesc\"?: string;\r\n  \"mobjobTrailerReg\"?: string;\r\n  \"mobjobVehicleType\"?: string;\r\n  \"mobjobCeta\"?: string;\r\n  \"mobjobLength\"?: string;\r\n  \"mobjobWidth\"?: string;\r\n  \"gpsLatPU\"?: number;\r\n  \"gpsLongPU\"?: number;\r\n  \"gpsLatDL\"?: number;\r\n  \"gpsLongDL\"?: number;\r\n  \"lastModified\": Date;\r\n}\r\n\r\nexport class Job implements JobInterface {\r\n  \"mobjobuid\": string;\r\n  \"mobjobSeq\": number;\r\n  \"mobjobNumber\": number;\r\n  \"mobjobBookingDay\": Date;\r\n  \"mobjobBasejobNum\": number;\r\n  \"mobjobJobPieces\": number;\r\n  \"mobjobLegNumber\": number;\r\n  \"mobjobTotalLegs\": number;\r\n  \"mobjobStatus\": string;\r\n  \"mobjobServiceCode\": string;\r\n  \"mobjobReturnCode\": boolean;\r\n  \"mobjobWhichCompany\": string;\r\n  \"mobjobClientCode\": string;\r\n  \"mobjobClientName\": string;\r\n  \"mobjobClientRef\": string;\r\n  \"mobjobClientRef2\": string;\r\n  \"mobjobCallersName\": string;\r\n  \"mobjobAddress1\": string;\r\n  \"mobjobAddress2\": string;\r\n  \"mobjobAddress3\": string;\r\n  \"mobjobAddress4\": string;\r\n  \"mobjobAddress5\": string;\r\n  \"mobjobSuburb\": string;\r\n  \"mobjobAddrExtras\": string;\r\n  \"mobjobEtaTime\": Date;\r\n  \"mobjobDriver\": number;\r\n  \"mobjobJobType\": number;\r\n  \"mobjobWeight\": number;\r\n  \"mobjobSignat\": string;\r\n  \"mobjobTimeAC\": Date;\r\n  \"mobjobTimePU\": Date;\r\n  \"mobjobTimeAp\": Date;\r\n  \"mobjobTimeAd\": Date;\r\n  \"mobjobTimeDp\": Date;\r\n  \"onDeviceTime\": Date;\r\n  \"jseaCaptured\": string;\r\n  \"mobjobPupInstructions\": string;\r\n  \"mobjobDelInstructions\": string;\r\n  \"mobjobDrvName\": string;\r\n  \"mobjobDrvSurname\": string;\r\n  \"mobjobTrailerId\": string;\r\n  \"mobjobTrailerDesc\": string;\r\n  \"mobjobTrailerReg\": string;\r\n  \"mobjobVehicleType\": string;\r\n  \"mobjobCeta\": string;\r\n  \"mobjobLength\": string;\r\n  \"mobjobWidth\": string;\r\n  \"gpsLatPU\": number;\r\n  \"gpsLongPU\": number;\r\n  \"gpsLatDL\": number;\r\n  \"gpsLongDL\": number;\r\n  \"lastModified\": Date;\r\n  constructor(data?: JobInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Job`.\r\n   */\r\n  public static getModelName() {\r\n    return \"Job\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of Job for dynamic purposes.\r\n  **/\r\n  public static factory(data: JobInterface): Job{\r\n    return new Job(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'Job',\r\n      plural: 'Jobs',\r\n      path: 'Jobs',\r\n      idName: 'mobjobuid',\r\n      properties: {\r\n        \"mobjobuid\": {\r\n          name: 'mobjobuid',\r\n          type: 'string'\r\n        },\r\n        \"mobjobSeq\": {\r\n          name: 'mobjobSeq',\r\n          type: 'number'\r\n        },\r\n        \"mobjobNumber\": {\r\n          name: 'mobjobNumber',\r\n          type: 'number'\r\n        },\r\n        \"mobjobBookingDay\": {\r\n          name: 'mobjobBookingDay',\r\n          type: 'Date'\r\n        },\r\n        \"mobjobBasejobNum\": {\r\n          name: 'mobjobBasejobNum',\r\n          type: 'number'\r\n        },\r\n        \"mobjobJobPieces\": {\r\n          name: 'mobjobJobPieces',\r\n          type: 'number'\r\n        },\r\n        \"mobjobLegNumber\": {\r\n          name: 'mobjobLegNumber',\r\n          type: 'number'\r\n        },\r\n        \"mobjobTotalLegs\": {\r\n          name: 'mobjobTotalLegs',\r\n          type: 'number'\r\n        },\r\n        \"mobjobStatus\": {\r\n          name: 'mobjobStatus',\r\n          type: 'string',\r\n          default: 'IP'\r\n        },\r\n        \"mobjobServiceCode\": {\r\n          name: 'mobjobServiceCode',\r\n          type: 'string'\r\n        },\r\n        \"mobjobReturnCode\": {\r\n          name: 'mobjobReturnCode',\r\n          type: 'boolean'\r\n        },\r\n        \"mobjobWhichCompany\": {\r\n          name: 'mobjobWhichCompany',\r\n          type: 'string'\r\n        },\r\n        \"mobjobClientCode\": {\r\n          name: 'mobjobClientCode',\r\n          type: 'string',\r\n          default: 'A+'\r\n        },\r\n        \"mobjobClientName\": {\r\n          name: 'mobjobClientName',\r\n          type: 'string'\r\n        },\r\n        \"mobjobClientRef\": {\r\n          name: 'mobjobClientRef',\r\n          type: 'string'\r\n        },\r\n        \"mobjobClientRef2\": {\r\n          name: 'mobjobClientRef2',\r\n          type: 'string'\r\n        },\r\n        \"mobjobCallersName\": {\r\n          name: 'mobjobCallersName',\r\n          type: 'string'\r\n        },\r\n        \"mobjobAddress1\": {\r\n          name: 'mobjobAddress1',\r\n          type: 'string'\r\n        },\r\n        \"mobjobAddress2\": {\r\n          name: 'mobjobAddress2',\r\n          type: 'string'\r\n        },\r\n        \"mobjobAddress3\": {\r\n          name: 'mobjobAddress3',\r\n          type: 'string'\r\n        },\r\n        \"mobjobAddress4\": {\r\n          name: 'mobjobAddress4',\r\n          type: 'string'\r\n        },\r\n        \"mobjobAddress5\": {\r\n          name: 'mobjobAddress5',\r\n          type: 'string'\r\n        },\r\n        \"mobjobSuburb\": {\r\n          name: 'mobjobSuburb',\r\n          type: 'string'\r\n        },\r\n        \"mobjobAddrExtras\": {\r\n          name: 'mobjobAddrExtras',\r\n          type: 'string'\r\n        },\r\n        \"mobjobEtaTime\": {\r\n          name: 'mobjobEtaTime',\r\n          type: 'Date'\r\n        },\r\n        \"mobjobDriver\": {\r\n          name: 'mobjobDriver',\r\n          type: 'number'\r\n        },\r\n        \"mobjobJobType\": {\r\n          name: 'mobjobJobType',\r\n          type: 'number'\r\n        },\r\n        \"mobjobWeight\": {\r\n          name: 'mobjobWeight',\r\n          type: 'number'\r\n        },\r\n        \"mobjobSignat\": {\r\n          name: 'mobjobSignat',\r\n          type: 'string'\r\n        },\r\n        \"mobjobTimeAC\": {\r\n          name: 'mobjobTimeAC',\r\n          type: 'Date'\r\n        },\r\n        \"mobjobTimePU\": {\r\n          name: 'mobjobTimePU',\r\n          type: 'Date'\r\n        },\r\n        \"mobjobTimeAp\": {\r\n          name: 'mobjobTimeAp',\r\n          type: 'Date'\r\n        },\r\n        \"mobjobTimeAd\": {\r\n          name: 'mobjobTimeAd',\r\n          type: 'Date'\r\n        },\r\n        \"mobjobTimeDp\": {\r\n          name: 'mobjobTimeDp',\r\n          type: 'Date'\r\n        },\r\n        \"onDeviceTime\": {\r\n          name: 'onDeviceTime',\r\n          type: 'Date'\r\n        },\r\n        \"jseaCaptured\": {\r\n          name: 'jseaCaptured',\r\n          type: 'string'\r\n        },\r\n        \"mobjobPupInstructions\": {\r\n          name: 'mobjobPupInstructions',\r\n          type: 'string'\r\n        },\r\n        \"mobjobDelInstructions\": {\r\n          name: 'mobjobDelInstructions',\r\n          type: 'string'\r\n        },\r\n        \"mobjobDrvName\": {\r\n          name: 'mobjobDrvName',\r\n          type: 'string'\r\n        },\r\n        \"mobjobDrvSurname\": {\r\n          name: 'mobjobDrvSurname',\r\n          type: 'string'\r\n        },\r\n        \"mobjobTrailerId\": {\r\n          name: 'mobjobTrailerId',\r\n          type: 'string'\r\n        },\r\n        \"mobjobTrailerDesc\": {\r\n          name: 'mobjobTrailerDesc',\r\n          type: 'string'\r\n        },\r\n        \"mobjobTrailerReg\": {\r\n          name: 'mobjobTrailerReg',\r\n          type: 'string'\r\n        },\r\n        \"mobjobVehicleType\": {\r\n          name: 'mobjobVehicleType',\r\n          type: 'string'\r\n        },\r\n        \"mobjobCeta\": {\r\n          name: 'mobjobCeta',\r\n          type: 'string'\r\n        },\r\n        \"mobjobLength\": {\r\n          name: 'mobjobLength',\r\n          type: 'string'\r\n        },\r\n        \"mobjobWidth\": {\r\n          name: 'mobjobWidth',\r\n          type: 'string'\r\n        },\r\n        \"gpsLatPU\": {\r\n          name: 'gpsLatPU',\r\n          type: 'number'\r\n        },\r\n        \"gpsLongPU\": {\r\n          name: 'gpsLongPU',\r\n          type: 'number'\r\n        },\r\n        \"gpsLatDL\": {\r\n          name: 'gpsLatDL',\r\n          type: 'number'\r\n        },\r\n        \"gpsLongDL\": {\r\n          name: 'gpsLongDL',\r\n          type: 'number'\r\n        },\r\n        \"lastModified\": {\r\n          name: 'lastModified',\r\n          type: 'Date'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Job.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface InstallationInterface {\r\n  \"appId\": string;\r\n  \"appVersion\"?: string;\r\n  \"badge\"?: number;\r\n  \"created\"?: Date;\r\n  \"deviceToken\": string;\r\n  \"deviceType\": string;\r\n  \"modified\"?: Date;\r\n  \"status\"?: string;\r\n  \"subscriptions\"?: Array<any>;\r\n  \"timeZone\"?: string;\r\n  \"userId\"?: string;\r\n  \"id\"?: any;\r\n}\r\n\r\nexport class Installation implements InstallationInterface {\r\n  \"appId\": string;\r\n  \"appVersion\": string;\r\n  \"badge\": number;\r\n  \"created\": Date;\r\n  \"deviceToken\": string;\r\n  \"deviceType\": string;\r\n  \"modified\": Date;\r\n  \"status\": string;\r\n  \"subscriptions\": Array<any>;\r\n  \"timeZone\": string;\r\n  \"userId\": string;\r\n  \"id\": any;\r\n  constructor(data?: InstallationInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Installation`.\r\n   */\r\n  public static getModelName() {\r\n    return \"Installation\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of Installation for dynamic purposes.\r\n  **/\r\n  public static factory(data: InstallationInterface): Installation{\r\n    return new Installation(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'Installation',\r\n      plural: 'Installations',\r\n      path: 'Installations',\r\n      idName: 'id',\r\n      properties: {\r\n        \"appId\": {\r\n          name: 'appId',\r\n          type: 'string'\r\n        },\r\n        \"appVersion\": {\r\n          name: 'appVersion',\r\n          type: 'string'\r\n        },\r\n        \"badge\": {\r\n          name: 'badge',\r\n          type: 'number'\r\n        },\r\n        \"created\": {\r\n          name: 'created',\r\n          type: 'Date'\r\n        },\r\n        \"deviceToken\": {\r\n          name: 'deviceToken',\r\n          type: 'string'\r\n        },\r\n        \"deviceType\": {\r\n          name: 'deviceType',\r\n          type: 'string'\r\n        },\r\n        \"modified\": {\r\n          name: 'modified',\r\n          type: 'Date'\r\n        },\r\n        \"status\": {\r\n          name: 'status',\r\n          type: 'string'\r\n        },\r\n        \"subscriptions\": {\r\n          name: 'subscriptions',\r\n          type: 'Array&lt;any&gt;'\r\n        },\r\n        \"timeZone\": {\r\n          name: 'timeZone',\r\n          type: 'string'\r\n        },\r\n        \"userId\": {\r\n          name: 'userId',\r\n          type: 'string'\r\n        },\r\n        \"id\": {\r\n          name: 'id',\r\n          type: 'any'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Installation.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface JseaDriverAnswersInterface {\r\n  \"jdauid\"?: string;\r\n  \"jdaSeqnum\"?: number;\r\n  \"jdaJobNum\": number;\r\n  \"jdaJobBday\": Date;\r\n  \"jdaDriverId\": number;\r\n  \"jdaFormType\"?: string;\r\n  \"jdaFormLeg\"?: number;\r\n  \"jdaOrder\"?: number;\r\n  \"jdaCheckBox\"?: boolean;\r\n}\r\n\r\nexport class JseaDriverAnswers implements JseaDriverAnswersInterface {\r\n  \"jdauid\": string;\r\n  \"jdaSeqnum\": number;\r\n  \"jdaJobNum\": number;\r\n  \"jdaJobBday\": Date;\r\n  \"jdaDriverId\": number;\r\n  \"jdaFormType\": string;\r\n  \"jdaFormLeg\": number;\r\n  \"jdaOrder\": number;\r\n  \"jdaCheckBox\": boolean;\r\n  constructor(data?: JseaDriverAnswersInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `JseaDriverAnswers`.\r\n   */\r\n  public static getModelName() {\r\n    return \"JseaDriverAnswers\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of JseaDriverAnswers for dynamic purposes.\r\n  **/\r\n  public static factory(data: JseaDriverAnswersInterface): JseaDriverAnswers{\r\n    return new JseaDriverAnswers(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'JseaDriverAnswers',\r\n      plural: 'JseaDriverAnswers',\r\n      path: 'JseaDriverAnswers',\r\n      idName: 'jdauid',\r\n      properties: {\r\n        \"jdauid\": {\r\n          name: 'jdauid',\r\n          type: 'string'\r\n        },\r\n        \"jdaSeqnum\": {\r\n          name: 'jdaSeqnum',\r\n          type: 'number'\r\n        },\r\n        \"jdaJobNum\": {\r\n          name: 'jdaJobNum',\r\n          type: 'number'\r\n        },\r\n        \"jdaJobBday\": {\r\n          name: 'jdaJobBday',\r\n          type: 'Date'\r\n        },\r\n        \"jdaDriverId\": {\r\n          name: 'jdaDriverId',\r\n          type: 'number'\r\n        },\r\n        \"jdaFormType\": {\r\n          name: 'jdaFormType',\r\n          type: 'string'\r\n        },\r\n        \"jdaFormLeg\": {\r\n          name: 'jdaFormLeg',\r\n          type: 'number'\r\n        },\r\n        \"jdaOrder\": {\r\n          name: 'jdaOrder',\r\n          type: 'number'\r\n        },\r\n        \"jdaCheckBox\": {\r\n          name: 'jdaCheckBox',\r\n          type: 'boolean'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/JseaDriverAnswers.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface BarcodeHistInterface {\r\n  \"bchuid\"?: string;\r\n  \"bchSeq\": number;\r\n  \"bchBarcode\": string;\r\n  \"bchTimestamp\": string;\r\n  \"bchJobno\"?: number;\r\n  \"bchJobdate\"?: Date;\r\n  \"bchDriver\"?: number;\r\n  \"bchEvent\"?: string;\r\n  \"bchEventSubtype\"?: string;\r\n}\r\n\r\nexport class BarcodeHist implements BarcodeHistInterface {\r\n  \"bchuid\": string;\r\n  \"bchSeq\": number;\r\n  \"bchBarcode\": string;\r\n  \"bchTimestamp\": string;\r\n  \"bchJobno\": number;\r\n  \"bchJobdate\": Date;\r\n  \"bchDriver\": number;\r\n  \"bchEvent\": string;\r\n  \"bchEventSubtype\": string;\r\n  constructor(data?: BarcodeHistInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `BarcodeHist`.\r\n   */\r\n  public static getModelName() {\r\n    return \"BarcodeHist\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of BarcodeHist for dynamic purposes.\r\n  **/\r\n  public static factory(data: BarcodeHistInterface): BarcodeHist{\r\n    return new BarcodeHist(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'BarcodeHist',\r\n      plural: 'BarcodeHists',\r\n      path: 'BarcodeHists',\r\n      idName: 'bchuid',\r\n      properties: {\r\n        \"bchuid\": {\r\n          name: 'bchuid',\r\n          type: 'string'\r\n        },\r\n        \"bchSeq\": {\r\n          name: 'bchSeq',\r\n          type: 'number'\r\n        },\r\n        \"bchBarcode\": {\r\n          name: 'bchBarcode',\r\n          type: 'string'\r\n        },\r\n        \"bchTimestamp\": {\r\n          name: 'bchTimestamp',\r\n          type: 'string'\r\n        },\r\n        \"bchJobno\": {\r\n          name: 'bchJobno',\r\n          type: 'number'\r\n        },\r\n        \"bchJobdate\": {\r\n          name: 'bchJobdate',\r\n          type: 'Date'\r\n        },\r\n        \"bchDriver\": {\r\n          name: 'bchDriver',\r\n          type: 'number'\r\n        },\r\n        \"bchEvent\": {\r\n          name: 'bchEvent',\r\n          type: 'string'\r\n        },\r\n        \"bchEventSubtype\": {\r\n          name: 'bchEventSubtype',\r\n          type: 'string'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/BarcodeHist.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { JseaDriverQuestions } from '../../models/JseaDriverQuestions';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `JseaDriverQuestions` model.\r\n */\r\n@Injectable()\r\nexport class JseaDriverQuestionsApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `JseaDriverQuestions` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/JseaDriverQuestions\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id JseaDriverQuestions id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `JseaDriverQuestions` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/JseaDriverQuestions/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `JseaDriverQuestions`.\r\n   */\r\n  public getModelName() {\r\n    return \"JseaDriverQuestions\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/JseaDriverQuestions.ts","\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ModalController, AlertController, Tabs } from 'ionic-angular';\r\n\r\n/* import 'rxjs/add/operator/takeUntil';\r\nimport { Subject } from 'rxjs/Subject'; */\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\n//import { JobApi } from '../../../shared/sdk/services'; */\r\n\r\ndeclare const lbclient: any;\r\n//import { Observable } from 'rxjs/Observable';\r\n\r\nimport { LogServiceProvider } from '../../providers/log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../../providers/siteconfig-service/siteconfig-service';\r\nimport { BaseServiceProvider } from '../../providers/base-service/base-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\nimport { JseaServiceProvider } from '../../providers/jsea-service/jsea-service';\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { JobChangedServiceProvider } from '../../providers/job-changed-service/job-changed-service';\r\nimport { UtilServiceProvider } from '../../providers/util-service/util-service';\r\nimport { GpsAuditServiceProvider } from '../../providers/gps-audit-service/gps-audit-service'\r\n\r\nimport { CameraButtonComponent } from '../../components/camera-button/camera-button';\r\n\r\nimport { JobDetailNotesPage } from '../job-detail-notes/job-detail-notes';\r\nimport { JseaPage } from '../jsea/jsea';\r\n//import { TabsPage } from '../tabs/tabs';\r\nimport { HomePage } from '../home/home';\r\nimport { SignaturePage } from '../signature/signature';\r\nimport { TabsPage } from '../tabs/tabs';\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Generated class for the JobDetailsPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n * \r\n * Read about how to unsubscribe observables at\r\n * https://stackoverflow.com/questions/38008334/angular-rxjs-when-should-i-unsubscribe-from-subscription\r\n * \r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-job-details',\r\n  templateUrl: 'job-details.html'\r\n})\r\nexport class JobDetailsPage {\r\n  private subscriptions = new Subscription();\r\n  t: Tabs = this.navCtrl.parent;\r\n  Job = lbclient.models.LocalJob;\r\n  job_note_sync = lbclient.job_note_sync;\r\n  LocalNote = lbclient.models.LocalNote;\r\n  jobMetadata;\r\n  username: any;\r\n  signature;\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'JobDetailsPage' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  mystr;\r\n  basejob;\r\n  basejobDate;\r\n  legs;\r\n  jobs;\r\n  discreteDelSignat;\r\n  showDelButtonNoSignat;\r\n  job;\r\n  data;\r\n  tabHeader;\r\n  note = {\r\n    'seqid': '',\r\n    'formtype': '',\r\n    'text': '',\r\n    'placeholderText': ''\r\n  };\r\n  driverId: number;\r\n  notesModal;\r\n  placeholderText;\r\n  localfilter;\r\n  isNotesModelClosed: boolean = false;\r\n  njobId;\r\n  legnum;\r\n  jobId;\r\n  results;\r\n  podname;\r\n  loginFlag = this.pdaParams.isDrvLoggedOn();\r\n  pdaImages;\r\n  pdaNotes;\r\n  fullStatuses;\r\n  // The following two are mutually exclusive so should never be set together - if they are we use depart pickup\r\n  // signature on pickup\r\n  pdaSignatOnPU = (this.pdaParams.pda_signat_on_pu || (this.siteConfig.getSiteConfigValue('PDA_SIGNATURE_PUP') == 'Y'));\r\n  pdaSignatOnDepPU;\r\n  // separate delivery signature and delivery event\r\n  pdaDiscreteDelSignat = (this.pdaParams.pda_discrete_del_signat || (this.siteConfig.getSiteConfigValue('PDA_DISCRETE_DEL_SIGNAT') == 'Y'));\r\n  multidelText = this.siteConfig.getSiteConfigValue('PDA_MULTIDEL_NOTE_TEXT');\r\n  bNewItem;\t// Just looking at an existing Job by default\r\n  jseaPerJob = (this.jseaService.getJseaConfig() == 'PJB_CHECK');\r\n  jobidparam;\r\n  pdaMandatoryPhotos = (this.pdaParams.pda_mandatory_photos || (this.siteConfig.getSiteConfigValue('PDA_MANDATORY_PHOTOS') == 'Y'));\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, public modalController: ModalController,\r\n    private pdaParams: PdaparamsServiceProvider, private siteConfig: SiteconfigServiceProvider,\r\n    private logger: LogServiceProvider, private base: BaseServiceProvider, private sharedService: SharedServiceProvider,\r\n    private jseaService: JseaServiceProvider, private alertCtrl: AlertController, private jobChangedService: JobChangedServiceProvider,\r\n    private utilService: UtilServiceProvider, private gpsAudit: GpsAuditServiceProvider, private configService: ConfigServiceProvider) {\r\n    console.log(\"JobDetailsPage loading...\");\r\n\r\n    this.username = navParams.data;\r\n    this.jobs = navParams.get('jobs');\r\n\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n\r\n    if (this.sharedService.testing) {\r\n      this.pdaImages = true;\r\n      this.pdaNotes = true;\r\n      this.fullStatuses = true;\r\n      this.pdaSignatOnDepPU = false;\r\n    }\r\n    else {\r\n      // For button to take photos\r\n      this.pdaImages = (this.pdaParams.pda_images || (this.siteConfig.getSiteConfigValue('PDA_IMAGES') == 'Y'));\r\n      //For button to take notes\r\n      this.pdaNotes = (this.pdaParams.pda_notes || (this.siteConfig.getSiteConfigValue('PDA_NOTES') == 'Y'));\r\n      // New functionality to get arrive/depart pickup/delivery times\r\n      this.fullStatuses = (this.pdaParams.pda_full_statuses || (this.siteConfig.getSiteConfigValue('PDA_FULL_STATUSES') == 'Y'));\r\n      // signature on depart pickup \r\n      this.pdaSignatOnDepPU = (this.pdaParams.pda_signat_on_dpu || (this.siteConfig.getSiteConfigValue('PDA_SIGNATURE_DPUP') == 'Y'));\r\n    }\r\n\r\n    if (this.pdaSignatOnDepPU && this.pdaSignatOnPU) {\r\n      this.pdaSignatOnPU = false;\r\n    }\r\n    this.driverId = this.pdaParams.getDriverId();\r\n    this.jobidparam = this.sharedService.getJobId();\r\n    this.jobMetadata = this.sharedService.getJobMetaData();\r\n\r\n    //Monitor job cancellations.\r\n    /*  this.subscriptions.add(this.sharedService.CANCEL.subscribe(cpayload => {\r\n       this.log.info('Received a CANCEL event');\r\n       this.log.info(cpayload.platform + ':' + JSON.stringify(cpayload));\r\n       if (typeof cpayload.data !== \"undefined\") {\r\n         if (cpayload.data.type === 'CANCEL') {\r\n           let alertPopup = this.alertCtrl.create({\r\n             title: 'Job Cancellation',\r\n             subTitle: 'A Job has Been Cancelled by Base - resyncing.',\r\n             buttons: [{\r\n               text: 'OK',\r\n               handler: () => {\r\n                 const navTransition = alertPopup.dismiss();\r\n                 navTransition.then(() => {\r\n                   this.t.select(0);\r\n                 });\r\n                 return false;\r\n               }\r\n             }]\r\n           });\r\n           alertPopup.present();\r\n         }//inner if ends\r\n         else\r\n           this.log.info('payload.data.type <> Cancel, help !!!!');\r\n       }//outer if ends\r\n       else {\r\n         this.log.info('payload.data = undefined, help !!!!');\r\n       }\r\n     })); */\r\n\r\n    this.jobChangedService.setlastjobedited(false);\r\n    this.bNewItem = false;\r\n\r\n    //Monitor Image saves.\r\n    this.sharedService.imageSaved.subscribe(fileData => {\r\n      // fileData contains image name and metadata with job no, legid, status\r\n      this.log.debug('imageSaved:' + JSON.stringify(fileData));\r\n      if (this.pdaMandatoryPhotos) {\r\n        var legid = fileData.metadata.legid;\t\t// id of leg of saved image\r\n        var legStatus = fileData.metadata.legStatus;\r\n        var legCount = this.jobs.length;\r\n        // find our leg and update the image status count\r\n        for (var i = 0; i < legCount; i++) {\r\n          var job = this.jobs[i];\r\n          if (legid == job.mobjobSeq) {\r\n            if (typeof job.imageCount === 'undefined') {\r\n              job.imageCount = [];\t\t// create property if it doesn't exist yet (array of objects)\r\n            }\r\n            var obj = this.getCurrentStatusObj(legStatus, job.imageCount) || {};\r\n            if (obj.count === 0)\r\n              job.imageCount.push(obj);\t\t\t// new array element\r\n            obj.count++;\r\n            job.save();\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.getJob();\r\n  }//Constructor ends here\r\n\r\n  openSignatureModal = (legid) => {\r\n    let modal = this.modalController.create(SignaturePage);\r\n    modal.onDidDismiss(result => {\r\n      if (typeof result !== 'undefined') {\r\n        this.podname = result.podname;\r\n        this.signature = result.signature;\r\n        this.handleJobStatusChange(legid, this.signature, this.podname);\r\n      }\r\n    });\r\n    modal.present();\r\n  }\r\n\r\n  getJob = () => {\r\n    this.mystr = 'getJob';\r\n    if (this.pdaParams.debug)\r\n      this.log.debug(this.mystr);\r\n    if (this.jobidparam === 'new') {\r\n      return this.newJob();\r\n    }\r\n    this.njobId = (this.jobidparam) % 100000000;\t//Modulus 100 Million gives job num and leg num - need to account for modded jobs\r\n    this.legnum = this.njobId % 100;\r\n    this.jobId = this.njobId / 100       //Divide by 100 gives job number taking off the leg number\r\n    this.localfilter =\r\n      {\r\n        \"where\": { \"mobjobBasejobNum\": this.jobId },\r\n        \"order\": 'mobjobLegNumber ASC'\r\n      };\r\n    if (this.pdaParams.jobDetailOneDayOnly) {\r\n      // convoluted (maybe) way to get job date with no hh/mm/ss into date object\r\n      var jobDate = Math.round(this.jobidparam / 100000000);\t\t// e.g. 20160502\r\n      var year = Math.round(jobDate / 10000);\r\n      var mon = Math.round((jobDate % 10000) / 100);\r\n      var day = Math.round((jobDate % 100));\r\n      var jobDateFilter = new Date(Date.UTC(year, mon - 1, day, 0, 0, 0, 0));\r\n      this.localfilter =\r\n        {\r\n          \"where\": {\r\n            \"mobjobBasejobNum\": this.jobId,\r\n            \"mobjobBookingDay\": jobDateFilter\r\n          },\r\n          \"order\": 'mobjobLegNumber ASC'\r\n        };\r\n    }\r\n    if (this.pdaParams.isDrvLoggedOff()) {\r\n      let alertPopup = this.alertCtrl.create({\r\n        title: 'Log On/Off Issue',\r\n        subTitle: \"Please Log on to action jobs\",\r\n        buttons: [{\r\n          text: 'OK',\r\n          handler: () => {\r\n            const navTransition = alertPopup.dismiss();\r\n            navTransition.then(() => {\r\n              this.navCtrl.pop();\r\n            });\r\n            return false;\r\n          }\r\n        }]\r\n      });\r\n      alertPopup.present();\r\n      return;\r\n    }\r\n\r\n    this.Job.find(this.localfilter, (err, results) => {\r\n      if (err) {\r\n        this.log.error('Job.find:' + JSON.stringify(err));\r\n      }\r\n      this.results = results;\r\n      if (this.results.length === 0) {\r\n        this.navCtrl.setRoot(HomePage);\r\n        return;\r\n      }\r\n      this.legs = this.results.length;\r\n      this.jobs = this.results;\r\n      var lastleg = this.jobs[this.legs - 1];\r\n      // Check if last leg is at 'PC' status for discrete signature before delivery\r\n      if (lastleg.mobjobStatus == 'PC')\r\n        this.discreteDelSignat = true;\r\n      else\r\n        this.discreteDelSignat = false;\r\n      if (this.discreteDelSignat && this.pdaDiscreteDelSignat) {\r\n        this.showDelButtonNoSignat = true;\t\t\t// used on template in ng-if\r\n      }\r\n      this.job = this.base.base.currentItem = this.results;\r\n      // Isolate the Single Job and set the CurrentItem in the Base Class...     \r\n      this.data = this.base.currentData = this.base.combineValuesAndLabels(this.job, this.jobMetadata, \"\");\r\n      // Set up the Metadata to control the Display of this Job...\r\n      // Set base.currentData so Edits can be sensed...\r\n      this.base.bDataChanged = false;\r\n      // No Data changed at this point...\r\n      //this.tabHeader = this.generateJobHeader(this.job);\r\n      // Generate a meaningful Header Title...\r\n    });\r\n\r\n  }//GetJob() ends here\r\n\r\n\r\n  newJob = () => {\r\n    this.mystr = 'newJob';\r\n    //log.debug(mystr);\r\n    this.bNewItem = true;\r\n    this.job = {};\r\n    this.data = this.base.createNewItem(this.job, this.jobMetadata);\r\n    // An Empty Job with Defaults...\r\n  }\r\n\r\n\r\n  doJseaSubType = (formtype) => {\r\n    var job = this.job[0];\r\n    var jobStatus;\r\n    //formtype is MDEL or ODIM or JSEA\r\n    this.basejob = job.mobjobNumber;\r\n    this.basejobDate = job.mobjobBookingDay;\r\n    if (job.mobjobStatus == 'PU' || job.mobjobStatus == 'Dp')\r\n      jobStatus = 'PICKUP';\r\n    if (this.job[0].mobjobStatus == 'Ad')\r\n      jobStatus = 'DELIVER';\r\n    this.jseaService.setJobJseaDetails(this.basejob, this.basejobDate, 'N', jobStatus, formtype, 2);\r\n    // if MULTIDEL prompt for notes prior to entering jsea details\r\n    // designed to allow operator to enter address/suburb details\r\n    // which will then appear on CCT's invoices to clients\r\n    if (formtype == 'MULTIDEL') {\r\n      // wait for the modal form to be closed before going to the next page\r\n      if (this.isNotesModelClosed) {\r\n        this.navCtrl.push(JseaPage).catch((err) => {\r\n          console.log(\"Error pushing Jseapage:\" + err);\r\n        });\r\n      };\r\n      this.enterNotes(job.mobjobSeq, this.multidelText, formtype);\r\n    }\r\n    else {\r\n      this.navCtrl.push(JseaPage).catch((err) => {\r\n        console.log(\"Error pushing Jseapage:\" + err);\r\n      });\r\n    }\r\n  }//doJseaSubType ends here\r\n\r\n  //The func below should only be called when a button is clicked EG \r\n  // Accept / Pickup / Tap to Sign \r\n  handleJobStatusChange = (seqid, signat, podname) => {\r\n    // seqid id the mobjobSeq of the job that's just changed e.g. 2015123103038500\r\n    this.mystr = 'handleJobStatusChange:seqid:' + seqid;\r\n    this.log.debug(this.mystr);\r\n    var jseaMaybeRequired = false;\r\n    var wasPickup = false;\r\n    var wasArriveDeliver = false;\r\n    var dateTime = new Date().getTime();\r\n    var timestamp = Math.floor(dateTime / 1000);\r\n    // Loop thru this array and update the status on all legs of the job\r\n    // jobs at this point contains all legs for one basejob\r\n    var podCount = 0;\r\n    var legCount = this.jobs.length;\r\n    //TESTING\r\n    if (this.jseaService.getJseaConfig() == 'PJB_CHECK') {\r\n      this.basejob = this.job[0].mobjobNumber;\r\n      this.basejobDate = this.job[0].mobjobBookingDay;\r\n      jseaMaybeRequired = true;\r\n    }\r\n    ///END TESTING\r\n\r\n    // If mandatory photos required check all legs to make sure at least one \r\n    // photo has been taken for the current status (anything > NJ)\r\n    // NOTE - the image could be attached to any leg\r\n    if (this.pdaMandatoryPhotos) {\r\n      var found = false;\r\n      // It's possible to have e.g. leg 0 @ Ad and leg 1 @ PC where the Ad photo\r\n      // was taken on leg 1 so get status from 1st leg ( leg 0 PU)\r\n      var jobStatus = this.jobs[0].mobjobStatus;\t// get status from 1st leg (PU)\r\n      for (var i = 0; i < legCount; i++) {\r\n        var job = this.jobs[i];\r\n        // long status text is stored in this.data\r\n        var statusString = this.getStatusString(seqid);\r\n        if (job.mobjobStatus === 'NJ') {\r\n          found = true;\t\t\t// don't care about NJ\r\n          break;\r\n        }\r\n\r\n        if (typeof job.imageCount !== 'undefined') {\r\n          // We have some images - check if some for this status\r\n          var obj = this.getCurrentStatusObj(jobStatus, job.imageCount) || {};\r\n          if (obj.count > 0) {\r\n            found = true;\r\n            break;\t\t\t\t// have at least one image\r\n          }\r\n        }\r\n      }\r\n      this.log.info('pdaMandatoryPhotos: seqid:' + seqid + ', jobStatus:' + jobStatus + ', found:' + found);\r\n      if (!found) {\r\n        // no images found - don't allow user to continue\r\n        var alertPopup = this.alertCtrl.create({\r\n          title: 'No photos yet for : ' + statusString,\r\n          subTitle: \"Please take at least one photo at this stage, before updating the job status\",\r\n          buttons: ['Ok']\r\n        });\r\n        alertPopup.present();\r\n        return;\t\t// the alert is async - return here while popup does its job\r\n      }\r\n\r\n    }//End of pdaMandatoryPhotos check\r\n\r\n\r\n    for (var iac = 0; iac < legCount; iac++) {\r\n      var job = this.jobs[iac];\r\n      var oldStatus = job.mobjobStatus;\r\n      // Don't need to match seqid just have this there for later when\r\n      // we want to have individual signatures for each leg\r\n      // we need to change PU to PC (pod captured) for each leg of a multi leg\r\n      // job, and once all legs are PC we can the update all legs to DL\r\n\r\n      if (this.pdaParams.multileg) {\r\n        // Pod captured (PC) processing\r\n        if (\r\n          (!this.fullStatuses && job.mobjobStatus == 'PU')\t\t\t// Std statuses -  NJ->AC->PU->DL\r\n          ||\r\n          (this.fullStatuses && job.mobjobStatus == 'Ad')\t\t\t// Full statuses - NJ->AC->PU->Dp->Ad->DL\r\n        ) {\r\n          // Set pickup leg status only - don't store signature etc. on this leg\r\n          // Can't let this fall thru below otherwise will become DL and not visible\r\n          // If at least one POD mark leg 0 for access by templates etc. where we only have leg 0\r\n          if (job.mobjobLegNumber == 0)\r\n            job.mobjobHasPod = true;\r\n          // Add POD for current leg only (not pickup leg 0)\r\n          if (job.mobjobSeq == seqid && job.mobjobLegNumber > 0) {\r\n            job.mobjobStatus = 'PC';\t\t// pod captured\r\n            job.mobjobSignat = signat || \"\";\r\n            if (podname) {\r\n              job.mobjobPodName = podname;\r\n              job.mobjobPodTime = new Date().toISOString();\r\n            }\r\n          }\r\n\r\n          // Single leg jobs do have a pod capture on leg 0 though - need to add signat to leg 1\r\n          if (job.mobjobTotalLegs == 1 && job.mobjobLegNumber == 1) {\r\n            job.mobjobStatus = 'PC';\t\t// pod captured\r\n            job.mobjobSignat = signat || \"\";\r\n            if (podname) {\r\n              job.mobjobPodName = podname;\r\n              job.mobjobPodTime = new Date().toISOString();\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Following block is for all legs\r\n      // TODO - should this be a switch/case?\r\n      var oldStatus = job.mobjobStatus;\r\n      if (!this.fullStatuses)\t\t\t// Original Carry way NJ->AC->PU->DL\r\n      {\r\n        if (oldStatus == 'NJ') {\r\n          job.mobjobStatus = 'AC';\r\n          job.mobjobTimeAC = Date.now();\r\n        }\r\n        else\r\n          if (oldStatus == 'AC') {\r\n            job.mobjobStatus = 'PU';\r\n            job.mobjobTimePU = Date.now();\r\n\r\n            var lgps = this.gpsAudit.getLastGPS();\r\n            if (lgps) {\r\n              job.gpsLatPU = lgps.gps_latitude;\r\n              job.gpsLongPU = lgps.gps_longitude;\r\n            }\r\n\r\n            if (job.mobjobLegNumber == 0) {\r\n              // Possible signature on pickup\r\n              job.mobjobSignat = signat || \"\";\r\n\r\n              if (podname) {\r\n                job.mobjobPodName = podname;\r\n                job.mobjobPodTime = new Date().toISOString();\r\n              }\r\n            }\r\n          }\r\n          else\r\n            if (oldStatus == 'PU') {\r\n              // PC processing - no direct route to DL now - will either be PU or PC until all pods captured\r\n              if (!this.pdaParams.multileg) {\r\n                job.mobjobStatus = 'DL';\r\n                // why did we store signature on pickup leg (leg 0)?\r\n                if (job.mobjobLegNumber > 0) {\r\n                  job.mobjobSignat = signat || \"\";\r\n                  if (podname) {\r\n                    job.mobjobPodName = podname;\r\n                    job.mobjobPodTime = new Date().toISOString();\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            else\r\n              if (oldStatus == 'PC') {\r\n                podCount++;\r\n              }\r\n      }\r\n      else\t\t\t// fullStatuses - additional status steps NJ->AC->PU->Dp->Ad->DL\r\n      {\r\n        if (oldStatus == 'NJ') {\r\n          job.mobjobStatus = 'AC';\r\n          job.mobjobTimeAC = Date.now();\r\n        }\r\n        else if (oldStatus == 'AC') {\r\n          wasPickup = true;\r\n          job.mobjobStatus = 'PU';\r\n          job.mobjobTimePU = Date.now();\r\n          var lgps = this.gpsAudit.getLastGPS();\r\n          if (lgps) {\r\n            job.gpsLatPU = lgps.gps_latitude;\r\n            job.gpsLongPU = lgps.gps_longitude;\r\n          }\r\n          if (job.mobjobLegNumber == 0) {\r\n            // Possible signature on pickup\r\n            job.mobjobSignat = signat || \"\";\r\n            if (podname) {\r\n              job.mobjobPodName = podname;\r\n              job.mobjobPodTime = new Date().toISOString();\r\n            }\r\n          }\r\n        }\r\n        else\r\n          // Arrive pickup - not used atm\r\n          if (oldStatus == 'PU') {\r\n            job.mobjobStatus = 'Dp';\r\n            job.mobjobTimeDp = Date.now();\r\n            if (job.mobjobLegNumber == 0) {\r\n              // Possible signature on depart pickup\r\n              job.mobjobSignat = signat || \"\";\r\n              if (podname) {\r\n                job.mobjobPodName = podname;\r\n                job.mobjobPodTime = new Date().toISOString();\r\n              }\r\n            }\r\n          }\r\n        if (oldStatus == 'Dp') {\r\n          wasArriveDeliver = true;\r\n          job.mobjobStatus = 'Ad';\r\n          job.mobjobTimeAd = Date.now();\r\n        }\r\n        if (oldStatus == 'Ad') {\r\n          // PC processing - no direct route to DL now - will either be PU or PC until all pods captured\r\n          if (!this.pdaParams.multileg) {\r\n            // TODO - get GPS\r\n            job.mobjobStatus = 'DL';\r\n            var lgps = this.gpsAudit.getLastGPS();\r\n            if (lgps) {\r\n              job.gpsLatDL = lgps.gps_latitude;\r\n              job.gpsLongDL = lgps.gps_longitude;\r\n            }\r\n            // why did we store signature on pickup leg (leg 0)?\r\n            if (job.mobjobLegNumber > 0) {\r\n              job.mobjobSignat = signat || \"\";\r\n              if (podname) {\r\n                job.mobjobPodName = podname;\r\n                job.mobjobPodTime = new Date().toISOString();\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else\r\n          if (oldStatus == 'PC') {\r\n            // if oldStatus is PC it means we've just captured a POD or, if there is \r\n            // a separate signature capture, it means we've just had a deliver event\r\n\r\n            // If we want a separate PC (signature capture) and then a discrete DEL deliver event\r\n            // don't increment podCount as we don't want to complete at this stage\r\n\r\n            // If we were at 'PC' AND we have site config set AND discreteDelSignat is set\r\n            // (last leg is at 'PC' status)\r\n            // we do want to increment podCount because we do want to complete the job now\r\n            if (this.pdaDiscreteDelSignat && !this.discreteDelSignat) {\r\n              // do nothing\r\n            }\r\n            else\r\n              if (this.showDelButtonNoSignat) {\r\n                podCount++;\r\n              }\r\n              else {\r\n                podCount++;\t\t\t// normal default behaviour\r\n              }\r\n            this.log.debug('handleJobStatusChange: ' + job.mobjobSeq + ' oldStatus:' + oldStatus + ' this.showDelButtonNoSignat:' + this.showDelButtonNoSignat + ' podCount:' + podCount);\r\n          }\r\n      }\r\n\r\n      this.mystr = 'handleJobStatusChange:' + job.mobjobSeq + ' updated from ' + oldStatus + ' -> ' + job.mobjobStatus;\r\n      this.log.info(this.mystr);\r\n      console.log('this.mystr:::::' + this.mystr);\r\n      job.save();\t\t// save leg  \r\n      this.jobChangedService.setlastjobedited(true);\r\n    }//For loop for each leg ends here\r\n\r\n    // NOTE - because we don't replicate between the very last PC and setting all to DL the last PC leg goes\r\n    // direct from PU -> DL and therefore does NOT trigger a POD_INFORMATION event on the server\r\n\r\n    // TODO - what is best test for all PODs captured?\r\n    // if all PODs now captured update job to DL (all delivery legs have status PC so now job fully completed)\r\n    if (podCount >= (legCount - 1)) {\r\n      for (var iac = 0; iac < legCount; iac++) {\r\n        var job = this.jobs[iac];\r\n        var oldStatus = job.mobjobStatus;\r\n        // TODO - do we need this test?  or just update every leg regardless?\r\n        if (job.mobjobStatus == 'PU' || job.mobjobStatus == 'PC' || job.mobjobStatus == 'Ad') {\r\n          // TODO - get GPS\r\n          job.mobjobStatus = 'DL';\r\n          var lgps = this.gpsAudit.getLastGPS();\r\n          if (lgps) {\r\n            job.gpsLatDL = lgps.gps_latitude;\r\n            job.gpsLongDL = lgps.gps_longitude;\r\n          }\r\n          job.save();\t\t// save leg         \r\n          this.mystr = 'handleJobStatusChange:DL' + job.mobjobSeq + ' updated from ' + oldStatus + ' -> ' + job.mobjobStatus;\r\n          this.log.info(this.mystr);\r\n          this.jobChangedService.setlastjobedited(true);\r\n        }\r\n      }\r\n    }\r\n\r\n    //If we are here then a Jsea Form is required for a job Pu and Del\r\n    // So now check if is a pickup etc\r\n    if (jseaMaybeRequired && (wasPickup || wasArriveDeliver)) {\r\n      var lstr;\r\n      if (wasPickup)\r\n        lstr = 'PICKUP';\r\n      else\r\n        lstr = 'DELIVER';\r\n      this.jseaService.setJobJseaDetails(this.basejob, this.basejobDate, 'N', lstr, 'JSEA', 1);\r\n      this.navCtrl.setRoot(JseaPage);\r\n      return;\r\n    }\r\n    // After save go back to job list\r\n   // this.navCtrl.pop();\r\n   //this.navCtrl.setRoot(TabsPage);\r\n   this.t.select(0);\r\n   return;\r\n  }//END OF handleJobStatusChange function ends here\r\n\r\n\r\n  // deleteJob = (seqid) => {\r\n  //   this.mystr = 'deleteJob';\r\n  //   this.log.debug(this.mystr);\r\n  //   // delete all legs of current job\r\n  //   for (var leg = 0; leg < this.jobs.length; leg++) {\r\n  //     var job = this.jobs[leg];\r\n  //     job.delete();\r\n  //   }\r\n  // }\r\n\r\n  // addEvent = () => {\r\n  //   this.mystr = 'addEvent';\r\n  //   this.log.debug(this.mystr);\r\n  //   var idProperty = this.utilService.findArrayItemByKey(this.data, \"id\", true);\r\n  //   if (idProperty) {\r\n  //     window.location.href = '#/tab/history/-1/' + idProperty.value + '-New';\r\n  //     // Just navigating to the route: \"history/-1/{jobId}-New\"\r\n  //     // will allow adding a new Event in this Job's Context...\r\n  //   }\r\n  // }\r\n\r\n  // saveJob = () => {\r\n\r\n  //   this.mystr = 'saveJob';\r\n  //   this.log.debug(this.mystr);\r\n  //   this.base.updateItem(this.job, this.data, this.Job, function (results) {\r\n  //     this.job = this.base.currentItem = results;\r\n  //     // The updated (or created) Job is in results...\r\n  //     this.base.bDataChanged = this.bNewItem = false;\r\n  //     // Can't be a New Item anymore and nothing has been changed as yet...\r\n  //     this.data = this.base.currentData = this.combineValuesAndLabels(this.job, this.jobMetadata);\r\n  //     // Set up the Metadata and the Form will show the current state...\r\n  //   }, this.bNewItem)\r\n  // }\r\n\r\n  // generateJobHeader = (item) => {\r\n  //   this.mystr = 'generateJobHeader';\r\n  //   if (this.pdaParams.debug)\r\n  //     this.log.debug(this.mystr);\r\n  //   var interimitem = item[0];\r\n  //   return this.base.generateHeaderForModelInstance(interimitem, this.jobMetadata, '');\r\n  //   // A meaningful Header Title is generated...\r\n  // }\r\n\r\n  jnSyncCallback = (err, conflicts) => {\r\n    if (err)\r\n      this.log.error('jnSyncCallback: err:' + err);\r\n    if (conflicts)\r\n      this.log.error('jnSyncCallback: conflicts:' + conflicts);\r\n  };\r\n\r\n\r\n  openNotesModal(note: {}) {\r\n\r\n    this.notesModal = this.modalController.create(JobDetailNotesPage, { 'note': note });\r\n    this.notesModal.onDidDismiss(result => {\r\n      if (typeof result !== 'undefined') {\r\n        var seqid = result.seqid;\r\n        var noteText = result.noteText;\r\n        this.saveNotes(seqid, noteText);\r\n      }\r\n    });\r\n    this.notesModal.present();\r\n  }\r\n\r\n  enterNotes(seqid, placeholder, formtype) {\r\n    // TODO - do we need to save seqid?  Should all be in job[0]  \r\n    this.note.seqid = seqid;\r\n    this.note.placeholderText = placeholder || \"Enter job notes here\";\r\n    this.note.formtype = formtype || \"\";\r\n    this.openNotesModal(this.note);\r\n  }\r\n\r\n  saveNotes = (seqid, noteText) => {\r\n    var seqid = seqid;\r\n    var note = noteText;\r\n    var ln = new this.LocalNote();\r\n    ln.jnJobNum = this.job[0].mobjobNumber;\r\n    ln.jnJobBday = this.job[0].mobjobBookingDay;\r\n    // prepend formtype if set e.g. \"MULTIDEL:....\"\r\n    if (note.formtype)\r\n      ln.jnText = note.formtype + ':' + note.text;\r\n    else\r\n      ln.jnText = note.text;\r\n    ln.jnDriver = this.pdaParams.getDriverId();\r\n    ln.jnCreateTime = Date.now();\r\n    ln.save();\r\n    this.job_note_sync(this.jnSyncCallback);\r\n\r\n  }\r\n\r\n\r\n\r\n  getCurrentStatusObj = (legStatus, imageCountArr) => {\r\n    for (var i = 0; i < imageCountArr.length; i++) {\r\n      if (imageCountArr[i].jobStatus === legStatus) {\r\n        return imageCountArr[i];\r\n      }\r\n    }\r\n    return { \"jobStatus\": legStatus, \"count\": 0 };\r\n  }\r\n\r\n  getStatusString = (seqid) => {\r\n    var len = this.data.length;\r\n    for (var i = 0; i < len; i++) {\r\n      if (this.data[i].legid === seqid && this.data[i].property === 'mobjobStatus') {\r\n        return (this.data[i].enumValue.label);\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  checkOkForSignat = (seqid) => {\r\n    // check if images taken at this status to allow signature to go ahead\r\n    // This function is called from the signature pad directive \r\n    var retval = true;\t\t\t// default behaviour\r\n    var statusString;\r\n    var legid;\r\n    if (this.pdaMandatoryPhotos) {\r\n      // this.job contains the list of legs - 1st should match seqid\r\n      this.log.debug(\"checkOkForSignat:pdaMandatoryPhotos: leg 0:\" + this.job[0].mobjobSeq + \", seqid:\" + seqid);\r\n      if (this.job[0].mobjobSeq === seqid) {\r\n        retval = false;\r\n        var jobStatus;\r\n        var legCount = this.job.length;\r\n        for (var i = 0; i < legCount; i++) {\r\n          var job = this.job[i];\r\n          jobStatus = job.mobjobStatus;\r\n          legid = job.legid;\r\n          // long status text is stored in this.data\r\n          statusString = this.getStatusString(seqid);\r\n          if (job.mobjobStatus === 'NJ') {\r\n            retval = true;\t\t\t// don't care about NJ\r\n            break;\r\n          }\r\n\r\n          if (typeof job.imageCount !== 'undefined') {\r\n            // We have some images - check if some for this status\r\n            var obj = this.getCurrentStatusObj(job.mobjobStatus, job.imageCount) || {};\r\n            if (obj.count > 0) {\r\n              retval = true;\r\n              break;\t\t\t\t// have at least one image\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (!retval) {\r\n        // no images found - don't allow operator to continue\r\n        var alertPopup = this.alertCtrl.create({\r\n          title: 'No photos yet for : ' + statusString,\r\n          subTitle: \"Please take at least one photo at this stage, before updating the job status\",\r\n          buttons: ['Ok']\r\n        });\r\n        alertPopup.present();\r\n        return;\t\t// the alert is async - return here while popup does its job\r\n      }\r\n    }\r\n\r\n    if (retval)\r\n      this.openSignatureModal(seqid);\r\n  };\r\n\r\n  /*   ionViewWillLeave() {\r\n      this.subscriptions.unsubscribe();\r\n    } */\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/job-details/job-details.ts","import { Http } from '@angular/http';\r\n//import { Injectable, ReflectiveInjector } from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport 'rxjs/add/operator/map';\r\n//import 'reflect-metadata';\r\nimport { ConfigServiceProvider } from '../config-service/config-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { LoggerService } from '../../../shared/sdk/services/custom/logger.service';\r\nimport { LoopBackConfig } from '../../../shared/sdk/lb.config';\r\n\r\nimport { LogServiceInstance } from './log-service-instance';\r\n\r\n/*\r\n  Generated class for the LogServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class LogServiceProvider extends LoggerService {\r\n\r\n  /*  private pdaParamService;\r\n   private configService;\r\n   private loggerService;\r\n   //public http; */\r\n\r\n\r\n  constructor(\r\n\r\n    private loggerService: LoggerService,\r\n    private pdaParamService: PdaparamsServiceProvider,\r\n    private configService: ConfigServiceProvider,\r\n    public http: Http\r\n\r\n    //public context: {}\r\n  ) {\r\n    super();\r\n   \r\n  }\r\n\r\n  seqno = 0;\r\n \r\n  context;\r\n  pdaParams;\r\n  _log;\r\n\r\n /*  enabled(_isEnabled) {\r\n    this.isEnabled = !!_isEnabled;\r\n  }; */\r\n\r\n  logInstance(context) {\r\n    //console.log(\"=========The Driver ID in the logService.ts is ::============\" + context.driver);\r\n    context.ver = this.configService.appConfig.version;\r\n    this.context = context;\r\n    this.pdaParams = this.pdaParamService;\r\n    //context, driverId, logServerIP, logServerPort\r\n    return new LogServiceInstance(this.http,this.context, this.pdaParamService.getDriverId(), this.getlogServerIP(), this.getlogServerPort(), this.pdaParams);\r\n  };\r\n\r\n\r\n  getInstance(context) {\r\n    //return new Logger(context);\r\n    return this.logInstance(context);\r\n  };\r\n\r\n  setContext(context) {\r\n    this.context = context;\r\n  }\r\n  /* supplant(str, o) {\r\n    return str.replace(\r\n      /\\{([^{}]*)\\}/g,\r\n      function (a, b) {\r\n        var r = o[b];\r\n        return typeof r === 'string' || typeof r === 'number' ? r : a;\r\n      }\r\n    );\r\n  };\r\n\r\n  getFormattedTimestamp(date) {\r\n    return this.supplant('{0}:{1}:{2}:{3}', [\r\n      date.getHours(),\r\n      date.getMinutes(),\r\n      date.getSeconds(),\r\n      date.getMilliseconds()\r\n    ]);\r\n  };\r\n  getLogTimestamp(date) {\r\n    return (date.toISOString());\r\n  };\r\n\r\n  getLocalTimestamp(date) {\r\n    var tzo = -date.getTimezoneOffset();\r\n    var dif = tzo >= 0 ? '+' : '-';\r\n    function pad(num) {\r\n      var norm = Math.abs(Math.floor(num));\r\n      return (norm < 10 ? '0' : '') + norm;\r\n    };\r\n    return date.getFullYear()\r\n      + '-' + pad(date.getMonth() + 1)\r\n      + '-' + pad(date.getDate())\r\n      + 'T' + pad(date.getHours())\r\n      + ':' + pad(date.getMinutes())\r\n      + ':' + pad(date.getSeconds())\r\n      + dif + pad(tzo / 60)\r\n      + ':' + pad(tzo % 60);\r\n  };\r\n*/\r\n  getlogServerIP() {\r\n    return (this.configService.appConfig.logServerIP);\r\n  };\r\n\r\n  getlogServerPort() {\r\n    return (this.configService.appConfig.logServerPort);\r\n  };\r\n  /*\r\n    debug(arg: string) {\r\n      if (LoopBackConfig.debuggable())\r\n        console.debug(arg);\r\n    }\r\n    warn(arg: string) {\r\n      if (LoopBackConfig.debuggable())\r\n        console.warn(arg);\r\n    } */\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/log-service/log-service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n/*\r\n  Generated class for the JobChangedServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class JobChangedServiceProvider {\r\n\r\n  constructor(public http: Http) {\r\n    //console.log('Hello JobChangedServiceProvider Provider');\r\n  }\r\n\r\n  lastjobedited = false;\r\n  //Set this in JobsDetailCtrl\r\n\r\n  setlastjobedited = function (arg_tf) {\r\n    this.lastjobedited = arg_tf;\r\n  }\r\n\r\n  //Get this in JobsIndexCtrl\r\n  getlastjobedited = function () {\r\n    return this.lastjobedited;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/job-changed-service/job-changed-service.ts","import { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\n\r\n/*\r\n  Generated class for the FixedQueueServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class FixedQueueServiceProvider {\r\n  queue;\r\n  length;\r\n  fixedSize;\r\n\r\n  constructor() {\r\n    //console.log('Hello FixedQueueServiceProvider Provider');\r\n\r\n  }\r\n\r\n  create(size) {\r\n\r\n    var initialValues = (initialValues || []);\r\n    // Create the fixed queue array value.\r\n    this.queue = Array.apply(null, initialValues);\r\n\r\n    // Store the fixed size in the queue.\r\n    this.queue.fixedSize = size;\r\n\r\n    // Add the class methods to the queue. Some of these have\r\n    // to override the native Array methods in order to make\r\n    // sure the queue length is maintained.\r\n    this.queue.push = this.push;\r\n    this.queue.splice = this.splice;\r\n    this.queue.unshift = this.unshift;\r\n\r\n    // Trim any initial excess from the queue.\r\n    if (this.queue != \"\")\r\n      this.trimTail.call(this.queue);\r\n\r\n    // Return the new queue.\r\n    return this.queue;\r\n  }\r\n\r\n\r\n\r\n  // Trims the queue down to the appropriate size, removing\r\n  // items from the beginning of the internal array.\r\n  trimHead() {\r\n    if (this.length <= this.fixedSize) {\r\n      return;\r\n    }\r\n    Array.prototype.splice.call(this, 0, (this.length - this.fixedSize));\r\n  }\r\n\r\n  // Trims the queue down to the appropriate size, removing\r\n  // items from the end of the internal array.\r\n  trimTail() {\r\n    if (this.length <= this.fixedSize) {\r\n      return;\r\n    }\r\n    Array.prototype.splice.call(this, this.fixedSize, (this.length - this.fixedSize));\r\n  }\r\n\r\n  // Calls the native Array methods followed by a trimming method.\r\n  wrapMethod(methodName, trimMethod) {\r\n    // Create a wrapper that calls the given method.\r\n    function wrapper() {\r\n      // Get the native Array method.\r\n      var method = Array.prototype[methodName];\r\n\r\n      // Call the native method first.\r\n      var result = method.apply(this, arguments);\r\n      // Trim the queue now that it's been augmented.\r\n      trimMethod.call(this);\r\n      // Return the original value.\r\n      return result;\r\n    }\r\n    // Return the wrapper method.\r\n    return wrapper;\r\n  }\r\n\r\n  push = this.wrapMethod(\"push\", this.trimHead);\r\n  splice = this.wrapMethod(\"splice\", this.trimTail);\r\n  unshift = this.wrapMethod('unshift', this.trimTail);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/fixed-queue-service/fixed-queue-service.ts","import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, AlertController, Tabs, ModalController } from 'ionic-angular';\r\n\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\n\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { DeviceFeedback } from '@ionic-native/device-feedback';\r\nimport { Media, MediaObject } from '@ionic-native/media';\r\n\r\nimport { ChangeDisplayFromPipe } from '../../pipes/change-display-from.pipe';\r\nimport { ChangeDisplaySvcPipe } from '../../pipes/change-display-svc.pipe';\r\nimport { ChangeDisplayToPipe } from '../../pipes/change-display-to.pipe';\r\nimport { DisplayStatusDetailPipe } from '../../pipes/display-status-detail.pipe';\r\n\r\n\r\nimport { LogServiceProvider } from '../../providers/log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../../providers/siteconfig-service/siteconfig-service';\r\nimport { BaseServiceProvider } from '../../providers/base-service/base-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\nimport { JseaServiceProvider } from '../../providers/jsea-service/jsea-service';\r\nimport { MessageServiceProvider } from '../../providers/message-service/message-service';\r\nimport { EventServiceProvider } from '../../providers/event-service/event-service';\r\nimport { SodServiceProvider } from '../../providers/sod-service/sod-service';\r\nimport { BackgroundGeolocationServiceProvider } from '../../providers/background-geolocation-service/background-geolocation-service';\r\nimport { PlatformReadyServiceProvider } from '../../providers/platform-ready-service/platform-ready-service';\r\nimport { SyncServiceProvider } from '../../providers/sync-service/sync-service';\r\nimport { ExitServiceProvider } from '../../providers/exit-service/exit-service';\r\nimport { GpsAuditServiceProvider } from '../../providers/gps-audit-service/gps-audit-service';\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { UtilServiceProvider } from '../../providers/util-service/util-service';\r\nimport { JobChangedServiceProvider } from '../../providers/job-changed-service/job-changed-service';\r\nimport { JobReplicationServiceProvider } from '../../providers/job-replication-service/job-replication-service';\r\nimport { ConnectivityMonitorProvider } from '../../providers/connectivity-monitor/connectivity-monitor';\r\nimport { PushServiceProvider } from '../../providers/push-service/push-service';\r\n\r\ndeclare const lbclient: any;\r\n\r\nimport { JseaPage } from '../jsea/jsea';\r\nimport { JobDetailsPage } from '../job-details/job-details';\r\nimport { TabsPage } from '../tabs/tabs';\r\nimport { SignaturePage } from '../signature/signature';\r\n\r\n\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HomePage {\r\n\r\n  private sub1: Subscription;\r\n  private sub2: Subscription;\r\n  private sub3: Subscription;\r\n  private sub4: Subscription;\r\n  private sub5: Subscription;\r\n  private sub6: Subscription;\r\n  private sub7: Subscription;\r\n  private sub8: Subscription;\r\n\r\n  t: Tabs = this.navCtrl.parent;\r\n  jobs = [];\r\n  tjobs = [];\r\n  jobsnum: any;\r\n  username: any;\r\n  jobStatuses;\r\n  podStatuses: boolean;\r\n  jsea_retval;\r\n  pda_pickup_all: boolean;\r\n  fullStatuses: boolean;\r\n  pda_depart_all: boolean;\r\n  pda_deliver_all: boolean;\r\n  displayFrom: string;\r\n  displayTo: string;\r\n  fontSize: string;\r\n  newMessageCount: number;\r\n  _syncfilter;\r\n  syncfilter;\r\n  _allfilter;\r\n  titleWithTotal;\r\n  jobChecked: number;\r\n  driverId: number;\r\n  sortKey;\r\n  displayDate;\r\n  mystr = '';\r\n  notificationCount = 0;\r\n  jobMetadata;\r\n  podname;\r\n  signature;\r\n  updateStatus: boolean = false;\r\n  localConflicts = [];\r\n  isOnline;\r\n  networkType;\r\n  logstr: string;\r\n\r\n  RemoteJob = lbclient.models.Job;\r\n  Job = lbclient.models.LocalJob;\r\n  _localfilter =\r\n    {\r\n      \"where\": { and: [{ \"mobjobDriver\": this.driverId }, { \"mobjobLegNumber\": 0 }, { \"mobjobStatus\": { \"neq\": \"DL\" } }] },\r\n      \"order\": 'mobjobStatus DESC'\r\n    };\r\n  filter = Object.assign({}, this._localfilter);\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.driverId, fn: 'HomePage' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  constructor(public navCtrl: NavController, navParams: NavParams,\r\n    private pdaParams: PdaparamsServiceProvider, private siteConfig: SiteconfigServiceProvider,\r\n    private logger: LogServiceProvider, private base: BaseServiceProvider,\r\n    private sharedService: SharedServiceProvider, private jseaService: JseaServiceProvider,\r\n    private messageService: MessageServiceProvider, private eventService: EventServiceProvider,\r\n    private sodService: SodServiceProvider, private utilService: UtilServiceProvider,\r\n    private platformReady: PlatformReadyServiceProvider,\r\n    private backgroundGeolocationService: BackgroundGeolocationServiceProvider,\r\n    private alertCtrl: AlertController, private exitService: ExitServiceProvider,\r\n    private deviceFeedback: DeviceFeedback, private configService: ConfigServiceProvider,\r\n    private gpsAudit: GpsAuditServiceProvider, public modalController: ModalController,\r\n    public syncService: SyncServiceProvider,\r\n    public jobChangedService: JobChangedServiceProvider, private media: Media,\r\n    public jobReplicationService: JobReplicationServiceProvider,\r\n    private cd: ChangeDetectorRef, private conMonService: ConnectivityMonitorProvider,\r\n    private pushService: PushServiceProvider) {\r\n\r\n    console.log(\"HomePage loading...\");\r\n\r\n    this.driverId = this.pdaParams.getDriverId();\r\n\r\n    if (typeof (this.sharedService.loginFlag) == 'undefined')\r\n      this.sharedService.loginFlag = this.pdaParams.isDrvLoggedOn();\r\n\r\n    this.log.debug(\"syncInProgress:\" + this.syncService.getSyncInProgress());\r\n    this.syncService.setSyncInProgress(false);\r\n    this.sharedService.setSyncInProgress(false);\r\n\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n\r\n    this.jobStatuses = {};\r\n    this.podStatuses = true;\r\n    this.jobChecked = 0;\r\n    this.username = navParams.data;\r\n    this.updateStatus = false;\r\n    this.jobStatuses = {};\r\n    this.podStatuses = true;\r\n    this.jobChecked = 0;\r\n    this.jobMetadata = this.sharedService.getJobMetaData();\r\n\r\n\r\n    this.jsea_retval = this.jseaService.getJseaConfig();\r\n    this.log.info('jsea_retval = ' + this.jsea_retval);\r\n\r\n    //When this is called at present it can 1 of 2 situations. A SOD JSEA is required or a per job SOD is required.\r\n    //SOD -- Start of day.The service knows which one. if its a per job one then    \r\n    if (this.jsea_retval === 'SOD_NO') {\r\n      this.navCtrl.setRoot(JseaPage);\r\n    }\r\n\r\n    if (this.sharedService.testing) {\r\n      this.pda_pickup_all = true;\r\n      this.fullStatuses = false;\r\n      this.pda_depart_all = true;\r\n      this.pda_deliver_all = true;\r\n    }\r\n    else {\r\n      this.pda_pickup_all = (this.siteConfig.getSiteConfigValue('PDA_PICKUP_ALL') == 'Y');\r\n      //New functionality to get arrive/depart pickup/delivery times      \r\n      this.fullStatuses = (this.pdaParams.pda_full_statuses || (this.siteConfig.getSiteConfigValue('PDA_FULL_STATUSES') == 'Y'));\r\n      this.pda_depart_all = (this.pdaParams.pda_depart_all || (this.siteConfig.getSiteConfigValue('PDA_DEPART_ALL') == 'Y'));\r\n      this.pda_deliver_all = (this.pdaParams.pda_deliver_all || (this.siteConfig.getSiteConfigValue('PDA_DELIVER_ALL') == 'Y'));\r\n    }\r\n\r\n\r\n    this.sortKey = this.siteConfig.getSiteConfigValue('PDA_SORT_COL1') || 'mobjobBookingDay';\r\n    this.displayDate = this.siteConfig.getSiteConfigValue('PDA_DISPLAY_DATE') || 'mobjobBookingDay';\r\n    this.displayFrom = this.siteConfig.getSiteConfigValue('PDA_DISPLAY_FROM') || 'mobjobSuburb';\r\n    this.displayTo = this.siteConfig.getSiteConfigValue('PDA_DISPLAY_TO') || 'mobjobToSuburb';\r\n    this.fontSize = this.siteConfig.getSiteConfigValue('PDA_ROW1_FONT_SIZE') || '18px';\r\n\r\n    // initialise the current new message count in this scope\r\n    this.newMessageCount = this.messageService.getNewMesssageCount();\r\n    this._syncfilter = {\r\n      \"where\": {\r\n        \"and\": [\r\n          { \"mobjobDriver\": this.driverId },\r\n          /*{\"mobjobStatus\": { \"inq\": [ \"NJ\",\"AC\",\"PU\"] } }*/\r\n          { \"mobjobStatus\": { \"neq\": \"DL\" } }\r\n        ]\r\n      }\r\n    };\r\n\r\n    if (this.pdaParams.syncDL) {\r\n      this._syncfilter = { \"where\": { \"mobjobDriver\": this.driverId } };\r\n    }\r\n\r\n    this.syncfilter = Object.assign({}, this._syncfilter);\r\n\r\n    this._localfilter =\r\n      {\r\n        \"where\": { and: [{ \"mobjobDriver\": this.driverId }, { \"mobjobLegNumber\": 0 }, { \"mobjobStatus\": { \"neq\": \"DL\" } }] },\r\n        \"order\": 'mobjobStatus DESC'\r\n      };\r\n\r\n    this.filter = Object.assign({}, this._localfilter);\r\n\r\n    this._allfilter =\t\t// same as localfilter but get ALL legs for a job - used for bulk updating\r\n      {\r\n        \"where\": { and: [{ \"mobjobDriver\": this.driverId }, { \"mobjobStatus\": { \"neq\": \"DL\" } }] },\r\n        \"order\": 'mobjobStatus DESC'\r\n      };\r\n\r\n    /*  }//End of constructor()\r\n   \r\n     ionViewWillEnter() { */\r\n\r\n    this.driverId = this.pdaParams.getDriverId();\r\n\r\n    // Monitor for any new messages coming in.\r\n    this.sub1 = this.sharedService.messageToDriver.subscribe(payload => {\r\n      this.newMessageCount = this.messageService.getNewMesssageCount();\r\n    });\r\n\r\n    // Monitor the connection\r\n    this.sub2 = this.conMonService.isConnected.subscribe(res => {\r\n      this.isOnline = res;\r\n    });\r\n\r\n    // Monitor the network type\r\n    this.sub3 = this.conMonService.networkType.subscribe(res => {\r\n      this.networkType = res;\r\n    });\r\n\r\n    // Monitor NewJob allocations to the driver.\r\n    this.sub4 = this.sharedService.NEWJOB.subscribe(payload => {\r\n      // Nothing much to do here other than make a noise and refresh the jobs list\r\n      this.notificationCount++;\r\n      this.log.info(payload.platform + \":\" + event + ':' + JSON.stringify(payload));\r\n\r\n      localStorage.setItem(\"RefreshPage\", 'true');\r\n      this.refresh();\r\n      // NOTE - not intuitive - if app is asked to play sound it has been done by the notification service \r\n      // already so DO NOT do it again here\r\n      if (!payload.playsound) {\r\n        var notificationSnd = this.getSoundForPayload(payload);\r\n        notificationSnd.play();\r\n      }\r\n    });\r\n\r\n    // Monitor the Job Cancellations\r\n    this.sub5 = this.sharedService.CANCEL.subscribe(payload => {\r\n      this.notificationCount++;\r\n      this.log.info(payload.platform + \":\" + event + ':' + JSON.stringify(payload));\r\n      // Check For Cancellation and then delete job \r\n      if (typeof payload.data != \"undefined\") {\r\n        // Belt and braces - we shouldn't get to the event handler if it's not a cancel\r\n        if (payload.data.type == \"CANCEL\") {\r\n          var baseJobNo = payload.data.baseJob;\r\n          var bookingDay = payload.data.bookingDay || 0;\r\n          // delete from local storage and resync - if we don't do this we get a conflict - don't know why\r\n          this.deleteLegs(baseJobNo, bookingDay);\r\n          if (!payload.playsound) {\r\n            var notificationSnd = this.getSoundForPayload(payload);\r\n            notificationSnd.play();\r\n          }\r\n\r\n          //Reload the page to refresh the deleted last remaining job\r\n          //this.refresh();\r\n          //this.sharedService.setCancelNotif(true);\r\n          localStorage.setItem(\"RefreshPage\", 'true');\r\n          //this.navCtrl.setRoot(this.navCtrl.getActive().component);\r\n          this.refresh();\r\n\r\n        }\r\n        else {\r\n          // unknown payload type - just refresh\r\n          this.refresh();\r\n        }\r\n      }\r\n      else {\r\n        // No specific payload data - just refresh\r\n        this.refresh();\r\n      }\r\n    });\r\n\r\n    // Monitor the app resumes.\r\n    this.sub6 = this.sharedService.RESUME.subscribe(event => {\r\n      // Nothing much to do here other than refresh the jobs list\r\n      this.notificationCount++;\r\n      // In testing we managed to do a sync start, pause app, resume without sync finish\r\n      // which then caused all buttons to be disabled and no more syncs to happen\r\n      this.syncService.setSyncInProgress(false);\t\t// not syncing now\r\n      this.log.info(\"Received event:\" + event + ': calling refresh function');\r\n      this.refresh();\r\n    });\r\n\r\n\r\n    this.sub7 = this.sharedService.DESTROY.subscribe(() => {\r\n      this.Job.removeAllListeners('conflicts');\r\n      this.refresh();\r\n    });\r\n\r\n    // TODO - we should store messages (maybe last x) to be viewed by driver\r\n    // GCM messages come in with an event property set to 'message' with the message itself in the message property\r\n    // APN messages come in without an event type property so we need to simply reference the message \r\n    // pushService will add the platform to the notification so we can appropriate action\r\n    this.sub8 = this.sharedService.pushNotificationReceived.subscribe(notification => {\r\n      this.notificationCount++;\r\n      this.log.info('notification received in pushNotificationReceived subscription::' + JSON.stringify(notification.payload));\r\n      var platform = notification.platform;\r\n      this.log.info(platform + \":pushNotificationReceived:\" + notification.event);\r\n      var message = notification.message;\r\n      switch (platform) {\r\n        case 'Android':\r\n          switch (notification.event) {\r\n            case 'message':\r\n              // notification.message is a string\r\n              // notification.payload is a JSON object - not always supplied\r\n              // TODO - double payload - one added by GCM?  can we make this more logical?\r\n              var payload = notification.payload.payload;\r\n              // Check For Cancellation and then delete job \r\n              if (typeof payload.data != \"undefined\") {\r\n                // if we have a payload then do something with it\r\n                if (payload.data.type == \"CANCEL\") {\r\n                  var baseJobNo = payload.data.baseJob;\r\n                  var bookingDay = payload.data.bookingDay || 0;\r\n                  // delete from local storage and resync - if we don't do this we get a conflict - don't know why\r\n                  this.deleteLegs(baseJobNo, bookingDay);\r\n                }\r\n                else {\r\n                  // unknown payload type - just refresh\r\n                  this.refresh();\r\n                }\r\n              }\r\n              else {\r\n                // No specific payload data - just refresh\r\n                this.refresh();\r\n              }\r\n              break;\r\n\r\n            default:\r\n              this.log.info(platform + \":Unhandled notification.event:\" + notification.event);\r\n              break;\r\n          }\r\n          break;\r\n\r\n        case 'iOS':\r\n          // TODO - we need to check the correct property - notification.type?\r\n          switch (message.type) {\r\n            case 'CANCEL':\r\n              var baseJobNo = message.baseJob;\r\n              var bookingDay = message.bookingDay || 0;\r\n              this.deleteLegs(baseJobNo, bookingDay);\r\n              break;\r\n            default:\r\n              // Probably new work - refresh\r\n              this.log.info(platform + \":Unhandled message.type:\" + message.type);\r\n              this.refresh();\r\n              break;\r\n          }\r\n          break;\r\n\r\n        default:\r\n          this.log.info(platform + \":Unhandled platform:\" + platform);\r\n          break;\r\n      };\r\n    });\r\n\r\n  }//End of constructor()\r\n\r\n  ionViewWillEnter() {\r\n    if (this.isOnline) {\r\n      if (this.pdaParams.jobdisplay) {\r\n        // getJobs() will load from local storage while we wait for the sync to happen\r\n        // this.getJobs();\r\n        this.refresh();\r\n      }\r\n\r\n      //Here someone has either changed a status on the job detail or just looked or its a straight upload\r\n      if (this.jobChangedService.getlastjobedited() == false) {\r\n        //this.getJobs();\r\n        this.refresh();\r\n      }\r\n      else {\r\n        this.jobChangedService.setlastjobedited(false);\r\n        this.refresh();\r\n      }\r\n\r\n      // if we are connected to the network then this will sync and the callback will load the jobs after sync\r\n      this.log.debug(\"MAIN PAGE SYNC: START (will give a log in hybrid sync to say SYNC:START as well eg 2) \");\r\n      //console.log(\"MAIN PAGE SYNC: START (will give a log in hybrid sync to say SYNC:START as well eg 2) \");\r\n      this.sharedService.setSyncInProgress(false);\r\n      this.syncfilter = Object.assign({}, this._syncfilter);//angular.copy(_syncfilter);\r\n      //Use hybrid Sync      \r\n      this.syncService.setCallingFunc(\"HOME.TS->MAIN PAGE SYNC\");\r\n      this.syncService.hybridSync(this.onChange, this.syncfilter);\r\n\r\n    } else {\r\n      // If we are not connected to the network just load jobs from local storage\r\n      //this.getJobs();\r\n      this.refresh();\r\n    }\r\n\r\n    // Conflict resolution \r\n    this.Job.on('conflicts', (conflicts) => {\r\n      this.localConflicts = conflicts;\r\n      this.log.error(conflicts.length + \" conflicts:\" + JSON.stringify(conflicts));\r\n      var uconflicts = this.removeDuplicates(conflicts, 'modelId');\r\n      this.log.debug(uconflicts.length + \" uconflicts:\" + JSON.stringify(uconflicts));\r\n      conflicts.forEach((conflict) => {\r\n        conflict.type((err, type) => {\r\n          conflict.type = type;\r\n          // This appears to give us the model data (i.e. the Job) for the conflict\r\n          conflict.models((err, source, target) => {\r\n            conflict.source = source;\r\n            conflict.target = target;\r\n            conflict.manual = new conflict.SourceModel(source || target);\r\n            // log the conflict details\r\n            this.log.error(\"conflicts: source:\" + JSON.stringify(conflict.source));\r\n            this.log.error(\"conflicts: target:\" + JSON.stringify(conflict.target));\r\n            // Maybe simply clobber the remote end with the local data\r\n            // as resolveUsingSource doesn't appear to do what we want\r\n            if (conflict.source) {\r\n              this.log.error(\"conflicts: NOW CALLING RemoteJob.upsert()\");\r\n              this.RemoteJob.upsert(conflict.source, (err, model) => {\r\n                if (err)\r\n                  this.log.error(\"upsert:error:\" + JSON.stringify(err));\r\n                if (model)\r\n                  this.log.info(\"upsert: model:\" + JSON.stringify(model));\r\n              });\r\n            }\r\n\r\n          });\r\n\r\n          // This functions gives us change model data for the conflict e.g. prev/rev etc\r\n          conflict.changes((err, source, target) => {\r\n            conflict.sourceChange = source;\r\n            conflict.targetChange = target;\r\n            var sourceType = conflict.sourceChange.type();\r\n            var targetType = conflict.targetChange.type();\r\n            // log the conflict details\r\n            this.log.error(\"conflicts: source type:\" + sourceType + \", sourceChange:\" + JSON.stringify(conflict.sourceChange));\r\n            this.log.error(\"conflicts: target type:\" + targetType + \", targetChange:\" + JSON.stringify(conflict.targetChange));\r\n            // automatically resolve conflicts\r\n            // If source is update and target is delete, then a job has been completed\r\n            // on the server and should no longer be on the client so auto resolve this\r\n            // (we still don't know why this happens though.)\r\n            if (sourceType == 'update' && targetType == 'delete') {\r\n              conflict.resolveUsingTarget(this.refreshConflicts);\r\n            }\r\n            else {\r\n              //Override with what client has done\r\n              this.log.error(\"conflicts: used to NOW CALLING RESOLVE USING SOURCE\");\r\n            }\r\n          });\r\n\r\n        });\r\n\r\n      });\r\n    });\r\n    /*\r\n       * resolveConflictsInClient here refers to the loopback client portion of the code NOT\r\n       * the client app.  We don't want to process conflicts austomatically in the loopback\r\n       * code as we have an event handler in this controller which takes care of things\r\n       */\r\n    this.jobReplicationService.conflicts.resolveConflictsInClient =\r\n      (this.pdaParams.pda_client_conflicts || (this.siteConfig.getSiteConfigValue('PDA_CLIENT_CONFLICTS') == 'Y'));\r\n\r\n\r\n  }//End of ionViewWillEnter()\r\n\r\n\r\n  showDetail = (mobjobSeq) => {\r\n    this.sharedService.setJobId(mobjobSeq);\r\n    this.navCtrl.push(JobDetailsPage, {\r\n      jobs: this.jobs\r\n    });\r\n  }\r\n\r\n  sortFunction = (a, b) => {\r\n    if (a[this.sortKey] > b[this.sortKey])\r\n      return 1;\r\n    if (a[this.sortKey] < b[this.sortKey])\r\n      return -1;\r\n    return 0;\r\n  }\r\n\r\n\r\n  logonDriver = () => {\r\n    this.pdaParams.logonDriver();\r\n    this.eventService.sendMsg('LOGON', '');\r\n    this.sodService.checkDoSodAction('FIRST_RESUME');\t\t\t\t// check if first for the day\r\n    // Dump local storage at logon time - debug aid\r\n    this.messageService.dumpLocalStorage();\r\n    this.cd.reattach();\r\n    this.sharedService.loginFlag = this.pdaParams.isDrvLoggedOn();\r\n    if (this.platformReady.isPlatformReady()) {\r\n      this.backgroundGeolocationService.start();\r\n    }\r\n  }\r\n\r\n\r\n  logoffDriver = () => {\r\n    this.pdaParams.logoffDriver();\r\n    this.eventService.sendMsg('LOGOFF', '');\r\n    this.cd.reattach();\r\n    this.sharedService.loginFlag = this.pdaParams.isDrvLoggedOn();\r\n\r\n    if (this.platformReady.isPlatformReady()) {\r\n      this.backgroundGeolocationService.stop();\r\n    }\r\n  }\r\n\r\n  isDrvLoggedOff() {\r\n    return !this.sharedService.loginFlag;\r\n  }\r\n\r\n\r\n  isDrvLoggedOn() {\r\n    return this.sharedService.loginFlag;\r\n  }\r\n\r\n  //This is from LOCAL STORAGE\r\n  getJobs() {\r\n    this.jobStatuses = {};\r\n    this.filter = Object.assign({}, this._localfilter);\r\n    this.Job.find(this.filter, (err, jobs) => {\r\n      // not syncing now\r\n      this.syncService.setSyncInProgress(false);\r\n      // TODO - need to check error and only show jobs if no error\r\n      if (!(this.utilService.isEmpty(jobs))) {\r\n        this.jobs = jobs;\r\n        if (this.sortKey && this.sortKey != '')\r\n          this.jobs.sort(this.sortFunction);\r\n        var syncRequired = 0;\r\n        for (var i = 0; i < this.jobs.length; i++) {\r\n          this.base.convertDates(this.jobs[i], this.jobMetadata);\r\n          // Add checked property for possible multi delivery\r\n          this.jobs[i].checked = false;\r\n          var job = this.jobs[i];\r\n          job.displayDate = job[this.displayDate];\r\n          job.displayFrom = job[this.displayFrom];\r\n          if (job.mobjobStatus == 'UJ') {\r\n            job.mobjobStatus = 'NJ';\r\n            job.onDeviceTime = new Date().toISOString();\r\n            this.mystr = 'getJobs:' + job.mobjobSeq + ' updated from ' + 'UJ' + ' -> ' + job.mobjobStatus;\r\n            this.log.info(this.mystr);\r\n            job.save();\r\n            syncRequired++;\r\n          }\r\n\r\n          // keep a count of the various job statuses\r\n          if (this.jobStatuses[job.mobjobStatus]) {\r\n            this.jobStatuses[job.mobjobStatus] += 1;\r\n          }\r\n          else\r\n            this.jobStatuses[job.mobjobStatus] = 1;\r\n          if (!job.mobjobHasPod && (job.mobjobStatus == 'PU' || job.mobjobStatus == 'Ad')) {\r\n            this.podStatuses = false;\r\n          }\r\n        }//end of the for loop\r\n\r\n        //Make sure changes in jobs are reflected in the view.      \r\n        if (syncRequired) {\r\n          this.sharedService.setSyncInProgress(true);\r\n          this.syncfilter = Object.assign({}, this._syncfilter); //angular.copy(_syncfilter);\r\n          this.syncService.setCallingFunc(\"Home.ts->Job.find\");\r\n          this.syncService.hybridSync(this.onChange, this.syncfilter);\r\n        }\r\n        this.titleWithTotal = \"Jobs: \" + \" (\" + this.jobs.length + \")\";\r\n      }\r\n     /*  if (!this.cd['destroyed']) {\r\n        this.cd.detectChanges();\r\n      } */\r\n      //if (this.sharedService.getCancelNotif()) {\r\n      if (localStorage.getItem('RefreshPage') == 'true') {\r\n        //this.sharedService.setCancelNotif(false);\r\n        localStorage.setItem(\"RefreshPage\", 'false');\r\n        this.freeupResources();\r\n        this.navCtrl.setRoot(this.navCtrl.getActive().component);\r\n      }\r\n    });\r\n  }//getJobs() ends here\r\n\r\n\r\n  //  START - New code for syncing\r\n  onChange = (err, conflicts) => {\r\n    if (err)\r\n      this.log.error(JSON.stringify(err));\r\n    if (conflicts && conflicts.length)\r\n      this.log.debug(JSON.stringify(conflicts));\r\n    this.pushService.registerForPush();\r\n    this.sharedService.setSyncInProgress(false);\r\n    this.syncService.setSyncInProgress(false);\t\t// not syncing now\r\n    this.log.debug(\"SYNC: FINISH\");\r\n    this.jobStatuses = {};\r\n    // We were getting the following error.  Where does the order come from?  reset filter here for now\r\n    // Error: The order {\"key\":\"mobjobSeq\",\"reverse\":1} is not valid\r\n    this.filter = Object.assign({}, this._localfilter);\r\n    //Job.find() retrieves from LocalJob - only leg zeroes so as to display a job list (not all legs)       \r\n    this.getJobs();\r\n  }//onChange() ends here \r\n\r\n\r\n  refresh() {\r\n    this.syncfilter = Object.assign({}, this._syncfilter);\r\n    this.syncService.setCallingFunc(\"Home.ts->PushNotificationReceived\");\r\n    this.syncService.hybridSync(this.onChange, this.syncfilter);\r\n  }\r\n\r\n  deleteLegs = (baseJobNo, bookingDay) => {\r\n    var delfilter = {};\r\n    if (this.pdaParams.jobDetailOneDayOnly && bookingDay > 0) {\r\n      // convoluted (maybe) way to get job date with no hh/mm/ss into date object\r\n      var year = Math.round(bookingDay / 10000);\r\n      var mon = Math.round((bookingDay % 10000) / 100);\r\n      var day = Math.round((bookingDay % 100));\r\n      var jobDateFilter = new Date();\r\n      jobDateFilter.setUTCFullYear(year);\r\n      jobDateFilter.setUTCMonth(mon - 1);\t\t\t// 0 - 11\r\n      jobDateFilter.setUTCDate(day);\r\n      // Dates are stored UTC so h/m/s all zero\r\n      jobDateFilter.setUTCHours(0);\r\n      jobDateFilter.setUTCMinutes(0);\r\n      jobDateFilter.setUTCSeconds(0);\r\n      jobDateFilter.setUTCMilliseconds(0);\r\n      delfilter = { \"where\": { \"mobjobBasejobNum\": baseJobNo, \"mobjobBookingDay\": jobDateFilter } };\r\n    }\r\n    else {\r\n      delfilter = { \"where\": { \"mobjobBasejobNum\": baseJobNo } };\r\n    }\r\n    this.log.debug(\"About to delete legs delfilter:\" + JSON.stringify(delfilter));\r\n\r\n    this.Job.find(delfilter, (err, jobs) => {\r\n      var len = jobs.length;\r\n      this.log.debug(\"deleting:\" + len + \" legs\");\r\n      for (var leg = 0; leg < len; leg++) {\r\n        var job = jobs[leg];\r\n        this.log.debug(\"delete leg:\" + leg + \" job:\" + job.mobjobSeq);\r\n        job.delete();\r\n      }\r\n\r\n      //this.getJobs();\r\n    });\r\n\r\n  }//deleteLegs() ends\r\n\r\n\r\n  getSoundForPayload(payload) {\r\n    var platform = payload.platform;\r\n    var evtype = payload.type;\r\n    var sound = \"\";\r\n    var notificationSnd = {};\r\n    var file: MediaObject;\r\n\r\n    switch (platform) {\r\n      case 'Android':\r\n        sound = \"/android_asset/www/assets/audio/notification.mp3\";\r\n        break;\r\n      case 'iOS':\r\n        if (payload.hasOwnProperty('sound')) {\r\n          sound = payload.sound;\r\n        }\r\n        else {\r\n          // NOTE - this does not appear to work - ensure we send correct sound property for iOS\r\n          sound = \"file://www/audio/notification.aiff\";\r\n        }\r\n        break;\r\n      default:\r\n        sound = 'default';\r\n        break;\r\n    };\r\n\r\n    this.log.debug(platform + \":\" + evtype + \":sound now:[\" + sound + \"]\");\r\n    if (sound != \"\") {\r\n      this.log.debug('sound:[' + sound + ']');\r\n      file = this.media.create(sound);\r\n    }\r\n    return file;\r\n  } //getSoundForPayload ends\r\n\r\n\r\n  getwork() {\r\n    this.syncfilter = Object.assign({}, this._syncfilter);\r\n    this.jobReplicationService.sync(this.callback, this.syncfilter);\r\n  };\r\n\r\n  callback = (err) => {\r\n\r\n  }\r\n\r\n  connected() {\r\n    return this.isOnline;\r\n  };\r\n  reload() {\r\n    this.getJobs();\r\n  };\r\n\r\n  clearLocalStorage() {\r\n    localStorage.removeItem('osc-local-db');\r\n  };\r\n\r\n  resolveCallBack = (err) => {\r\n    if (err)\r\n      this.log.debug('resolveCallBackErr:[' + err + ']');\r\n\r\n  }\r\n\r\n  // Remove duplicates from an array of objects in javascript  \r\n  removeDuplicates(arr, prop) {\r\n    var obj = {};\r\n    for (var i = 0, len = arr.length; i < len; i++) {\r\n      if (!obj[arr[i][prop]]) obj[arr[i][prop]] = arr[i];\r\n    }\r\n    var newArr = [];\r\n    for (var key in obj) newArr.push(obj[key]);\r\n    return newArr;\r\n  };\r\n\r\n  resolveUsingSource = (conflict) => {\r\n    conflict.resolveUsingSource(this.refreshConflicts);\r\n  };\r\n\r\n  resolveUsingTarget = (conflict) => {\r\n    if (conflict.targetChange.type() === 'delete') {\r\n      conflict.SourceModel.deleteById(conflict.modelId, this.refreshConflicts);\r\n    } else {\r\n      var m = new conflict.SourceModel(conflict.target);\r\n      m.save(this.refreshConflicts);\r\n    }\r\n  };\r\n\r\n  resolveManually = (conflict) => {\r\n    conflict.manual.save((err) => {\r\n      if (err) return this.errorCallback(err);\r\n      conflict.resolve(this.refreshConflicts);\r\n    });\r\n  };\r\n\r\n  refreshConflicts = (err) => {\r\n    if (err) {\r\n      this.log.error(\"refreshConflicts:\" + err);\r\n    }\r\n    this.localConflicts = [];\r\n    this.syncfilter = Object.assign({}, this._syncfilter);\r\n    this.syncService.setCallingFunc(\"Home.ts->refreshConflicts\");\r\n    this.syncService.hybridSync(this.onChange, this.syncfilter);\r\n  };\r\n\r\n\r\n  full_sync_and_load = () => {\r\n    localStorage.removeItem('osc-local-db');\r\n    this.syncfilter = Object.assign({}, this._syncfilter);\r\n    this.jobReplicationService.sync(this.onChange, this.syncfilter);\r\n  }\r\n\r\n\r\n  multiAccept() {\r\n    this.updateSelectedJobs('NJ');\r\n  }\r\n\r\n  multiPickup() {\r\n    this.updateSelectedJobs('AC');\r\n  }\r\n\r\n  multiDepartPickup() {\r\n    this.updateSelectedJobs('PU');\t\t\t// PDA_FULL_STATUSES    \r\n  }\r\n\r\n  errorCallback(err) {\r\n    if (err) throw err;\r\n  }\r\n\r\n  updateSelectedJobs = (oldstatus) => {\r\n    this.updateStatus = false;\r\n    var newstatus = 'XX';\r\n    var syncRequired = 0;\r\n\r\n    if (this.pdaParams.isDrvLoggedOff()) {\r\n      let alertPopup = this.alertCtrl.create({\r\n        title: 'Log On/Off Issue',\r\n        subTitle: \"Please Log on to action jobs\",\r\n        buttons: ['OK']\r\n      });\r\n      alertPopup.present();\r\n      return;\r\n    }\r\n    // read all legs for this driver's jobs (no need to put into scope though?)\r\n    //var all_legs_filter = angular.copy(_allfilter);\r\n    var all_legs_filter = Object.assign({}, this._allfilter);\r\n    this.sharedService.setSyncInProgress(this.syncService.getSyncInProgress());\r\n    // TODO - template buttons use this - should be checking syncService\r\n    if (oldstatus === 'NJ')\r\n      newstatus = 'AC';\r\n    if (oldstatus === 'AC')\r\n      newstatus = 'PU';\r\n    if (oldstatus === 'PU')\t\t\t\t\t// PDA_FULL_STATUSES\r\n      newstatus = 'Dp';\r\n\r\n    this.RemoteJob.find(all_legs_filter, (err, jobs) => {\r\n      var len = jobs.length;\r\n      var logstr = '';\r\n      this.tjobs = jobs;\r\n      // update many jobs at once from e.g. NJ -> AC, or AC -> PU\r\n      // TODO - will need to only update selected jobs rather than all at a particular status\r\n      // TODO - cater for multi leg jobs when selecting by click rather than all\r\n      var flag = 0;;\r\n      for (var i = 0; i < len; i++) {\r\n        // TODO - check if specific job is selected via checkbox on screen\r\n        var job = this.tjobs[i];\r\n\r\n        if (job.mobjobStatus === oldstatus && newstatus != 'XX') {\r\n          flag++;\r\n          job.mobjobStatus = newstatus;\r\n\r\n          // Also set appropriate timestamp\r\n          switch (job.mobjobStatus) {\r\n            case 'AC':\r\n              job.mobjobTimeAC = Date.now();\r\n              break;\r\n            case 'PU':\r\n              job.mobjobTimePU = Date.now();\r\n              var lgps = this.gpsAudit.getLastGPS();\r\n              if (lgps) {\r\n                job.gpsLatPU = lgps.gps_latitude;\r\n                job.gpsLongPU = lgps.gps_longitude;\r\n              }\r\n              break;\r\n            case 'Dp':\r\n              job.mobjobTimeDp = Date.now();\r\n              break;\r\n          }\r\n          job.save();\r\n          logstr = 'updateSelectedJobs:' + job.mobjobSeq + ' updated from ' + oldstatus + ' -> ' + job.mobjobStatus;\r\n          this.log.info(logstr);\r\n          syncRequired++;\r\n        }\r\n      }//Loop ends;\r\n\r\n      // resync if required - updates server with status changes\r\n      if (syncRequired) {\r\n        this.syncfilter = Object.assign({}, this._syncfilter);\r\n        this.syncService.setCallingFunc(\"Home.ts->updateSelectedJobs\");\r\n        this.syncService.hybridSync(this.onChange, this.syncfilter);\r\n      }\r\n    });//subscribe ends here\r\n  }//updateSelectedJobs ends here\r\n\r\n\r\n  enableDeliverSelected() {\r\n    return this.jobs.some(job => job.checked);\r\n  }\r\n\r\n  /*\r\n  * Multiple deliveries with one signature\r\n*/\r\n  checkedJobs = []; //Riyaz: We could be better off using an array here.\r\n  multiDeliver() {\r\n    this.deliverSelectedJobs();\r\n  }//multiDeliver ends here\r\n\r\n  deliverSelectedJobs = () => {\r\n    this.checkedJobs = [];\r\n    var len = this.jobs.length;\r\n\r\n    if (this.pdaParams.isDrvLoggedOff()) {\r\n      let alertPopup = this.alertCtrl.create({\r\n        title: 'Log On/Off Issue',\r\n        subTitle: \"Please Log on to action jobs\",\r\n        buttons: ['OK']\r\n      });\r\n      alertPopup.present();\r\n      return;\r\n    }\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      var job = this.jobs[i];\r\n      this.log.debug(\"job:\" + job.mobjobSeq + \", checked:\" + job.checked);\r\n\r\n      if (job.checked) {\r\n        this.checkedJobs.push({\r\n          mobjobBasejobNum: job.mobjobBasejobNum,\r\n          mobjobBookingDay: job.mobjobBookingDay,\r\n          mobjobSeq: job.mobjobSeq\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.checkedJobs.length > 0) {\r\n      // at least one job selected         \r\n      this.openSignatureModal();\r\n    } else {\r\n      let alertPopup = this.alertCtrl.create({\r\n        title: 'Select a Job',\r\n        subTitle: \"Please select a job for delivery.\",\r\n        buttons: ['OK']\r\n      });\r\n      alertPopup.present();\r\n      return;\r\n    }\r\n    this.updateStatus = true;\r\n  }//deliverSelectedJobs() ends here\r\n\r\n\r\n  openSignatureModal = () => {\r\n    // this.cd.detach();\r\n    let modal = this.modalController.create(SignaturePage);\r\n    modal.onDidDismiss(result => {\r\n      if (typeof result !== 'undefined') {\r\n        this.podname = result.podname;\r\n        this.signature = result.signature;\r\n        this.signatureCallback(this.signature, this.podname);\r\n      }\r\n    });\r\n    modal.present();\r\n  }\r\n\r\n\r\n  signatureCallback = (signat, podname) => {\r\n    if (this.checkedJobs.length > 0) {\r\n      // So at this point we have a signature, a podname, and an array of 1 or more basejob numbers\r\n      this.log.info(podname);\r\n      // get array of basejob no.s from object\r\n      var baseJobs = this.checkedJobs.map(function (a) { return a.mobjobBasejobNum; });\r\n      var basejobfilter =\r\n        {\r\n          \"where\": { and: [{ \"mobjobDriver\": this.driverId }, { \"mobjobStatus\": { \"neq\": \"DL\" } }, { \"mobjobBasejobNum\": { \"inq\": baseJobs } }] },\r\n          \"order\": 'mobjobSeq ASC'\r\n        };\r\n\r\n      this.Job.find(basejobfilter, (err, jobs) => {\r\n        if (err) {\r\n          this.log.error(err);\r\n          return;\r\n        }\r\n        var len = jobs.length;\r\n        var syncRequired = 0;\r\n        var oldstatus = \"\";\r\n        var checkedJobs = this.checkedJobs;\r\n        var found = false;\r\n        // so we have ALL jobs that matched base jobs selected - need to ensure date is valid selection too\r\n        // for permaanent jobs can have same job no but different dates on device simultaneously\r\n        for (var i = 0; i < len; i++) {\r\n          var job = jobs[i];\r\n          found = false;\r\n          for (var j = 0; j < checkedJobs.length; j++) {\r\n            var cjdate = Date.parse(checkedJobs[j].mobjobBookingDay);\r\n            var jdate = Date.parse(job.mobjobBookingDay);\r\n\r\n            if ((checkedJobs[j].mobjobBasejobNum == job.mobjobBasejobNum) &&\r\n              (cjdate == jdate)) {\r\n              found = true;\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (!found) {\r\n            continue;\r\n          }\r\n\r\n          oldstatus = job.mobjobStatus;\r\n\r\n          job.mobjobStatus = 'DL';\r\n\r\n          var lgps = this.gpsAudit.getLastGPS();\r\n          if (lgps) {\r\n            job.gpsLatDL = lgps.gps_latitude;\r\n            job.gpsLongDL = lgps.gps_longitude;\r\n          }\r\n\r\n          if (job.mobjobLegNumber > 0) {\r\n            job.mobjobSignat = signat || \"\";\r\n\r\n            if (podname) {\r\n              job.mobjobPodName = podname;\r\n              job.mobjobPodTime = new Date().toISOString();\r\n            }\r\n          }\r\n\r\n          job.save();\r\n\r\n          this.logstr = 'deliverSelectedJobs:' + job.mobjobSeq + ' updated from ' + oldstatus + ' -> ' + job.mobjobStatus;\r\n          this.log.info(this.logstr);\r\n          syncRequired++;\r\n        }\r\n\r\n        if (syncRequired) {\r\n          this.syncService.setSyncInProgress(false);\t\t// not syncing now        \r\n          this.syncfilter = Object.assign({}, this._syncfilter);\r\n          this.syncService.setCallingFunc(\"Home.ts->deliverSelectedJobs\");\r\n          this.syncService.hybridSync(this.onChange, this.syncfilter);\r\n        }\r\n      });\r\n    }\r\n  } //signatureCallback(signat, podname) ends here\r\n\r\n  generateWadsHeader(job) {\r\n    var output = 'WADS';\r\n    output = 'Inv: ' + job.mobjobClientRef2 + ' - ' + job.mobjobJobPieces + ' ' + job.mobjobServiceCode;\r\n    return output;\r\n  };\r\n\r\n  generateJobHeader(item) {\r\n    this.mystr = 'generateJobHeader';\r\n    //log.debug(mystr); \r\n    return this.base.generateHeaderForModelInstance(item, this.jobMetadata, false);\r\n  };\r\n\r\n  exitTplusMobile = () => {\r\n    this.exitService.exitTplusMobile();\r\n  }\r\n\r\n  clearReplicationData = () => {\r\n    this.jobReplicationService.deleteJobChangeData((err, changeData) => {\r\n      if (err)\r\n        this.log.error(err);\r\n      if (changeData)\r\n        this.log.debug(changeData);\r\n    });\r\n  }\r\n\r\n  trackByFn(index, job) {\r\n    return job.id;\r\n  }\r\n\r\n  /*   ionViewWillLeave() {\r\n      this.cd.detach();\r\n      this.sub1.unsubscribe();\r\n      this.sub2.unsubscribe();\r\n      this.sub3.unsubscribe();\r\n      this.sub4.unsubscribe();\r\n      this.sub5.unsubscribe();\r\n      this.sub6.unsubscribe();\r\n      this.sub7.unsubscribe();\r\n      this.sub8.unsubscribe();\r\n  \r\n    } */\r\n\r\n    freeupResources(){\r\n      this.cd.detach();\r\n      this.sub1.unsubscribe();\r\n      this.sub2.unsubscribe();\r\n      this.sub3.unsubscribe();\r\n      this.sub4.unsubscribe();\r\n      this.sub5.unsubscribe();\r\n      this.sub6.unsubscribe();\r\n      this.sub7.unsubscribe();\r\n      this.sub8.unsubscribe();\r\n    }\r\n  handletouch() {\r\n    this.deviceFeedback.haptic(0);\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\r\n\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { PlatformReadyServiceProvider } from '../platform-ready-service/platform-ready-service';\r\nimport { Device } from '@ionic-native/device';\r\n\r\n/*\r\n  Generated class for the DeviceServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class DeviceServiceProvider {\r\n\r\n  device = <any>{};\r\n\r\n  constructor(private platformReady: PlatformReadyServiceProvider,\r\n    private cdevice: Device) {\r\n    //console.log('Hello DeviceServiceProvider Provider');\r\n  }\r\n\r\n  getDevice() {\r\n    this.device = { \"browser\": true };\t\t\t//TODO - get error in browser // default\r\n    // cordova, model, platform, UUID, and version information\r\n    if (this.platformReady.isPlatformReady()) {\r\n      this.device.cordova = this.cdevice.cordova;\r\n      this.device.model = this.cdevice.model;\r\n      this.device.platform = this.cdevice.platform;\r\n      this.device.uuid = this.cdevice.uuid;\r\n      this.device.version = this.cdevice.version;\r\n    }\r\n    return this.device;\r\n  }//getDevice() ends here\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/device-service/device-service.ts","import { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\nimport { Device } from '@ionic-native/device';\r\nimport { BackgroundGeolocation, BackgroundGeolocationConfig, BackgroundGeolocationResponse } from '@ionic-native/background-geolocation';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\nimport { GpsHistory } from '../../../shared/sdk/models/GpsHistory';\r\nimport { gpshistoryapi } from '../../../shared/sdk/services/custom/GpsHistory';\r\n\r\nimport { GpsAuditServiceProvider } from '../gps-audit-service/gps-audit-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\n\r\n/*\r\n  Generated class for the BackgroundGeolocationServiceProvider provider.\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class BackgroundGeolocationServiceProvider {\r\n\r\n  // GPS timestamps are in milliseconds since epoch - iOS also has a fractional part\r\n  // e.g. iOS:\t\t1463707063130.011\r\n  // e.g. Android:\t1463707069003\r\n  // Site for millisecond calcs and conversions: http://currentmillis.com/\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'BackgroundGeolocationServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  lastGPSsecs = 0;\t\t// last timestamp in seconds\r\n  thisGPSsecs = 0;\t\t// this timestamp in seconds\r\n  diffGPSsecs = 0;\r\n  threshold = 1;\t\t\t// diff between gps must be greater than this to save\r\n  ltimestamp: Date;\r\n  platform: any;\r\n  config: BackgroundGeolocationConfig = {\r\n    desiredAccuracy: 10,\r\n    stationaryRadius: 20,\r\n    distanceFilter: 30,\r\n    interval: 60000,// Android - The minimum time interval between location updates in milliseconds    \r\n    //locationTimeout: 60,\t\t\t\r\n    activityType: 'AutomotiveNavigation',\t\t\t// iOS hint\r\n    debug: false,\t\t\t\t\t// <-- enable this hear sounds for background-geolocation life-cycle\r\n    stopOnTerminate: true\t\t\t// <-- enable this to clear background location settings when the app terminates\r\n  }\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider,\r\n    private device: Device, private logger: LogServiceProvider,\r\n    private gpsAudit: GpsAuditServiceProvider, private gpsHistApi: gpshistoryapi,\r\n    private backgroundGeolocation: BackgroundGeolocation) {\r\n    this.platform = this.device.platform;\r\n    //console.log('Hello BackgroundGeolocationServiceProvider Provider');\r\n  }\r\n\r\n\r\n  saveGpsToDb = (drvid, location) => {\r\n    //GpsHistory() is a call to the GpsHistory model\r\n    var lgps = new GpsHistory();\r\n    lgps.gps_driver_id = drvid;\r\n    //var platform = $cordovaDevice.getPlatform();\r\n    this.platform = this.device.platform;\r\n    this.log.info(\"BGGS platform:\" + this.platform + \", location:\" + JSON.stringify(location));\r\n    // LT - 06/07/2016 - with 2.52 release iOS devices do not appear to have a location.timestamp property\r\n    // but do have the location.time property - check for both\r\n    if (this.platform == 'ios') {\r\n      if (location.timestamp) {\r\n        lgps.gps_timestamp = location.timestamp;\r\n      }\r\n      else if (location.time) {\r\n        lgps.gps_timestamp = location.time;\r\n      }\r\n      else {\r\n        // lgps.gps_timestamp = Date.now();\r\n        lgps.gps_timestamp = new Date();\r\n        this.log.error(\"BGGS: no time provided so use now:\" + lgps.gps_timestamp);\r\n      }\r\n      lgps.gps_heading = 0; // IOS Has a heading if u want to use it later\r\n    }\r\n    else {\r\n      lgps.gps_timestamp = location.time;\r\n      lgps.gps_heading = 0; // Android has a bearing if u want to use it later\r\n    }\r\n\r\n\r\n    this.ltimestamp = new Date(lgps.gps_timestamp);\r\n    // check last GPS and only update if diff is greater than x seconds\r\n    this.thisGPSsecs = this.ltimestamp.getTime() / 1000;\t\t\t\t// current GPS time in seconds\r\n    this.diffGPSsecs = this.thisGPSsecs - this.lastGPSsecs;\r\n    this.log.info(\"BGGS: platform:\" + this.platform + \", gpstimestamp:\" + this.ltimestamp + \", lastGPSsecs:\" + this.lastGPSsecs + \", thisGPSsecs:\"\r\n      + this.thisGPSsecs + \", diff:\" + this.diffGPSsecs + \", threshold:\" + this.threshold);\r\n    this.lastGPSsecs = this.ltimestamp.getTime() / 1000;\r\n\r\n    // lgps.gps_timestamp is UTC at this point\r\n    var ldate = new Date(lgps.gps_timestamp);\r\n    var oset = ldate.getTimezoneOffset();\r\n\r\n    // lgps.gps_timestamp converted to local time - no timezone now\r\n    var temp: any = this.ltimestamp.getTime() + (oset * -1) * 60 * 1000;\r\n    lgps.gps_timestamp = temp;\r\n    lgps.gps_latitude = location.latitude.toFixed(6);\r\n    lgps.gps_longitude = location.longitude.toFixed(6);\r\n    lgps.gps_quality = location.accuracy;\r\n    lgps.gps_speed = 0; //location.coords.speed;\r\n    lgps.gps_time = 0; //new Date(location.timestamp).getTime();\r\n\r\n    // TODO - need to NOT rely on log - need our own access to this function\r\n    var loggedOn = this.log.pdaParams.isDrvLoggedOn();\r\n    this.log.info(\"BGGS driver:\" + lgps.gps_driver_id + \", loggedOn:\" + loggedOn + \", lgps:\" + JSON.stringify(lgps));\r\n    this.gpsAudit.saveGps(lgps);\r\n\r\n    // TODO - do we need any more criteria to create history record?  if connected?\r\n    if (lgps.gps_driver_id > 0 && this.diffGPSsecs > this.threshold && loggedOn) {\r\n      this.log.info(\"About to save GPS for driver:\" + lgps.gps_driver_id + \", lgps:\" + JSON.stringify(lgps));\r\n      this.gpsHistApi.create(lgps).subscribe(\r\n        obj => {\r\n          this.log.info(\"gpsHistApi.create success: obj:\" + JSON.stringify(obj));\r\n        },\r\n        err => {\r\n          this.log.error(\"gpsHistApi.create failed: err:\" + JSON.stringify(err));\r\n        }\r\n      );\r\n    }\r\n  }//saveGpsToDb() ends here\r\n\r\n  /*=====================================================*/\r\n  /*             CALLBACK FROM PLUGIN                    */\r\n  /*=====================================================*/\r\n  callbackFn = (location) => {\r\n    this.log.info('BGGS callbackFn: calling saveGpsToDb: location:' + JSON.stringify(location));\r\n    this.saveGpsToDb(this.pdaParams.getDriverId(), location);\r\n\r\n    // IMPORTANT:  We must execute the finish method here to inform the native plugin that we're finished,\r\n    // and the background-task may be completed.  we must do this regardless if our HTTP request is successful or not.\r\n    // IF we DON'T, ios will CRASH our APP for spending too much time in the background.\r\n    if (this.platform == 'ios')\r\n      this.backgroundGeolocation.finish();\r\n  }\r\n\r\n  failureFn = (error) => {\r\n    this.log.info('BGGS failureFn: error:' + JSON.stringify(error));\r\n  }\r\n\r\n  /*=====================================================*/\r\n  /*             START METHOD                            */\r\n  /*=====================================================*/\r\n  start = () => {\r\n    this.backgroundGeolocation.configure(this.config)\r\n      .subscribe((location: BackgroundGeolocationResponse) => {\r\n        this.callbackFn(location);\r\n      });\r\n    this.log.info('BGGS START: configure with:' + JSON.stringify(this.config));\r\n    // start recording location\r\n    this.backgroundGeolocation.start();\r\n  }\r\n\r\n  /*=====================================================*/\r\n  /*             STOP METHOD                            */\r\n  /*=====================================================*/\r\n  stop = () => {\r\n    // If we wish to turn OFF background-tracking, we can call the #stop method.\r\n    this.log.info('BGGS STOP Method called:');\r\n    this.backgroundGeolocation.stop();\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/background-geolocation-service/background-geolocation-service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { ConnectivityMonitorProvider } from '../../providers/connectivity-monitor/connectivity-monitor';\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\n\r\n\r\n\r\n\r\ndeclare const lbclient: any;\r\ninterface optionsInterface {\r\n  filter: string;\r\n  lastFilter: string;\r\n};\r\ninterface sinceInterface {\r\n  push: number;\r\n  pull: number;\r\n}\r\n/*\r\n  Generated class for the JobReplicationServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class JobReplicationServiceProvider {\r\n\r\n  LocalJob = lbclient.models.LocalJob;\r\n  RemoteJob = lbclient.models.Job;\r\n  models = lbclient.models;\r\n  lastFilter = {};\r\n  d = new Date();\r\n  isOnline;\r\n  since: sinceInterface = { push: -1, pull: -1 };\r\n\r\n  constructor(public http: Http, private conMonService: ConnectivityMonitorProvider, private configService: ConfigServiceProvider) {\r\n\r\n    // LT - don't work with our current loopback version - use observe ?  Maybe need filter (and callback?)\r\n    this.LocalJob.on('before save', function (ctx, next) {\r\n      next();\r\n    });\r\n\r\n    // sync local changes if connected\r\n    this.LocalJob.on('after save', function (ctx, next) {\r\n      next();\r\n      this.sync();\r\n    });\r\n    this.LocalJob.on('after delete', function (ctx, next) {\r\n      next();\r\n      this.sync();\r\n    });\r\n  }\r\n\r\n\r\n\r\n  syncstatus = {\r\n    _syncInProgress: false,\r\n    get syncInProgress() {\r\n      //console.log('syncInProgress?', this._syncInProgress);\r\n      return this._syncInProgress;\r\n    },\r\n    set syncInProgress(value) {\r\n      this._syncInProgress = value;\r\n    }\r\n  };\r\n\r\n  fullreplication = {\r\n    _fullReplication: false,\r\n    get fullReplication() {\r\n      //console.log('syncInProgress?', this._syncInProgress);\r\n      return this._fullReplication;\r\n    },\r\n    set fullReplication(value) {\r\n      this._fullReplication = value;\r\n    }\r\n  };\r\n\r\n  conflicts = {\r\n    _resolveConflicts: false,\r\n    get resolveConflictsInClient() {\r\n      //console.log('isConnected?', this._isConnected);\r\n      return this._resolveConflicts;\r\n    },\r\n    set resolveConflictsInClient(value) {\r\n      this._resolveConflicts = value;\r\n    }\r\n  };\r\n\r\n  sleep(milliseconds) {\r\n    var start = new Date().getTime();\r\n    for (var i = 0; i < 10000000000; i++) {\r\n      if ((new Date().getTime() - start) > milliseconds) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  sync = (callback, filter) => {\r\n\r\n    // var numargs = arguments.length;\r\n    var options: optionsInterface = { filter: '', lastFilter: '' };\r\n    //var changefilter = {};\r\n    var cb = null;\r\n\r\n    // numargs == 0 - no callback or filter\r\n    // numargs == 1 - either callback or filter\r\n    // numargs == 2 - both callback and filter\r\n\r\n    /*  if (numargs == 1 && typeof callback === 'function') {\r\n       cb = callback;\r\n     }\r\n     if (numargs == 1 && typeof callback === 'object') {\r\n       options.filter = callback;\r\n     }\r\n     if (numargs == 2) { */\r\n    cb = callback;\r\n    options.filter = filter;\r\n    options.lastFilter = filter;\r\n    this.lastFilter = filter;\r\n\r\n    //lastFilter = filter;\r\n    //}\r\n\r\n    var counter = 0;\r\n    //alert('Checking: syncInProgress:'+this.syncstatus.syncInProgress);\r\n    //if (this.network.isConnected && this.syncstatus.syncInProgress == false) \t\t// now done via syncService\r\n\r\n  \r\n    this.conMonService.isConnected.subscribe(res => {\r\n      this.isOnline = res;\r\n    });\r\n\r\n\r\n    if (this.isOnline) {\r\n\r\n      this.syncstatus.syncInProgress = true;      \r\n\r\n      // LT - original code from Strongloop sample code\r\n      // NOTE - this does remote changes first - this is as supplied originally from strongloop\r\n\t\t\t/*\r\n\t\t\t\t\t\tRemoteJob.replicate(LocalJob, function () {\r\n\t\t\t\t\t\t\tLocalJob.replicate(RemoteJob, cb);\r\n\t\t\t\t\t\t});\r\n\t\t\t*/\r\n      // LT - 11/09/2015 - test replication starting from scratch each time\r\n      // LT - 02/10/2015 - loading jobs still appears slow on the device even\r\n      // after the fix (becuase of?) per https://github.com/strongloop/loopback/pull/1681\r\n      // So leave this uncommented for now - so always go from the beginning\r\n\r\n      // LT - 04/12/2015 - Swift were generating very large delta sets after a few days\r\n      // operation - caused by this being uncommented?\r\n\r\n\r\n      //console.log('sync: JOB fullreplication:' + this.fullreplication.fullReplication);\r\n\r\n\r\n      if (this.fullreplication.fullReplication) {\r\n        this.since = { push: -1, pull: -1 };\r\n      }\r\n      //console.log('sync: JOB since:', this.since);\r\n\r\n      // LT - latest code from github loopback-example-offline-sync\r\n      // Remote job first\r\n      //console.log(new Date().toISOString()+':Calling: RemoteJob.replicate(), since:%j',since);\r\n      //console.log(new Date().toISOString() + ': starting JOB replication');\r\n\r\n      // LT - 10/12/2015 - original code - does remote first\r\n      this.RemoteJob.replicate(\r\n        this.since.pull,\r\n        this.LocalJob,\r\n        options,\r\n        (err, conflicts, cps) => {\r\n\r\n          // LT - 31/12/2015 - the filter we applied (e.g. no DL jobs) when replicating from the remote DB\r\n          // does not necessarily apply replicating from local DB - we just need everything replicated\r\n          options.filter = \"\";\r\n\r\n          this.since.pull = cps;\r\n          //console.log(new Date().toISOString()+':Calling: LocalJob.replicate(), since:%j',since);\r\n          this.LocalJob.replicate(\r\n            this.since.push,\r\n            this.RemoteJob,\r\n            options,\r\n            (err, conflicts, cps) => {\r\n              this.since.push = cps;\r\n\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// LT - artificially slow replication for debug purposes\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// NOTE did not work as required - blocked so nothing could be done on device\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(filter.where.mobjobDriver == 999) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsleep(30000);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t*/\r\n\r\n              // end of replication\r\n              this.syncstatus.syncInProgress = false;\r\n              //console.log('syncInProgress:'+this.syncstatus.syncInProgress);\r\n              //alert('Finished replicate: syncInProgress:'+this.syncstatus.syncInProgress);\r\n\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(filter.where.mobjobDriver == 999) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// LT - artificially slow replication for debug purposes\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//console.log(new Date().toISOString()+': finished replication');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcb && cb(err,conflicts);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}, 20000);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t*/\r\n              //console.log(new Date().toISOString() + ': finished JOB replication, conflicts:' + conflicts.length);\r\n              if (conflicts.length > 0) {\r\n                //console.log('sync: JOB conflicts:' + JSON.stringify(conflicts));\r\n                conflicts.forEach(function (conflict) {\r\n\r\n                  conflict.type(function (err, type) {\r\n                    conflict.type = type;\r\n                    conflict.models(function (err, source, target) {\r\n                      conflict.source = source;\r\n                      conflict.target = target;\r\n                      conflict.manual = new conflict.SourceModel(source || target);\r\n\r\n                      // log the conflict details\r\n                      //console.log(\"conflicts: source:\" + JSON.stringify(conflict.source));\r\n                      //console.log(\"conflicts: target:\" + JSON.stringify(conflict.target));\r\n\r\n                    });\r\n                    conflict.changes(function (err, source, target) {\r\n                      conflict.sourceChange = source;\r\n                      conflict.targetChange = target;\r\n\r\n                      var sourceType = conflict.sourceChange.type();\r\n                      var targetType = conflict.targetChange.type();\r\n\r\n                      // log the conflict details\r\n                      //console.log(\"conflicts: source type:\" + sourceType + \", sourceChange:\" + JSON.stringify(conflict.sourceChange));\r\n                      //console.log(\"conflicts: target type:\" + targetType + \", targetChange:\" + JSON.stringify(conflict.targetChange));\r\n\r\n                      if (conflicts.resolveConflictsInClient) {\r\n                        // automatically resolve conflicts\r\n                        if (sourceType == 'update' && targetType == 'delete') {\r\n                          conflict.resolveUsingTarget(this.refreshConflicts);\r\n                        }\r\n                        else {\r\n                          conflict.resolveUsingSource(this.refreshConflicts);\r\n                        }\r\n                      }\r\n                    });\r\n                  });\r\n                });\r\n              }\r\n              cb && cb(err, conflicts);\r\n              /*}*/\r\n            });\r\n        });\r\n\r\n\t\t\t/*\r\n\t\t\t\t\t\t// LT - 10/12/2015 - updated code - does local first per todo example at:\r\n\t\t\t\t\t\t// https://github.com/strongloop/loopback-example-offline-sync/blob/master/client/lbclient/boot/replication.js\r\n\t\t\t\t\t\t// Added for v2.23 ------------------------------------------\r\n\t\t\t\t\t\tLocalJob.replicate(\r\n\t\t\t\t\t\t\tsince.push,\r\n\t\t\t\t\t\t\tRemoteJob,\r\n\t\t\t\t\t\t\toptions,\r\n\t\t\t\t\t\t\tfunction pushed(err, conflicts, cps) {\r\n\t\t\t\t\t\t\t\tsince.push = cps;\r\n\t\t\t\r\n\t\t\t\t\t\t\t\tRemoteJob.replicate(\r\n\t\t\t\t\t\t\t\t\tsince.pull,\r\n\t\t\t\t\t\t\t\t\tLocalJob,\r\n\t\t\t\t\t\t\t\t\toptions,\r\n\t\t\t\t\t\t\t\t\tfunction pulled(err, conflicts, cps) {\r\n\t\t\t\t\t\t\t\t\t\tsince.pull = cps;\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t//console.log(new Date().toISOString()+': finished replication');\r\n\t\t\t\t\t\t\t\t\t\tcb && cb(err,conflicts);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// END: Added for v2.23 ------------------------------------------\r\n\t\t\t*/\r\n\r\n\t\t\t/*\r\n\t\t\t\t\t\t// LT - from https://gist.github.com/bajtos/63b415629a341ef5d0c9\r\n\t\t\t\t\t\t// It is important to push local changes first,\r\n\t\t\t\t\t\t// that way any conflicts are resolved at the client\r\n\t\t\t\t\t\t// 02/09/2015 - BUT - this gave a 400 error when replicating (GET):\r\n\t\t\t//GET http://58.108.229.60:3000/api/Jobs/changes?since=4&filter%5Bwhere%5D%5BmobjobDriver%5D=199&filter%5Bwhere%5D%5Bmobjobuid%5D%5Binq%5D%5B0%5D=825364f0-5138-11e5-92f0-a92cbf3396d1&filter%5Bwhere%5D%5Bmobjobuid%5D%5Binq%5D%5B1%5D=825316d0-5138-11e5-92f0-a92cbf3396d1&filter%5Bfields%5D%5Bmobjobuid%5D=true&filter%5Border%5D%5B0%5D%5Bkey%5D=mobjobuid&filter%5Border%5D%5B0%5D%5Breverse%5D=1&filter%5Border%5D%5B1%5D%5Bkey%5D=mobjobSeq&filter%5Border%5D%5B1%5D%5Breverse%5D=1\r\n\t\t\t*/\r\n\r\n\t\t\t/*\r\n\t\t\t\t\t\t// Local job first\r\n\t\t\t\t\t\tLocalJob.replicate(\r\n\t\t\t\t\t\t\tsince.push,\r\n\t\t\t\t\t\t\tRemoteJob,\r\n\t\t\t\t\t\t\toptions,\r\n\t\t\t\t\t\t\tfunction pushed(err, conflicts, cps) {\r\n\t\t\t\t\t\t\t\tsince.push = cps;\r\n\t\t\t\t\t\t\t\tRemoteJob.replicate(\r\n\t\t\t\t\t\t\t\tsince.pull,\r\n\t\t\t\t\t\t\t\tLocalJob,\r\n\t\t\t\t\t\t\t\toptions,\r\n\t\t\t\t\t\t\t\tfunction pulled(err, conflicts, cps) {\r\n\t\t\t\t\t\t\t\t\tsince.pull = cps;\r\n\t\t\t\t\t\t\t\t\tcb && cb();\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t*/\r\n\r\n    }\r\n    else {\r\n      // not connected to network\r\n      // if callback supplied call it \r\n      cb && cb();\r\n    }\r\n  }\r\n\r\n  callback = (err) => {\r\n    //console.log('Error returned is :' + err);\r\n  }\r\n\r\n  refreshConflicts = () => {\r\n    this.sync(this.callback, this.lastFilter);\r\n  }\r\n\r\n\r\n\r\n  /*\r\n    // Added for v2.23 ------------------------------------------\r\n    // sync local changes if connected\r\n    LocalJob.observe('after save', function(ctx, next) {\r\n      next();\r\n      sync(lastFilter);\r\n    });\r\n    LocalJob.observe('after delete', function(ctx, next) {\r\n      next();\r\n      sync(lastFilter);\r\n    });\r\n    // END: Added for v2.23 ------------------------------------------\r\n  */\r\n\r\n  // LT - 22/12/2015 - added per Strongloop support to remove now\r\n  // obsolete job-change and checkpoint records\r\n  // TODO - maybe extend to do all?  Using async?\r\n  deleteJobChangeData(callback) {\r\n    var Model = this.models.LocalJob;\r\n\r\n    var Change = Model.getChangeModel();\r\n    var Checkpoint = Change.getCheckpointModel();\r\n\r\n    var changeData: { changes: string, checkpoints: string };\r\n\r\n    Change.deleteAll({ rev: null }, function (err, info) {\r\n      if (err) return console.error('Cannot delete old changes:', err);\r\n      //console.log('Deleted %s old changes.', info.count);\r\n      changeData.changes = info;\r\n\r\n      Checkpoint.current(function (err, cp) {\r\n        if (err) return console.error('Cannot obtain current checkpoint:', err);\r\n        //console.log('Current checkpoint:', cp);\r\n\r\n\r\n        Checkpoint.deleteAll({ seq: { lt: cp } }, function (err, info) {\r\n          if (err) return console.error('Cannot delete old checkpoints:', err);\r\n          //console.log('Deleted %s old checkpoints', info.count);\r\n\r\n          changeData.checkpoints = info;\r\n\r\n          // The MongoDB connection pool is blocking exit,\r\n          // we need to exit explicitely\r\n          //process.exit(0);\r\n\r\n\r\n          callback && callback(err, changeData);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  // Copy of above but for JSEA\r\n  // TODO - this should be refactored to avoid all of this duplicate code\r\n  deleteJseaChangeData(callback) {\r\n    var Model = this.models.LocalJseaDriverAnswers;\r\n\r\n    var Change = Model.getChangeModel();\r\n    var Checkpoint = Change.getCheckpointModel();\r\n\r\n    var changeData: { changes: string, checkpoints: string };\r\n\r\n\r\n    Change.deleteAll({ rev: null }, function (err, info) {\r\n      if (err) return console.error('Cannot delete old changes:', err);\r\n      //console.log('Deleted %s old changes.', info.count);\r\n      changeData.changes = info;\r\n\r\n      Checkpoint.current(function (err, cp) {\r\n        if (err) return console.error('Cannot obtain current checkpoint:', err);\r\n        //console.log('Current checkpoint:', cp);\r\n\r\n\r\n        Checkpoint.deleteAll({ seq: { lt: cp } }, function (err, info) {\r\n          if (err) return console.error('Cannot delete old checkpoints:', err);\r\n          //console.log('Deleted %s old checkpoints', info.count);\r\n\r\n          changeData.checkpoints = info;\r\n\r\n          // The MongoDB connection pool is blocking exit,\r\n          // we need to exit explicitely\r\n          //process.exit(0);\r\n\r\n\r\n          callback && callback(err, changeData);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/job-replication-service/job-replication-service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/takeUntil';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { GpsHistory } from '../../../shared/sdk/models/GpsHistory';\r\nimport { gpshistoryapi } from '../../../shared/sdk/services/custom/GpsHistory';\r\nimport { GpsAuditServiceProvider } from '../gps-audit-service/gps-audit-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\n\r\n\r\n/*\r\n  Generated class for the GpsServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n\r\n  Refer: https://ionicframework.com/docs/native/geolocation/  \r\n*/\r\n@Injectable()\r\nexport class GpsServiceProvider {\r\n  private ngUnsubscribe: Subject<void> = new Subject<void>();\r\n  // TODO - set high accuracy with a toggle parameter\r\n  // TODO - set maximumAge to 0?  Apparently Samsung Galaxy phone have issues caching the gps location\r\n  // (see http://stackoverflow.com/questions/16262878/phonegap-geolocation-code-3-timeout-expired-keeps-popping-up-on-some-android)\r\n  // Apparently a reboot can fix Android gps timeouts\r\n\r\n  // example here: http://www.gajotres.net/using-cordova-geoloacation-api-with-google-maps-in-ionic-framework/\r\n\r\n  //HIGH ACCURACY may be problematic\r\n\r\n  //var posOptions = {timeout: 1000, frequency : 1000, enableHighAccuracy: true };\r\n  posOptions = { timeout: 10000, enableHighAccuracy: false };\r\n  gpsIsWorking = false;\r\n  numsaves = 0;\r\n  lastsecs = 0;\r\n  getGps = true;\r\n  showGpsAlerts = false;\r\n  sendGps = true;\r\n  gpsData = {};\r\n  logParams = {\r\n    site: this.pdaParams.getSiteId(),\r\n    driver: this.pdaParams.getDriverId(), fn: 'GpsServiceProvider'\r\n  };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider,\r\n    private logger: LogServiceProvider,\r\n    private gpsAudit: GpsAuditServiceProvider,\r\n    private gpsHistApi: gpshistoryapi,\r\n    private geolocation: Geolocation,\r\n    private sharedService: SharedServiceProvider) {\r\n\r\n    //console.log('Hello GpsServiceProvider Provider');\r\n\r\n    this.sharedService.RESUME.subscribe(val => {\r\n      // foreground\r\n      this.log.info(\"Received event:\" + val);\r\n      this.getGps = true;\r\n      this.getPos();\r\n    });\r\n\r\n    this.sharedService.PAUSE.subscribe(val => {\r\n      // background\r\n      this.log.info(\"Received event:\" + val);\r\n      this.getGps = false;\r\n    });\r\n\r\n\r\n  }//Constructor ends here\r\n\r\n\r\n  /*   $rootScope.$on('RESUME', function(event) {\r\n      // foreground\r\n      log.info(\"Received event:\" + event.name);\r\n      getGps = true;\r\n      getPos();\r\n    });\r\n    $rootScope.$on('PAUSE', function(event) {\r\n      // background\r\n      log.info(\"Received event:\" + event.name);\r\n      getGps = false;\r\n    }); */\r\n\r\n  getPos = () => {\r\n    if (this.log.context.driver == 0) {\r\n      this.log.context.driver = this.pdaParams.getDriverId();\r\n    }\r\n\r\n    if (!this.pdaParams.alwaysGetGPS) {\r\n      // If driver logged off or app in background don't bother with any of this\r\n      if (!this.getGps) {\r\n        this.log.info('getGps:' + this.getGps + ', no GPS attempted');\r\n        return;\r\n      }\r\n      if (this.pdaParams.isDrvLoggedOff()) {\r\n        this.log.info('driver logged off, no GPS attempted');\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    //Riyaz: Using ionic native's geolocation plugin here\r\n    this.geolocation.getCurrentPosition(this.posOptions).then((position) => {      \r\n       if (this.showGpsAlerts) {\r\n        alert(' GPSService: Position returned ');\r\n      }\r\n      //this.gpsData = angular.copy(position);\r\n      this.gpsData = Object.assign({}, position);\r\n      this.log.debug(\"position:\" + JSON.stringify(this.gpsData));\r\n      this.saveGpsToDB(this.pdaParams.getDriverId(), position);\r\n      this.gpsIsWorking = true;\r\n    }).catch((err) => {\r\n      if (this.showGpsAlerts) {\r\n        alert('GPsService Error code: ' + err.code + '\\n' + 'message: ' + err.message + '\\n');\r\n      }\r\n      // error\r\n      this.gpsIsWorking = false;\r\n      this.log.error(\"getCurrentPosition failed, err:\" + JSON.stringify(err));\r\n    });\r\n\r\n  } //getPos() ends here\r\n\r\n\r\n  saveGpsToDB = (drvid, position) => {\r\n    var lgps = new GpsHistory();\r\n\r\n    lgps.gps_driver_id = drvid;   \r\n    // position.timestamp is UTC\r\n    // We convert to a timestamp at local time so no timezone    \r\n    var ldate = new Date(position.timestamp);\r\n    var oset = ldate.getTimezoneOffset();\r\n\r\n    position.timestamp +=  (oset * -1) * 60 * 1000;\r\n    lgps.gps_timestamp = position.timestamp;\r\n\r\n    //parseFloat(\"123.456\").toFixed(2);\r\n\r\n    lgps.gps_latitude = position.coords.latitude.toFixed(6);\r\n    lgps.gps_longitude = position.coords.longitude.toFixed(6);\r\n    lgps.gps_quality = position.coords.accuracy;\r\n    lgps.gps_heading = 0; // position.coords.heading;\r\n    lgps.gps_speed = 0; //position.coords.speed;\r\n    lgps.gps_time = 0; //new Date(position.timestamp).getTime();\r\n    //sendGps = true;\t\t\t// DEBUG\r\n    this.log.debug(\"getCurrentPosition OK: sendGps:\" + this.sendGps + \", lgps:\" + JSON.stringify(lgps));\r\n\r\n    this.gpsAudit.saveGps(lgps);\r\n\r\n    // TODO - do we need any more criteria to create history record?  if connected?\r\n    if (this.sendGps && lgps.gps_driver_id > 0) {\r\n      this.log.info(\"About to save GPS\");\r\n\r\n      this.gpsHistApi.create(lgps).subscribe(\r\n        obj => {\r\n          this.log.info(\"gpsHistApi.create success: obj:\" + JSON.stringify(obj));\r\n        },\r\n        err => {\r\n          this.log.error(\"gpsHistApi.create failed: err:\" + JSON.stringify(err));\r\n        }\r\n      );\r\n    }\r\n  }//saveGpsToDB(drvid, position) ends here\r\n\r\n  onSuccess(position) {\r\n    this.gpsIsWorking = true;\r\n  }\r\n  onError(error) {\r\n    if (this.showGpsAlerts) {\r\n      alert('GPSservice OnOFFPos  Error code: ' + error.code + '\\n' + 'message: ' + error.message + '\\n');\r\n    }\r\n    this.gpsIsWorking = false;\r\n  }\r\n\r\n  //Every 60 Seconds\r\n  intervalId = setInterval(this.getPos(), 60000);\r\n\r\n  getGpsIsWorking() {\r\n    //getOneoFFPos();\r\n    return this.gpsIsWorking;\r\n  }\r\n\r\n  getShowGpsAlerts() {\r\n    //getOneoFFPos();\r\n    return this.showGpsAlerts;\r\n  }\r\n\r\n  getSendGps() {\r\n    //getOneoFFPos();\r\n    return this.sendGps;\r\n  }\r\n\r\n  setShowGpsAlerts(torf) {\r\n    this.showGpsAlerts = torf;\r\n    localStorage.setItem('showGpsAlerts', JSON.stringify(this.showGpsAlerts));\r\n  }\r\n\r\n  setSendGps(torf) {\r\n    this.sendGps = torf;\r\n    localStorage.setItem('sendGps', JSON.stringify(this.sendGps));\r\n    this.log.debug(\"setSendGps now:\" + this.sendGps);\r\n  }\r\n\r\n  toggleShowGpsAlerts() {\r\n    this.showGpsAlerts = !this.showGpsAlerts;\r\n    localStorage.setItem('showGpsAlerts', JSON.stringify(this.showGpsAlerts));\r\n  }\r\n\r\n  // LT - code added for background geolocation processing\r\n\r\n  getCurrentPos(cb) {\r\n    this.geolocation.getCurrentPosition(this.posOptions).then((position) => {\r\n      cb(null, position);\r\n    }).catch((err) => {\r\n      cb(err, null);\r\n    });\r\n\r\n  }//getCurrentPos(cb) ends here\r\n\r\n  /*  ngOnDestroy() {\r\n     this.ngUnsubscribe.next();\r\n     this.ngUnsubscribe.complete();\r\n   } */\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/gps-service/gps-service.ts","import { Injectable } from '@angular/core';\r\n\r\n//import 'reflect-metadata';\r\n/*\r\n  Generated class for the ClientConfigProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class ConfigServiceProvider {\r\n\r\n  _clientConfig = {\r\n    clientId: '',\r\n    serverIP: '',\r\n    serverPort: 0,\r\n    apiURL: '',\r\n    API_VERSION: ''\r\n  }\r\n\r\n\r\n  //IMPORTANT Note: if appConfig.version < 2.35, then push notifications won't work properly.\r\n  appConfig = {\r\n    'version': '3.00',\r\n    'logServerIP': 'opensyscon.com.au',\r\n    'logServerPort': 5678\r\n  }\r\n\r\n  clientId = '';\r\n  serverIP = '';\r\n  serverPort = 0;\r\n  apiURL = '';\r\n  API_VERSION = '';\r\n\r\n  constructor() {\r\n    //console.log('Hello ClientConfigProvider Provider');\r\n\r\n    if (JSON.parse(localStorage.getItem('clientConfig'))) {\r\n      this._clientConfig = JSON.parse(localStorage.getItem('clientConfig'));\r\n      this.clientId = this._clientConfig.clientId;\r\n      this.serverIP = this._clientConfig.serverIP;\r\n      this.serverPort = this._clientConfig.serverPort;\r\n      this.apiURL = this._clientConfig.apiURL;\r\n      this.API_VERSION = this._clientConfig.API_VERSION;\r\n    }\r\n    //console.log(' ======this._apiURL in config-service.ts is ::==============' + this.apiURL);\r\n\r\n  }//End of the constructor\r\n\r\n\r\n  setSiteDetails = (siteDetails) => {\r\n    /* \r\n    https://github.com/mean-expert-official/loopback-sdk-builder/wiki/4.-First-Steps\r\n   */\r\n    this.apiURL = siteDetails.url;\r\n    this.API_VERSION = 'api';\r\n\r\n    //localStorage.setItem('apiURL', siteDetails.url);\r\n    //localStorage.setItem('apiDSName', name);\t\t// IMPORTANT - used by model js code for connector\r\n    localStorage.setItem('clientId', siteDetails.clientId);\r\n    //console.log(\"Set the clientId with :\" + siteDetails.clientId);\r\n    localStorage.setItem('apiURL', this.apiURL);\r\n    localStorage.setItem('API_VERSION', this.API_VERSION);\r\n\r\n    this._clientConfig.clientId = siteDetails.clientId;\r\n    this._clientConfig.serverIP = siteDetails.serverIP;\r\n    this._clientConfig.serverPort = siteDetails.serverPort;\r\n    this._clientConfig.apiURL = this.apiURL;\r\n    this._clientConfig.API_VERSION = this.API_VERSION;\r\n\r\n    localStorage.setItem('clientConfig', JSON.stringify(this._clientConfig));\r\n  }\r\n\r\n  getSiteId() {\r\n    return localStorage.getItem('clientId');\r\n  }\r\n\r\n  getBaseUrl() {\r\n    return localStorage.getItem('apiURL');\r\n  }\r\n\r\n  getApiVersion() {\r\n    return localStorage.getItem('API_VERSION');\r\n  }\r\n\r\n  getClientConfig() {\r\n    return JSON.parse(localStorage.getItem('clientConfig'));\r\n  }\r\n\r\n  getServerIP() {\r\n    return this.serverIP;\r\n  }\r\n\r\n  getServerPort() {\r\n    return this.serverPort;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/config-service/config-service.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\n\r\ndeclare const lbclient: any;\r\n\r\nimport { LogServiceProvider } from '../../providers/log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../../providers/siteconfig-service/siteconfig-service';\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { ConnectivityMonitorProvider } from '../../providers/connectivity-monitor/connectivity-monitor';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\n/**\r\n * Generated class for the ChangePage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-change',\r\n  templateUrl: 'change.html',\r\n})\r\nexport class ChangePage {\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'HomePage' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  RemoteJob = lbclient.models.Job;\r\n  Job = lbclient.models.LocalJob;\r\n  changes = 0;\r\n  diff;\r\n  show_this = true;\r\n  jobs;\r\n  sync = lbclient.sync;\r\n  isOnline;\r\n  loginFlag = this.pdaParams.isDrvLoggedOn();\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, private pdaParams: PdaparamsServiceProvider,\r\n    private siteConfig: SiteconfigServiceProvider, private logger: LogServiceProvider,\r\n    private configService: ConfigServiceProvider,\r\n    private conMonService: ConnectivityMonitorProvider, private sharedService: SharedServiceProvider) {\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n    this.conMonService.isConnected.subscribe(res => {\r\n      this.isOnline = res;\r\n    });\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    this.Job.getChangeModel().find((err, changes) => {\r\n      this.changes = changes;\r\n      this.RemoteJob.diff(0, changes, (err, diff) => {\r\n        this.diff = diff;\r\n      });\r\n    });\r\n\r\n    this.Job.find((err, jobs) => {\r\n      this.jobs = jobs;\r\n    });\r\n  }\r\n\r\n  clearLocalStorage = () => {\r\n    localStorage.removeItem('osc-local-db');\r\n    this.jobs = {};\r\n  };\r\n\r\n  logLocalStorage = () => {\r\n    var logmsg = { type: '', data: '' };\r\n    logmsg.type = 'logLocalStorage';\r\n    logmsg.data = JSON.parse(localStorage.getItem('osc-local-db'));\r\n    this.log.info(logmsg);\r\n  };\r\n\r\n  connected = () => {\r\n    return this.isOnline;\r\n  };\r\n\r\n  /*  connect = () => {\r\n     this.network.isConnected = true;\r\n     this.sync();\r\n   };\r\n \r\n   disconnect = () => {\r\n     this.network.isConnected = false;\r\n   }; */\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/change/change.ts","\r\nimport { Component } from '@angular/core';\r\nimport { Platform, AlertController, LoadingController, Loading } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport { LoopBackConfig } from '../../shared/sdk/index';\r\ndeclare const lbclient: any;\r\n\r\nimport { BaseServiceProvider } from '../providers/base-service/base-service';\r\nimport { SiteconfigServiceProvider } from '../providers/siteconfig-service/siteconfig-service';\r\nimport { ConfigServiceProvider } from '../providers/config-service/config-service';\r\nimport { SharedServiceProvider } from '../providers/shared-service/shared-service';\r\nimport { SodServiceProvider } from '../providers/sod-service/sod-service';\r\nimport { CustomerconnServiceProvider } from '../providers/customerconn-service/customerconn-service'\r\nimport { PdaparamsServiceProvider } from '../providers/pdaparams-service/pdaparams-service';\r\nimport { ConnectivityMonitorProvider } from '../providers/connectivity-monitor/connectivity-monitor';\r\nimport { MessageServiceProvider } from '../providers/message-service/message-service';\r\nimport { JseaServiceProvider } from '../providers/jsea-service/jsea-service';\r\nimport { ImageServiceProvider } from '../providers/image-service/image-service';\r\n\r\nimport { LoginPage } from '../pages/login/login';\r\nimport { TabsPage } from '../pages/tabs/tabs';\r\nimport { PdaPage } from '../pages/pda/pda';\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\n\r\nexport class MyApp {\r\n  loading: Loading;\r\n  allowed: boolean = false;\r\n  connDetails;\r\n  userId;\r\n  result;\r\n  Job = lbclient.models.LocalJob;\r\n  rootPage: any;\r\n\r\n  constructor(statusBar: StatusBar,\r\n    private alertCtrl: AlertController, private loadingCtrl: LoadingController,\r\n    splashScreen: SplashScreen, private siteConfig: SiteconfigServiceProvider,\r\n    private configService: ConfigServiceProvider,\r\n    private base: BaseServiceProvider, private sharedService: SharedServiceProvider,\r\n    private customerConn: CustomerconnServiceProvider, private sodService: SodServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider, private platform: Platform,\r\n    private connectivityMonitor: ConnectivityMonitorProvider,\r\n    private messageService: MessageServiceProvider, private jseaService: JseaServiceProvider,\r\n    private imageService: ImageServiceProvider) {\r\n\r\n    //1.Is the user logged in?\r\n    //2. No,the user is not logged in. Direct him to the login page.Set the firstime login variable.\r\n    if (!(localStorage.getItem('login'))) {\r\n      localStorage.setItem('firstlogin', 'true');\r\n      this.rootPage = LoginPage;\r\n      return;\r\n    }\r\n\r\n    //3. Is the Server API Url set?\r\n    //4. No, the Server API Url is not set. Get & Set the the Server API Url.\r\n    //Also set the server path for the loopback SDK builder in the ./shared/sdk directory.\r\n    if (!(localStorage.getItem('apiURL'))) {\r\n      this.userId = localStorage.getItem('userId');\r\n      //console.log('userId====' + this.userId);\r\n      this.connDetails = this.customerConn.getConnectionDetails(this.userId.toLowerCase());\r\n      this.configService.setSiteDetails(this.connDetails);\r\n\r\n      //Set the server path for the loopback SDK builder in the ./shared/sdk directory.\r\n      LoopBackConfig.setBaseURL(this.connDetails.url);\r\n      LoopBackConfig.setApiVersion('api');\r\n    }\r\n\r\n    //5.Check & set All Config data\r\n    if (!(localStorage.getItem('SITE_CONFIG_LOADED'))) {\r\n      console.log(\"Getting the siteconfigs!\");\r\n      var result$: Observable<string> = this.siteConfig\r\n        .loadAllConfigsFromServer()\r\n        .subscribe((result) => {\r\n          console.log(\"Site Config Loaded!\");\r\n          this.CommonCode();\r\n        },\r\n          (error) => {\r\n            this.showError(\"Unable to load Site Configs.Please check your connection.\");\r\n            return;\r\n          });\r\n    }\r\n    else {\r\n      this.CommonCode();\r\n    }\r\n\r\n    platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      statusBar.styleDefault();\r\n      splashScreen.hide();\r\n    });\r\n\r\n  }//constructor ends here\r\n\r\n  //Shared code which should executes after siteconfigs are loaded.\r\n  CommonCode = () => {\r\n    //6. Check & set all table metadata\r\n    //6.1 Load the jobs metadata  \r\n    //console.log(\"Loading job metadata\");\r\n    var result: Observable<any> = this.base.getModelMetadata(this.Job, \"jobMetadata\");\r\n    this.sharedService.jobMetaDataLoadedSubject.subscribe();\r\n\r\n    //7. Check & set all watchers\r\n    //7.1 Start monitoring network connectivity    \r\n    this.connectivityMonitor.startWatching();\r\n\r\n    //7.2 Start monitoring for messages   \r\n    this.messageService.startWatching();\r\n\r\n    //7.25 check if this is first start for the day\r\n    this.sodService.checkDoSodAction('FIRST_RESUME');\r\n\r\n    //7.3 Start monitoring for JSEA changes.\r\n    this.jseaService.startWatching();\r\n\r\n    //7.4  Start monitoring images for auto upload \r\n    this.imageService.startWatching();\r\n\r\n    \r\n\r\n    //console.log(\"pdaParams.getDriverId()==\" + pdaParams.getDriverId());\r\n\r\n    //8. If driverid > 0, redirect to jobs page\r\n    if (this.pdaParams.getDriverId() > 0) {\r\n      this.rootPage = TabsPage;\r\n    }\r\n    else {\r\n      //9. If driverid <=0, redirect him to PDA page.\r\n      this.rootPage = PdaPage;\r\n    }\r\n  }//CommonCode() ends here\r\n\r\n  showError(text) {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Error',\r\n      subTitle: text,\r\n      buttons: ['OK']\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n//import 'reflect-metadata';\r\n\r\n/*\r\n  Generated class for the CustomerconnServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class CustomerconnServiceProvider {\r\n\r\n  constructor(public http: Http) {\r\n    //console.log('Hello CustomerconnServiceProvider Provider');\r\n  }\r\n\r\n\r\n  customerConns = {\r\n    \"remote\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\"\r\n    },\r\n    \"local\": {\r\n      \"connector\": \"memory\",\r\n      \"debug\": \"true\",\r\n      \"localStorage\": \"osc-local-db\"\r\n    },\r\n    \"scope\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"SCOPE\",\r\n      \"serverIP\": \"scope.opensyscon.com.au\",\r\n      \"serverPort\": 3112,\r\n      \"url\": \"http://scope.opensyscon.com.au:3112\"\r\n    },\r\n    \"swift1\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"SWIFT1\",\r\n      \"serverIP\": \"swiftt1.lnk.telstra.net\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://swiftt1.lnk.telstra.net:3000\"\r\n    },\r\n    \"oscvtest\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"OSCVTEST\",\r\n      \"serverIP\": \"opensyscon.com.au\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://opensyscon.com.au:3000\"\r\n    },\r\n    \"wpe\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"WPE\",\r\n      \"serverIP\": \"remote.wpedubbo.com.au\",\r\n      \"serverPort\": 3115,\r\n      \"url\": \"http://remote.wpedubbo.com.au:3115\"\r\n    },\r\n    \"aptold\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"APT\",\r\n      \"serverIP\": \"allpur2.lnk.telstra.net\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://allpur2.lnk.telstra.net:3000\"\r\n    },\r\n    \"apt\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"APT\",\r\n      \"serverIP\": \"tplus.allpurpose.com.au\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://tplus.allpurpose.com.au:3000\"\r\n    },\r\n    \"ces\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"CES\",\r\n      \"serverIP\": \"couriers-express.com.au\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://couriers-express.com.au:3000\"\r\n    },\r\n    \"itd\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"ITD\",\r\n      \"serverIP\": \"carry.intime-distribution.com.au\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://carry.intime-distribution.com.au:3000\"\r\n    },\r\n    \"glc\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"GLC\",\r\n      \"serverIP\": \"glcouriers.com.au\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://glcouriers.com.au:3000\"\r\n    },\r\n    \"ace\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"ACE\",\r\n      \"serverIP\": \"CPE-61-9-246-82.static.wa.bigpond.net.au\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://CPE-61-9-246-82.static.wa.bigpond.net.au:3000\"\r\n    },\r\n    \"pam\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"PAM\",\r\n      \"serverIP\": \"logist14.lnk.telstra.net\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://logist14.lnk.telstra.net:3000\"\r\n    },\r\n    \"flg\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"FLG\",\r\n      \"serverIP\": \"opensyscon.com.au\",\r\n      \"serverPort\": 3133,\r\n      \"url\": \"http://opensyscon.com.au:3133\"\r\n    },\r\n    \"redback\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"REDBACK\",\r\n      \"serverIP\": \"opensyscon.com.au\",\r\n      \"serverPort\": 3083,\r\n      \"url\": \"http://opensyscon.com.au:3083\"\r\n    },\r\n    \"cct\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"CITYCRANE\",\r\n      \"serverIP\": \"remote.citycranetrucks.com.au\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://remote.citycranetrucks.com.au:3000\"\r\n    },\r\n    \"swift2\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"SWIFT2\",\r\n      \"serverIP\": \"roy1220545.lnk.telstra.net\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://roy1220545.lnk.telstra.net:3000\"\r\n    },\r\n   /*  \"wads\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"WADS\",\r\n      \"serverIP\": \"wads.opensyscon.com.au\",\r\n      \"serverPort\": 3061,\r\n      \"url\": \"http://wads.opensyscon.com.au:3061\"\r\n    }, */\r\n    \"wads\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"WADS\",\r\n      \"serverIP\": \"192.168.160.65\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://192.168.160.65:3000\"\r\n    },\r\n    \"univ\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"UNIVERSAL\",\r\n      \"serverIP\": \"universal.opensyscon.com.au\",\r\n      \"serverPort\": 3062,\r\n      \"url\": \"http://universal.opensyscon.com.au:3062\"\r\n    }\r\n  }\r\n\r\n\r\n  getConnectionDetails(customer) {\r\n    return this.customerConns[customer];\r\n    //this.http.get(\"assets/connection-data/customer-connections.json\").map((res: Response) => res.json().customerConns);\r\n    //records in this case\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/customerconn-service/customerconn-service.ts","import { Component } from '@angular/core';\r\nimport { App, NavController, AlertController, LoadingController, Loading, IonicPage } from 'ionic-angular';\r\nimport { Storage } from '@ionic/storage';\r\n\r\nimport { Subject } from 'rxjs/Subject';\r\nimport 'rxjs/add/operator/takeUntil';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\nimport { JobApi } from '../../../shared/sdk/services';\r\n\r\nimport { LoginServiceProvider } from '../../providers/login-service/login-service';\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { CustomerconnServiceProvider } from '../../providers/customerconn-service/customerconn-service'\r\nimport { SiteconfigServiceProvider } from '../../providers/siteconfig-service/siteconfig-service';\r\nimport { BaseServiceProvider } from '../../providers/base-service/base-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\n\r\nimport { TabsPage } from '../tabs/tabs';\r\n\r\n/**\r\n * Generated class for the LoginPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html',\r\n})\r\nexport class LoginPage {\r\n\r\n  private ngUnsubscribe: Subject<void> = new Subject<void>();\r\n\r\n  loading: Loading;\r\n  registerCredentials = { username: '', password: '' };\r\n  allowed: boolean = false;\r\n  connDetails;\r\n  //dataLoaded: boolean = false;\r\n  rootPage: any;\r\n  error;\r\n\r\n  constructor(private app: App, private navCtrl: NavController, private loginService: LoginServiceProvider,\r\n    private alertCtrl: AlertController, private loadingCtrl: LoadingController,\r\n    private localStorage: Storage, private configService: ConfigServiceProvider,\r\n    private siteConfig: SiteconfigServiceProvider, private base: BaseServiceProvider,\r\n    private customerConn: CustomerconnServiceProvider,\r\n    private sharedService: SharedServiceProvider) {\r\n    //console.log(\"LoginPage loading...\");\r\n\r\n  }\r\n\r\n  public login() {\r\n    //this.showLoading();\r\n    this.loginService.login(this.registerCredentials)\r\n      .takeUntil(this.ngUnsubscribe)\r\n      .subscribe(\r\n        (allowed) => {\r\n          this.allowed = allowed;\r\n        },\r\n        error => {\r\n          this.showError(error);\r\n        },\r\n        () => {\r\n          if (this.allowed) {\r\n            // Retrieve current login details\r\n            var loginDetails = JSON.parse(localStorage.getItem('login'));\r\n            // If no login details assume new installation or reset\r\n            if (!loginDetails) {\r\n              // 1st time ever logged in on PDA\r\n              loginDetails = {\r\n                username: this.registerCredentials.username,\r\n                time: new Date().toISOString()\r\n              };\r\n              // Store details in local storage           \r\n              localStorage.setItem('login', JSON.stringify(loginDetails));\r\n            }\r\n            else {\r\n              // update last login time\r\n              loginDetails.time = new Date().toISOString();\r\n              localStorage.setItem('login', JSON.stringify(loginDetails));\r\n            }\r\n            //Set the clientid         \r\n            localStorage.setItem('userId', this.registerCredentials.username);\r\n            //Redirect to the root app component.\r\n            document.location.href = 'index.html';\r\n          } else {\r\n            this.showError(\"Access Denied!\");\r\n          }\r\n        });//login subscription ends here  \r\n\r\n  }//login() ends here\r\n\r\n  showLoading() {\r\n    this.loading = this.loadingCtrl.create({\r\n      content: 'Please wait...',\r\n      dismissOnPageChange: true\r\n    });\r\n    this.loading.present();\r\n  }\r\n\r\n  showError(text) {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Login failed!',\r\n      subTitle: text,\r\n      buttons: ['OK']\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n/*\r\n  Generated class for the LoginServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n\r\n  See also https://devdactic.com/login-ionic-2/\r\n*/\r\n\r\nexport class User {\r\n  username: string;\r\n\r\n  constructor(username: string) {\r\n    this.username = username;\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class LoginServiceProvider {\r\n  currentUser: User;\r\n\r\n  constructor() {\r\n    //console.log('Hello LoginServiceProvider Provider');\r\n  }\r\n\r\n\r\n  public login(credentials) {\r\n    //Empty credential check\r\n    if (credentials.username === null || credentials.password === null) {\r\n      return Observable.throw(\"Please insert credentials\");\r\n    }\r\n    else //Run a credential check\r\n    {\r\n      //console.log(\"Logged in with user :\"+credentials.username);\r\n      /* A request to the loopback backend could be made here, to check\r\n       the credentials. But for now, we are using the following hardcoded logic. */\r\n      let access = false;\r\n\r\n      if (credentials.username == 'oscvtest' && credentials.password == 'oscvtest') {\r\n        access = true;\r\n      } else if (credentials.username == 'scope' && credentials.password == 'scope') {\r\n        access = true;\r\n      } else if (credentials.username == 'swift1' && credentials.password == 'swift1') {\r\n        access = true;\r\n      } else if (credentials.username == 'wpe' && credentials.password == 'wpe') {\r\n        access = true;\r\n      } else if (credentials.username == 'aptold' && credentials.password == 'aptold') {\r\n        access = true;\r\n      } else if (credentials.username == 'apt' && credentials.password == 'apt') {\r\n        access = true;\r\n      } else if (credentials.username == 'ces' && credentials.password == 'ces') {\r\n        access = true;\r\n      } else if (credentials.username == 'redback' && credentials.password == 'redback') {\r\n        access = true;\r\n      } else if (credentials.username == 'swift2' && credentials.password == 'swift2') {\r\n        access = true;\r\n      } else if (credentials.username == 'cct' && credentials.password == 'cct') {\t\t\t\t// City Crane\r\n        access = true;\r\n      } else if (credentials.username == 'itd' && credentials.password == 'itd') {\t\t\t\t// Intime\r\n        access = true;\r\n      } else if (credentials.username == 'glc' && credentials.password == 'glc') {\t\t\t\t// Greenlight\r\n        access = true;\r\n      } else if (credentials.username == 'ace' && credentials.password == 'ace') {\t\t\t\t// Ace\r\n        access = true;\r\n      } else if (credentials.username == 'pam' && credentials.password == 'pam') {\t\t\t\t// P and M\r\n        access = true;\r\n      } else if (credentials.username == 'flg' && credentials.password == 'flg') {\t\t\t\t// Fair Logistics\r\n        access = true;\r\n      } else if (credentials.username == 'wads' && credentials.password == 'wads') {\t\t\t// WADS\r\n        access = true;\r\n      } else if (credentials.username == 'univ' && credentials.password == 'univ') {\t\t\t// Universal\r\n        access = true;\r\n\r\n      } else {\r\n        return Observable.throw(\"Wrong credentials!\");\r\n      }\r\n\r\n\r\n      return Observable.create(\r\n        observer => {\r\n          this.currentUser = new User(credentials.username);\r\n\r\n          observer.next(access);\r\n          observer.complete();\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  public getUserInfo(): User {\r\n    return this.currentUser;\r\n  }\r\n\r\n  public logout() {\r\n    return Observable.create(\r\n      observer => {\r\n        this.currentUser = null;\r\n        observer.next(true);\r\n        observer.complete();\r\n      }\r\n    );\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/login-service/login-service.ts","import { Component } from '@angular/core';\r\nimport { NavController, IonicPage } from 'ionic-angular';\r\n\r\nimport 'rxjs/add/operator/takeUntil';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\n\r\nimport { LoginServiceProvider } from '../../providers/login-service/login-service';\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\n\r\nimport { HomePage } from '../home/home';\r\nimport { JobDetailsPage } from '../job-details/job-details';\r\nimport { DevicePage } from '../device/device';\r\nimport { GpsPage } from '../gps/gps';\r\nimport { PdaPage } from '../pda/pda';\r\nimport { JseaPage } from '../jsea/jsea';\r\nimport { MsgsPage } from '../msgs/msgs';\r\nimport { ImagesPage } from '../images/images';\r\nimport { BarcodePage } from '../barcode/barcode';\r\nimport { ChangePage } from '../change/change';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'page-tabs',\r\n  templateUrl: 'tabs.html'\r\n})\r\n\r\nexport class TabsPage {\r\n  private ngUnsubscribe: Subject<void> = new Subject<void>();\r\n  tab1Root = HomePage;\r\n  tab2Root = JobDetailsPage;\r\n  tab3Root = DevicePage;\r\n  tab4Root = GpsPage;\r\n  tab5Root = PdaPage;\r\n  tab6Root = JseaPage;\r\n  tab7Root = MsgsPage;\r\n  tab8Root = ImagesPage;\r\n  tab9Root = BarcodePage;\r\n  tab10Root = ChangePage;\r\n  username = '';\r\n\r\n  constructor(private nav: NavController, private auth: LoginServiceProvider, private configService: ConfigServiceProvider) {\r\n    let info = this.auth.getUserInfo();\r\n   \r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n  }\r\n\r\n  public logout() {\r\n    this.auth.logout().takeUntil(this.ngUnsubscribe).subscribe(success => {\r\n      this.nav.setRoot('LoginPage');\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, AlertController, Tab, Tabs, App } from 'ionic-angular';\r\n\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\nimport { TpmPdaControllerApi } from '../../../shared/sdk/services';\r\n\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { LogServiceProvider } from '../../providers/log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../../providers/siteconfig-service/siteconfig-service';\r\nimport { BaseServiceProvider } from '../../providers/base-service/base-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\nimport { MessageServiceProvider } from '../../providers/message-service/message-service';\r\nimport { ExitServiceProvider } from '../../providers/exit-service/exit-service';\r\nimport { PushServiceProvider } from '../../providers/push-service/push-service';\r\nimport { EventServiceProvider } from '../../providers/event-service/event-service';\r\n\r\n\r\nimport { TabsPage } from '../tabs/tabs';\r\nimport { LoginPage } from '../login/login';\r\nimport { MyApp } from '../../app/app.component';\r\n\r\ndeclare const lbclient: any;\r\n/*\r\n * Generated class for the PdaPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-pda',\r\n  templateUrl: 'pda.html',\r\n})\r\nexport class PdaPage {\r\n  t: Tabs = this.navCtrl.parent;\r\n  clientlog = lbclient.clientlog;\r\n  username: any;\r\n  filter;\r\n  result;\r\n  driverId;\r\n  userId;\r\n  firstlogin;\r\n  login;\r\n  driverInfo;\r\n  loginFlag = this.pdaParams.isDrvLoggedOn();\r\n  TpmPdaControllers = [];\r\n  TpmRowCount = 0;\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'PdaPage' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  _filter = {\r\n    \"where\": { and: [{ \"tpmpc_driver_id\": this.pdaParams.driverId, \"tpmpc_access_allowed\": 'Y', \"tpmpc_access_registered\": 'Y' }] }\r\n  };\r\n  _newfilter = {\r\n    \"where\": { and: [{ \"tpmpc_driver_id\": this.pdaParams.driverId, \"tpmpc_access_allowed\": 'Y', \"tpmpc_access_registered\": { neq: \"Y\" } }] }\r\n  };\r\n\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams,\r\n    private configService: ConfigServiceProvider, private pdaParams: PdaparamsServiceProvider,\r\n    private siteConfig: SiteconfigServiceProvider, private logger: LogServiceProvider,\r\n    private base: BaseServiceProvider, private sharedService: SharedServiceProvider,\r\n    private TpmPdaController: TpmPdaControllerApi, private exitService: ExitServiceProvider,\r\n    private messageService: MessageServiceProvider, private alertCtrl: AlertController,\r\n    private pushService: PushServiceProvider, private iab: InAppBrowser,\r\n    private eventService: EventServiceProvider, private app: App) {\r\n    this.username = navParams.data;\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n    this.driverId = this.pdaParams.driverId;\r\n    if (typeof (this.sharedService.loginFlag) == 'undefined')\r\n      this.sharedService.loginFlag = this.pdaParams.isDrvLoggedOn();\r\n    this.firstlogin = localStorage.getItem('firstlogin');\r\n    this.result = this.getTpmPdaControllers(this._filter);\r\n  }\r\n\r\n  openPrivacyUrl(url) {\r\n    this.iab.create(url, \"_self\");\r\n  }\r\n\r\n  getTpmPdaControllers = (filter) => {\r\n    this.TpmPdaController.find(filter).subscribe((results) => {\r\n      this.TpmPdaControllers = results;\r\n      this.TpmRowCount = results.length;\r\n      // If no rows returned reset driver no entered by user\r\n      if (results.length == 0) {\r\n        this.pdaParams.setDriverInfo(0);\r\n        var prevId = this.pdaParams.getParams().driverId;\r\n        //Create alert        \r\n        if (this.driverId != prevId) {\r\n          let alert = this.alertCtrl.create({\r\n            title: 'Driver',\r\n            message: 'Driver ID is not set. Please call support and then retry!',\r\n            buttons: [\r\n              {\r\n                text: 'OK'\r\n              }\r\n            ]\r\n          });\r\n          alert.present();\r\n        }\r\n      }\r\n\r\n      // TODO - need to ensure we have updated scope so in promise somewhere in TpmPdaController.find ??\r\n      var TpmPdaControllerRow = this.TpmPdaControllers[0];\t\t// should only ever be one\r\n      if (TpmPdaControllerRow) {\r\n        if (TpmPdaControllerRow.tpmpc_access_registered == 'N') {\t\t// not yet registered\r\n          TpmPdaControllerRow.tpmpc_access_registered = 'Y';\r\n          TpmPdaControllerRow.tpmpc_last_update_time = new Date().toISOString();\r\n          this.TpmPdaController.upsert(TpmPdaControllerRow).subscribe();\r\n          this.sharedService.tpmPdaCtlsLoadedSubject.next(true);\r\n        }\r\n      }\r\n    });\r\n    return 1;\r\n  };\r\n\r\n\r\n  updateDriverPrompt = () => {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Driver',\r\n      message: 'Enter the driver number to update',\r\n      inputs: [\r\n        {\r\n          name: 'drivernum',\r\n          placeholder: 'Driver ID'\r\n        },\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: () => {\r\n            console.log('Cancel clicked');\r\n            return;\r\n          }\r\n        },\r\n        {\r\n          text: 'Update',\r\n          handler: (data) => {\r\n            this.updateDriver(data.drivernum);\r\n\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    alert.present();\r\n  }// updateDriverPrompt() ends here\r\n\r\n  updateDriver = (driverId) => {\r\n    //Create alert        \r\n    if (isNaN(driverId)) {\r\n      let alert = this.alertCtrl.create({\r\n        title: 'Driver',\r\n        message: 'Please enter correct Driver ID.',\r\n        buttons: [\r\n          {\r\n            text: 'OK'\r\n          }\r\n        ]\r\n      });\r\n      alert.present();\r\n      return;\r\n    }\r\n    this.driverId = driverId;\r\n\r\n    // TODO - we need to unregister from push services and reregister with new driver id\r\n    // reset _newfilter as driver id has changed\r\n    var _newfilter = {\r\n      \"where\": { and: [{ \"tpmpc_driver_id\": this.driverId, \"tpmpc_access_allowed\": 'Y', \"tpmpc_access_registered\": { neq: \"Y\" } }] }\r\n    };\r\n    this.filter = Object.assign({}, _newfilter);\r\n    this.getTpmPdaControllers(this.filter);\r\n\r\n    //Driver number has changed - normally from default of 0 to real driver id when initialising\r\n    //Get rid of all stuff related to the driver so we dont get wrong data.\r\n    if (this.firstlogin === 'false') {\r\n      localStorage.clear();\r\n      this.pdaParams.clearDriverInfo();\r\n    }\r\n\r\n    this.clientlog.info(\"About to call getTpmPdaControllers with filter:\" + JSON.stringify(this.filter));\r\n    this.log.info(\"About to call getTpmPdaControllers with filter:\" + JSON.stringify(this.filter));\r\n    // Send LOGON event\r\n    //LOGON is done via a button now\r\n    if (this.driverId > 0 && this.firstlogin === 'false') {\r\n      this.eventService.sendMsg('LOGON');\r\n      // Dump local storage at logon time - debug aid\r\n      this.messageService.dumpLocalStorage();\r\n    }\r\n    this.pdaParams.setDriverInfo(this.driverId);\r\n    this.pdaParams.logoffDriver();\r\n    //If firsttime login, show the home page\r\n    if (this.firstlogin === 'true') {\r\n      this.navCtrl.setRoot(TabsPage);\r\n    }\r\n    else {\r\n      this.app.getRootNav().setRoot(MyApp);\r\n    }\r\n  }//updateDriver() ends here\r\n\r\n\r\n  pushDeRegister = function () {\r\n    this.pushService.unRegister();\r\n  }\r\n\r\n  pushRegister = function () {\r\n    this.pushService.registerForPush();\r\n  }\r\n\r\n  logon = function () {\r\n    this.pdaParams.logonDriver();\r\n    this.eventService.sendMsg('LOGON');\r\n    // Dump local storage at logon time - debug aid\r\n    this.messageService.dumpLocalStorage();\r\n  }\r\n\r\n  logoff = function () {\r\n    this.pdaParams.logoffDriver();\r\n    this.eventService.sendMsg('LOGOFF');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pda/pda.ts","/* tslint:disable */\r\n/**\r\n* @module LoopBackConfig\r\n* @description\r\n*\r\n* The LoopBackConfig module help developers to externally \r\n* configure the base url and api version for loopback.io\r\n*\r\n* Example\r\n*\r\n* import { LoopBackConfig } from './sdk';\r\n* \r\n* @Component() // No metadata needed for this module\r\n*\r\n* export class MyApp {\r\n*   constructor() {\r\n*     LoopBackConfig.setBaseURL('http://localhost:3000');\r\n*     LoopBackConfig.setApiVersion('api');\r\n*   }\r\n* }\r\n**/\r\nexport class LoopBackConfig {\r\n  private static path: string; //= '//192.168.160.132:3001';\r\n  private static version: string | number;// = 'api';\r\n  private static authPrefix: string = '';\r\n  private static debug: boolean = true;\r\n  private static filterOn: string = 'headers';\r\n  private static secure: boolean = false;\r\n  private static withCredentials: boolean = false;\r\n\r\n  public static setApiVersion(version: string = 'api'): void {\r\n    LoopBackConfig.version = version;\r\n  }\r\n  \r\n  public static getApiVersion(): string | number {\r\n    return LoopBackConfig.version;\r\n  }\r\n\r\n  public static setBaseURL(url: string = '/'): void {\r\n    LoopBackConfig.path = url;\r\n  }\r\n  \r\n  public static getPath(): string {\r\n    return LoopBackConfig.path;\r\n  }\r\n\r\n  public static setAuthPrefix(authPrefix: string = ''): void {\r\n    LoopBackConfig.authPrefix = authPrefix;\r\n  }\r\n\r\n  public static getAuthPrefix(): string {\r\n    return LoopBackConfig.authPrefix;\r\n  }\r\n\r\n  public static setDebugMode(isEnabled: boolean): void {\r\n    LoopBackConfig.debug = isEnabled;\r\n  }\r\n\r\n  public static debuggable(): boolean {\r\n    return LoopBackConfig.debug;\r\n  }\r\n\r\n  public static filterOnUrl(): void {\r\n    LoopBackConfig.filterOn = 'url';\r\n  }\r\n\r\n  public static filterOnHeaders(): void {\r\n    LoopBackConfig.filterOn = 'headers';\r\n  }\r\n\r\n  public static isHeadersFilteringSet(): boolean {\r\n    return (LoopBackConfig.filterOn === 'headers');\r\n  }\r\n\r\n  public static setSecureWebSockets(): void {\r\n    LoopBackConfig.secure = true;\r\n  }\r\n\r\n  public static unsetSecureWebSockets(): void {\r\n    LoopBackConfig.secure = false;\r\n  }\r\n\r\n  public static isSecureWebSocketsSet(): boolean {\r\n    return LoopBackConfig.secure;\r\n  }\r\n\r\n  public static setRequestOptionsCredentials(withCredentials: boolean = false): void {\r\n    LoopBackConfig.withCredentials = withCredentials;\r\n  }\r\n\r\n  public static getRequestOptionsCredentials(): boolean {\r\n    return LoopBackConfig.withCredentials;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/lb.config.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 210;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 210\n// module chunks = 0","/* tslint:disable */\r\n/**\r\n* @module SDKModule\r\n* @author Jonathan Casarrubias <t:@johncasarrubias> <gh:jonathan-casarrubias>\r\n* @license MIT 2016 Jonathan Casarrubias\r\n* @version 2.1.0\r\n* @description\r\n* The SDKModule is a generated Software Development Kit automatically built by\r\n* the LoopBack SDK Builder open source module.\r\n*\r\n* The SDKModule provides Angular 2 >= RC.5 support, which means that NgModules\r\n* can import this Software Development Kit as follows:\r\n*\r\n*\r\n* APP Route Module Context\r\n* ============================================================================\r\n* import { NgModule }       from '@angular/core';\r\n* import { BrowserModule }  from '@angular/platform-browser';\r\n* // App Root \r\n* import { AppComponent }   from './app.component';\r\n* // Feature Modules\r\n* import { SDK[Browser|Node|Native]Module } from './shared/sdk/sdk.module';\r\n* // Import Routing\r\n* import { routing }        from './app.routing';\r\n* @NgModule({\r\n*  imports: [\r\n*    BrowserModule,\r\n*    routing,\r\n*    SDK[Browser|Node|Native]Module.forRoot()\r\n*  ],\r\n*  declarations: [ AppComponent ],\r\n*  bootstrap:    [ AppComponent ]\r\n* })\r\n* export class AppModule { }\r\n*\r\n**/\r\nimport { JSONSearchParams } from './services/core/search.params';\r\nimport { ErrorHandler } from './services/core/error.service';\r\nimport { LoopBackAuth } from './services/core/auth.service';\r\nimport { LoggerService } from './services/custom/logger.service';\r\nimport { SDKModels } from './services/custom/SDKModels';\r\nimport { InternalStorage, SDKStorage } from './storage/storage.swaps';\r\nimport { HttpModule } from '@angular/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CookieBrowser } from './storage/cookie.browser';\r\nimport { StorageBrowser } from './storage/storage.browser';\r\nimport { SocketBrowser } from './sockets/socket.browser';\r\nimport { SocketDriver } from './sockets/socket.driver';\r\nimport { SocketConnection } from './sockets/socket.connections';\r\nimport { RealTime } from './services/core/real.time';\r\nimport { JobApi } from './services/custom/Job';\r\n\r\n\r\nimport { TpmPdaControllerApi } from './services/custom/TpmPdaController';\r\nimport { gpshistoryapi } from './services/custom/GpsHistory';\r\nimport { ApplicationApi } from './services/custom/Application';\r\nimport { InstallationApi } from './services/custom/Installation';\r\nimport { NotificationApi } from './services/custom/Notification';\r\nimport { PushApi } from './services/custom/Push';\r\nimport { Mobile_eventApi } from './services/custom/Mobile_event';\r\nimport { SiteConfigApi } from './services/custom/SiteConfig';\r\nimport { DespatchToDriverMessagesApi } from './services/custom/DespatchToDriverMessages';\r\nimport { JseaDriverQuestionsApi } from './services/custom/JseaDriverQuestions';\r\nimport { JseaDriverAnswersApi } from './services/custom/JseaDriverAnswers';\r\n\r\nimport { PhotocontainerApi } from './services/custom/Photocontainer';\r\nimport { ImageApi } from './services/custom/Image';\r\nimport { BarcodeHistApi } from './services/custom/BarcodeHist';\r\n\r\n/**\r\n* @module SDKBrowserModule\r\n* @description\r\n* This module should be imported when building a Web Application in the following scenarios:\r\n*\r\n*  1.- Regular web application\r\n*  2.- Angular universal application (Browser Portion)\r\n*  3.- Progressive applications (Angular Mobile, Ionic, WebViews, etc)\r\n**/\r\n@NgModule({\r\n  imports:      [ CommonModule, HttpModule ],\r\n  declarations: [ ],\r\n  exports:      [ ],\r\n  providers:    [\r\n    ErrorHandler,\r\n    SocketConnection\r\n  ]\r\n})\r\nexport class SDKBrowserModule {\r\n  static forRoot(internalStorageProvider: any = {\r\n    provide: InternalStorage,\r\n    useClass: CookieBrowser\r\n  }): ModuleWithProviders {\r\n    return {\r\n      ngModule  : SDKBrowserModule,\r\n      providers : [\r\n        LoopBackAuth,\r\n        LoggerService,\r\n        JSONSearchParams,\r\n        SDKModels,\r\n        RealTime,\r\n        JobApi,\r\n  \r\n       \r\n        TpmPdaControllerApi,\r\n        gpshistoryapi,\r\n        ApplicationApi,\r\n        InstallationApi,\r\n        NotificationApi,\r\n        PushApi,\r\n        Mobile_eventApi,\r\n        SiteConfigApi,\r\n        DespatchToDriverMessagesApi,\r\n        JseaDriverQuestionsApi,\r\n        JseaDriverAnswersApi,\r\n      \r\n        PhotocontainerApi,\r\n        ImageApi,\r\n        BarcodeHistApi,\r\n    \r\n        internalStorageProvider,\r\n        { provide: SDKStorage, useClass: StorageBrowser },\r\n        { provide: SocketDriver, useClass: SocketBrowser }\r\n      ]\r\n    };\r\n  }\r\n}\r\n/**\r\n* Have Fun!!!\r\n* - Jon\r\n**/\r\nexport * from './models/index';\r\nexport * from './services/index';\r\nexport * from './lb.config';\r\nexport * from './storage/storage.swaps';\r\nexport { CookieBrowser } from './storage/cookie.browser';\r\nexport { StorageBrowser } from './storage/storage.browser';\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/index.ts","/* tslint:disable */\r\ndeclare var Object: any;\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { InternalStorage } from '../../storage/storage.swaps';\r\nimport { SDKToken } from '../../models/BaseModels';\r\n/**\r\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\r\n* @module SocketConnection\r\n* @license MIT\r\n* @description\r\n* This module handle socket connections and return singleton instances for each\r\n* connection, it will use the SDK Socket Driver Available currently supporting\r\n* Angular 2 for web, NativeScript 2 and Angular Universal.\r\n**/\r\n@Injectable()\r\nexport class LoopBackAuth {\r\n  /**\r\n   * @type {SDKToken}\r\n   **/\r\n  private token: SDKToken = new SDKToken();\r\n  /**\r\n   * @type {string}\r\n   **/\r\n  protected prefix: string = '$LoopBackSDK$';\r\n  /**\r\n   * @method constructor\r\n   * @param {InternalStorage} storage Internal Storage Driver\r\n   * @description\r\n   * The constructor will initialize the token loading data from storage\r\n   **/\r\n  constructor(@Inject(InternalStorage) protected storage: InternalStorage) {\r\n    this.token.id = this.load('id');\r\n    this.token.user = this.load('user');\r\n    this.token.userId = this.load('userId');\r\n    this.token.created = this.load('created');\r\n    this.token.ttl = this.load('ttl');\r\n    this.token.rememberMe = this.load('rememberMe');\r\n  }\r\n  /**\r\n   * @method setRememberMe\r\n   * @param {boolean} value Flag to remember credentials\r\n   * @return {void}\r\n   * @description\r\n   * This method will set a flag in order to remember the current credentials\r\n   **/\r\n  public setRememberMe(value: boolean): void {\r\n    this.token.rememberMe = value;\r\n  }\r\n  /**\r\n   * @method setUser\r\n   * @param {any} user Any type of user model\r\n   * @return {void}\r\n   * @description\r\n   * This method will update the user information and persist it if the\r\n   * rememberMe flag is set.\r\n   **/\r\n  public setUser(user: any) {\r\n    this.token.user = user;\r\n    this.save();\r\n  }\r\n  /**\r\n   * @method setToken\r\n   * @param {SDKToken} token SDKToken or casted AccessToken instance\r\n   * @return {void}\r\n   * @description\r\n   * This method will set a flag in order to remember the current credentials\r\n   **/\r\n  public setToken(token: SDKToken): void {\r\n    this.token = Object.assign({}, this.token, token);\r\n    this.save();\r\n  }\r\n  /**\r\n   * @method getToken\r\n   * @return {void}\r\n   * @description\r\n   * This method will set a flag in order to remember the current credentials.\r\n   **/\r\n  public getToken(): SDKToken {\r\n    return <SDKToken>this.token;\r\n  }\r\n  /**\r\n   * @method getAccessTokenId\r\n   * @return {string}\r\n   * @description\r\n   * This method will return the actual token string, not the object instance.\r\n   **/\r\n  public getAccessTokenId(): string {\r\n    return this.token.id;\r\n  }\r\n  /**\r\n   * @method getCurrentUserId\r\n   * @return {any}\r\n   * @description\r\n   * This method will return the current user id, it can be number or string.\r\n   **/\r\n  public getCurrentUserId(): any {\r\n    return this.token.userId;\r\n  }\r\n  /**\r\n   * @method getCurrentUserData\r\n   * @return {any}\r\n   * @description\r\n   * This method will return the current user instance.\r\n   **/\r\n  public getCurrentUserData(): any {\r\n    return (typeof this.token.user === 'string') ? JSON.parse(this.token.user) : this.token.user;\r\n  }\r\n  /**\r\n   * @method save\r\n   * @return {boolean} Whether or not the information was saved\r\n   * @description\r\n   * This method will save in either local storage or cookies the current credentials.\r\n   * But only if rememberMe is enabled.\r\n   **/\r\n  public save(): boolean {\r\n      let today = new Date();\r\n      let expires = new Date(today.getTime() + (this.token.ttl * 1000));\r\n      this.persist('id', this.token.id, expires);\r\n      this.persist('user', this.token.user, expires);\r\n      this.persist('userId', this.token.userId, expires);\r\n      this.persist('created', this.token.created, expires);\r\n      this.persist('ttl', this.token.ttl, expires);\r\n      this.persist('rememberMe', this.token.rememberMe, expires);\r\n      return true;\r\n  };\r\n  /**\r\n   * @method load\r\n   * @param {string} prop Property name\r\n   * @return {any} Any information persisted in storage\r\n   * @description\r\n   * This method will load either from local storage or cookies the provided property.\r\n   **/\r\n  protected load(prop: string): any {\r\n    return this.storage.get(`${this.prefix}${prop}`);\r\n  }\r\n  /**\r\n   * @method clear\r\n   * @return {void}\r\n   * @description\r\n   * This method will clear cookies or the local storage.\r\n   **/\r\n  public clear(): void {\r\n    Object.keys(this.token).forEach((prop: string) => this.storage.remove(`${this.prefix}${prop}`));\r\n    this.token = new SDKToken();\r\n  }\r\n  /**\r\n   * @method persist\r\n   * @return {void}\r\n   * @description\r\n   * This method saves values to storage\r\n   **/\r\n  protected persist(prop: string, value: any, expires?: Date): void {\r\n    try {\r\n      this.storage.set(\r\n        `${this.prefix}${prop}`,\r\n        (typeof value === 'object') ? JSON.stringify(value) : value,\r\n        this.token.rememberMe?expires:null\r\n      );\r\n    }\r\n    catch (err) {\r\n      console.error('Cannot access local/session storage:', err);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/core/auth.service.ts","/* tslint:disable */\r\nimport { Injectable } from '@angular/core';\r\nimport { Job } from '../../models/Job';\r\n\r\n\r\nimport { TpmPdaController } from '../../models/TpmPdaController';\r\nimport { GpsHistory } from '../../models/GpsHistory';\r\nimport { Application } from '../../models/Application';\r\nimport { Installation } from '../../models/Installation';\r\nimport { Notification } from '../../models/Notification';\r\nimport { Push } from '../../models/Push';\r\nimport { Mobile_event } from '../../models/Mobile_event';\r\nimport { SiteConfig } from '../../models/SiteConfig';\r\nimport { DespatchToDriverMessages } from '../../models/DespatchToDriverMessages';\r\nimport { JseaDriverQuestions } from '../../models/JseaDriverQuestions';\r\nimport { JseaDriverAnswers } from '../../models/JseaDriverAnswers';\r\n\r\nimport { Photocontainer } from '../../models/Photocontainer';\r\nimport { Image } from '../../models/Image';\r\nimport { BarcodeHist } from '../../models/BarcodeHist';\r\n\r\n\r\nexport interface Models { [name: string]: any }\r\n\r\n@Injectable()\r\nexport class SDKModels {\r\n\r\n  private models: Models = {\r\n    Job: Job,\r\n\r\n\r\n\r\n    TpmPdaController: TpmPdaController,\r\n    GpsHistory: GpsHistory,\r\n    Application: Application,\r\n    Installation: Installation,\r\n    Notification: Notification,\r\n    Push: Push,\r\n    Mobile_event: Mobile_event,\r\n    SiteConfig: SiteConfig,\r\n    DespatchToDriverMessages: DespatchToDriverMessages,\r\n    JseaDriverQuestions: JseaDriverQuestions,\r\n    JseaDriverAnswers: JseaDriverAnswers,\r\n\r\n    Photocontainer: Photocontainer,\r\n    Image: Image,\r\n    BarcodeHist: BarcodeHist\r\n\r\n\r\n  };\r\n\r\n  public get(modelName: string): any {\r\n    return this.models[modelName];\r\n  }\r\n\r\n  public getAll(): Models {\r\n    return this.models;\r\n  }\r\n\r\n  public getModelNames(): string[] {\r\n    return Object.keys(this.models);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/SDKModels.ts","var map = {\n\t\"../pages/barcode/barcode.module\": [\n\t\t358\n\t],\n\t\"../pages/change/change.module\": [\n\t\t341\n\t],\n\t\"../pages/device/device.module\": [\n\t\t342\n\t],\n\t\"../pages/gps/gps.module\": [\n\t\t354\n\t],\n\t\"../pages/image-text/image-text.module\": [\n\t\t325\n\t],\n\t\"../pages/images/images.module\": [\n\t\t357\n\t],\n\t\"../pages/job-detail-notes/job-detail-notes.module\": [\n\t\t327\n\t],\n\t\"../pages/job-details/job-details.module\": [\n\t\t329\n\t],\n\t\"../pages/jsea/jsea.module\": [\n\t\t254\n\t],\n\t\"../pages/login/login.module\": [\n\t\t359\n\t],\n\t\"../pages/msgs/msgs.module\": [\n\t\t356\n\t],\n\t\"../pages/pda/pda.module\": [\n\t\t355\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 253;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 253\n// module chunks = 0","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { JseaPage } from './jsea';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    JseaPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(JseaPage),\r\n  ],\r\n})\r\nexport class JseaPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/jsea/jsea.module.ts","/* tslint:disable */\r\n\r\n\r\n\r\ndeclare var Object: any;\r\nexport interface LoopBackFilter {\r\n  fields?: any;\r\n  include?: any;\r\n  limit?: any;\r\n  order?: any;\r\n  skip?: any;\r\n  offset?: any;\r\n  where?: any;\r\n}\r\n\r\nexport interface AccessTokenInterface {\r\n  \"id\"?: string;\r\n  \"ttl\"?: number;\r\n  \"scopes\"?: [\"string\"];\r\n  \"created\"?: Date;\r\n  \"userId\"?: string;\r\n  \"user\"?: any;\r\n}\r\n\r\nexport class AccessToken implements AccessTokenInterface {\r\n  \"id\": string;\r\n  \"ttl\": number;\r\n  \"scopes\": [\"string\"];\r\n  \"created\": Date;\r\n  \"userId\": string;\r\n  \"user\": any;\r\n  constructor(data?: AccessTokenInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `AccessToken`.\r\n   */\r\n  public static getModelName() {\r\n    return \"AccessToken\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of AccessToken for dynamic purposes.\r\n  **/\r\n  public static factory(data: AccessTokenInterface): AccessToken{\r\n    return new AccessToken(data);\r\n  }  \r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'AccessToken',\r\n      plural: 'AccessTokens',\r\n      properties: {\r\n        \"id\": {\r\n          name: 'id',\r\n          type: 'string'\r\n        },\r\n        \"ttl\": {\r\n          name: 'ttl',\r\n          type: 'number',\r\n          default: 1209600\r\n        },\r\n        \"scopes\": {\r\n          name: 'scopes',\r\n          type: '[\"string\"]'\r\n        },\r\n        \"created\": {\r\n          name: 'created',\r\n          type: 'Date'\r\n        },\r\n        \"userId\": {\r\n          name: 'userId',\r\n          type: 'string'\r\n        },\r\n      },\r\n      relations: {\r\n        user: {\r\n          name: 'user',\r\n          type: 'User',\r\n          model: 'User'\r\n        },\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class SDKToken implements AccessTokenInterface {\r\n  id: any = null;\r\n  ttl: number = null;\r\n  scopes: any = null;\r\n  created: any = null;\r\n  userId: any = null;\r\n  user: any = null;\r\n  rememberMe: boolean = null;\r\n  constructor(data?: AccessTokenInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n}\r\n/**\r\n* This GeoPoint represents both, LoopBack and MongoDB GeoPoint\r\n**/\r\nexport interface GeoPoint  {\r\n    lat?: number;\r\n    lng?: number;\r\n    type?: string;\r\n    coordinates?: number[];\r\n}\r\n\r\nexport interface StatFilter {\r\n    range: string,\r\n    custom?: {\r\n      start: string,\r\n      end: string\r\n    },\r\n    where?: {},\r\n    groupBy?: string\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/BaseModels.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface TpmPdaControllerInterface {\r\n  \"tpmpc_imei_id\"?: string;\r\n  \"tpmpc_phone_num\": string;\r\n  \"tpmpc_driver_id\": number;\r\n  \"tpmpc_driver_name\"?: string;\r\n  \"tpmpc_access_allowed\"?: string;\r\n  \"tpmpc_access_registered\"?: string;\r\n  \"tpmpc_last_update_time\"?: Date;\r\n}\r\n\r\nexport class TpmPdaController implements TpmPdaControllerInterface {\r\n  \"tpmpc_imei_id\": string;\r\n  \"tpmpc_phone_num\": string;\r\n  \"tpmpc_driver_id\": number;\r\n  \"tpmpc_driver_name\": string;\r\n  \"tpmpc_access_allowed\": string;\r\n  \"tpmpc_access_registered\": string;\r\n  \"tpmpc_last_update_time\": Date;\r\n  constructor(data?: TpmPdaControllerInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `TpmPdaController`.\r\n   */\r\n  public static getModelName() {\r\n    return \"TpmPdaController\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of TpmPdaController for dynamic purposes.\r\n  **/\r\n  public static factory(data: TpmPdaControllerInterface): TpmPdaController{\r\n    return new TpmPdaController(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'TpmPdaController',\r\n      plural: 'TpmPdaControllers',\r\n      path: 'TpmPdaControllers',\r\n      idName: 'tpmpc_imei_id',\r\n      properties: {\r\n        \"tpmpc_imei_id\": {\r\n          name: 'tpmpc_imei_id',\r\n          type: 'string'\r\n        },\r\n        \"tpmpc_phone_num\": {\r\n          name: 'tpmpc_phone_num',\r\n          type: 'string'\r\n        },\r\n        \"tpmpc_driver_id\": {\r\n          name: 'tpmpc_driver_id',\r\n          type: 'number'\r\n        },\r\n        \"tpmpc_driver_name\": {\r\n          name: 'tpmpc_driver_name',\r\n          type: 'string'\r\n        },\r\n        \"tpmpc_access_allowed\": {\r\n          name: 'tpmpc_access_allowed',\r\n          type: 'string'\r\n        },\r\n        \"tpmpc_access_registered\": {\r\n          name: 'tpmpc_access_registered',\r\n          type: 'string'\r\n        },\r\n        \"tpmpc_last_update_time\": {\r\n          name: 'tpmpc_last_update_time',\r\n          type: 'Date'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/TpmPdaController.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface ApplicationInterface {\r\n  \"id\"?: string;\r\n  \"realm\"?: string;\r\n  \"name\": string;\r\n  \"description\"?: string;\r\n  \"icon\"?: string;\r\n  \"owner\"?: string;\r\n  \"collaborators\"?: Array<any>;\r\n  \"email\"?: string;\r\n  \"emailVerified\"?: boolean;\r\n  \"url\"?: string;\r\n  \"callbackUrls\"?: Array<any>;\r\n  \"permissions\"?: Array<any>;\r\n  \"clientKey\"?: string;\r\n  \"javaScriptKey\"?: string;\r\n  \"restApiKey\"?: string;\r\n  \"windowsKey\"?: string;\r\n  \"masterKey\"?: string;\r\n  \"pushSettings\"?: any;\r\n  \"authenticationEnabled\"?: boolean;\r\n  \"anonymousAllowed\"?: boolean;\r\n  \"authenticationSchemes\"?: Array<any>;\r\n  \"status\"?: string;\r\n  \"created\"?: Date;\r\n  \"modified\"?: Date;\r\n}\r\n\r\nexport class Application implements ApplicationInterface {\r\n  \"id\": string;\r\n  \"realm\": string;\r\n  \"name\": string;\r\n  \"description\": string;\r\n  \"icon\": string;\r\n  \"owner\": string;\r\n  \"collaborators\": Array<any>;\r\n  \"email\": string;\r\n  \"emailVerified\": boolean;\r\n  \"url\": string;\r\n  \"callbackUrls\": Array<any>;\r\n  \"permissions\": Array<any>;\r\n  \"clientKey\": string;\r\n  \"javaScriptKey\": string;\r\n  \"restApiKey\": string;\r\n  \"windowsKey\": string;\r\n  \"masterKey\": string;\r\n  \"pushSettings\": any;\r\n  \"authenticationEnabled\": boolean;\r\n  \"anonymousAllowed\": boolean;\r\n  \"authenticationSchemes\": Array<any>;\r\n  \"status\": string;\r\n  \"created\": Date;\r\n  \"modified\": Date;\r\n  constructor(data?: ApplicationInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Application`.\r\n   */\r\n  public static getModelName() {\r\n    return \"Application\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of Application for dynamic purposes.\r\n  **/\r\n  public static factory(data: ApplicationInterface): Application{\r\n    return new Application(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'Application',\r\n      plural: 'Applications',\r\n      path: 'Applications',\r\n      idName: 'id',\r\n      properties: {\r\n        \"id\": {\r\n          name: 'id',\r\n          type: 'string'\r\n        },\r\n        \"realm\": {\r\n          name: 'realm',\r\n          type: 'string'\r\n        },\r\n        \"name\": {\r\n          name: 'name',\r\n          type: 'string'\r\n        },\r\n        \"description\": {\r\n          name: 'description',\r\n          type: 'string'\r\n        },\r\n        \"icon\": {\r\n          name: 'icon',\r\n          type: 'string'\r\n        },\r\n        \"owner\": {\r\n          name: 'owner',\r\n          type: 'string'\r\n        },\r\n        \"collaborators\": {\r\n          name: 'collaborators',\r\n          type: 'Array&lt;any&gt;'\r\n        },\r\n        \"email\": {\r\n          name: 'email',\r\n          type: 'string'\r\n        },\r\n        \"emailVerified\": {\r\n          name: 'emailVerified',\r\n          type: 'boolean'\r\n        },\r\n        \"url\": {\r\n          name: 'url',\r\n          type: 'string'\r\n        },\r\n        \"callbackUrls\": {\r\n          name: 'callbackUrls',\r\n          type: 'Array&lt;any&gt;'\r\n        },\r\n        \"permissions\": {\r\n          name: 'permissions',\r\n          type: 'Array&lt;any&gt;'\r\n        },\r\n        \"clientKey\": {\r\n          name: 'clientKey',\r\n          type: 'string'\r\n        },\r\n        \"javaScriptKey\": {\r\n          name: 'javaScriptKey',\r\n          type: 'string'\r\n        },\r\n        \"restApiKey\": {\r\n          name: 'restApiKey',\r\n          type: 'string'\r\n        },\r\n        \"windowsKey\": {\r\n          name: 'windowsKey',\r\n          type: 'string'\r\n        },\r\n        \"masterKey\": {\r\n          name: 'masterKey',\r\n          type: 'string'\r\n        },\r\n        \"pushSettings\": {\r\n          name: 'pushSettings',\r\n          type: 'any'\r\n        },\r\n        \"authenticationEnabled\": {\r\n          name: 'authenticationEnabled',\r\n          type: 'boolean',\r\n          default: true\r\n        },\r\n        \"anonymousAllowed\": {\r\n          name: 'anonymousAllowed',\r\n          type: 'boolean',\r\n          default: true\r\n        },\r\n        \"authenticationSchemes\": {\r\n          name: 'authenticationSchemes',\r\n          type: 'Array&lt;any&gt;'\r\n        },\r\n        \"status\": {\r\n          name: 'status',\r\n          type: 'string',\r\n          default: 'sandbox'\r\n        },\r\n        \"created\": {\r\n          name: 'created',\r\n          type: 'Date'\r\n        },\r\n        \"modified\": {\r\n          name: 'modified',\r\n          type: 'Date'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Application.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface NotificationInterface {\r\n  \"alert\"?: any;\r\n  \"badge\"?: number;\r\n  \"category\"?: string;\r\n  \"collapseKey\"?: string;\r\n  \"contentAvailable\"?: boolean;\r\n  \"created\"?: Date;\r\n  \"delayWhileIdle\"?: boolean;\r\n  \"deviceToken\": string;\r\n  \"deviceType\": string;\r\n  \"expirationInterval\"?: number;\r\n  \"expirationTime\"?: Date;\r\n  \"modified\"?: Date;\r\n  \"scheduledTime\"?: Date;\r\n  \"sound\"?: string;\r\n  \"status\"?: string;\r\n  \"urlArgs\"?: Array<any>;\r\n  \"id\"?: any;\r\n}\r\n\r\nexport class Notification implements NotificationInterface {\r\n  \"alert\": any;\r\n  \"badge\": number;\r\n  \"category\": string;\r\n  \"collapseKey\": string;\r\n  \"contentAvailable\": boolean;\r\n  \"created\": Date;\r\n  \"delayWhileIdle\": boolean;\r\n  \"deviceToken\": string;\r\n  \"deviceType\": string;\r\n  \"expirationInterval\": number;\r\n  \"expirationTime\": Date;\r\n  \"modified\": Date;\r\n  \"scheduledTime\": Date;\r\n  \"sound\": string;\r\n  \"status\": string;\r\n  \"urlArgs\": Array<any>;\r\n  \"id\": any;\r\n  constructor(data?: NotificationInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Notification`.\r\n   */\r\n  public static getModelName() {\r\n    return \"Notification\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of Notification for dynamic purposes.\r\n  **/\r\n  public static factory(data: NotificationInterface): Notification{\r\n    return new Notification(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'Notification',\r\n      plural: 'Notifications',\r\n      path: 'Notifications',\r\n      idName: 'id',\r\n      properties: {\r\n        \"alert\": {\r\n          name: 'alert',\r\n          type: 'any'\r\n        },\r\n        \"badge\": {\r\n          name: 'badge',\r\n          type: 'number'\r\n        },\r\n        \"category\": {\r\n          name: 'category',\r\n          type: 'string'\r\n        },\r\n        \"collapseKey\": {\r\n          name: 'collapseKey',\r\n          type: 'string'\r\n        },\r\n        \"contentAvailable\": {\r\n          name: 'contentAvailable',\r\n          type: 'boolean'\r\n        },\r\n        \"created\": {\r\n          name: 'created',\r\n          type: 'Date'\r\n        },\r\n        \"delayWhileIdle\": {\r\n          name: 'delayWhileIdle',\r\n          type: 'boolean'\r\n        },\r\n        \"deviceToken\": {\r\n          name: 'deviceToken',\r\n          type: 'string'\r\n        },\r\n        \"deviceType\": {\r\n          name: 'deviceType',\r\n          type: 'string'\r\n        },\r\n        \"expirationInterval\": {\r\n          name: 'expirationInterval',\r\n          type: 'number'\r\n        },\r\n        \"expirationTime\": {\r\n          name: 'expirationTime',\r\n          type: 'Date'\r\n        },\r\n        \"modified\": {\r\n          name: 'modified',\r\n          type: 'Date'\r\n        },\r\n        \"scheduledTime\": {\r\n          name: 'scheduledTime',\r\n          type: 'Date'\r\n        },\r\n        \"sound\": {\r\n          name: 'sound',\r\n          type: 'string'\r\n        },\r\n        \"status\": {\r\n          name: 'status',\r\n          type: 'string'\r\n        },\r\n        \"urlArgs\": {\r\n          name: 'urlArgs',\r\n          type: 'Array&lt;any&gt;'\r\n        },\r\n        \"id\": {\r\n          name: 'id',\r\n          type: 'any'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Notification.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface PushInterface {\r\n  \"id\"?: number;\r\n}\r\n\r\nexport class Push implements PushInterface {\r\n  \"id\": number;\r\n  constructor(data?: PushInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Push`.\r\n   */\r\n  public static getModelName() {\r\n    return \"Push\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of Push for dynamic purposes.\r\n  **/\r\n  public static factory(data: PushInterface): Push{\r\n    return new Push(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'Push',\r\n      plural: 'Push',\r\n      path: 'Push',\r\n      idName: 'id',\r\n      properties: {\r\n        \"id\": {\r\n          name: 'id',\r\n          type: 'number'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Push.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface Mobile_eventInterface {\r\n  \"id\"?: any;\r\n}\r\n\r\nexport class Mobile_event implements Mobile_eventInterface {\r\n  \"id\": any;\r\n  constructor(data?: Mobile_eventInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Mobile_event`.\r\n   */\r\n  public static getModelName() {\r\n    return \"Mobile_event\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of Mobile_event for dynamic purposes.\r\n  **/\r\n  public static factory(data: Mobile_eventInterface): Mobile_event{\r\n    return new Mobile_event(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'Mobile_event',\r\n      plural: 'mobile_event',\r\n      path: 'mobile_event',\r\n      idName: 'id',\r\n      properties: {\r\n        \"id\": {\r\n          name: 'id',\r\n          type: 'any'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Mobile_event.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface SiteConfigInterface {\r\n  \"confKey\": string;\r\n  \"confActive\": boolean;\r\n  \"confValue\"?: string;\r\n  \"confDesc\"?: string;\r\n}\r\n\r\nexport class SiteConfig implements SiteConfigInterface {\r\n  \"confKey\": string;\r\n  \"confActive\": boolean;\r\n  \"confValue\": string;\r\n  \"confDesc\": string;\r\n  constructor(data?: SiteConfigInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `SiteConfig`.\r\n   */\r\n  public static getModelName() {\r\n    return \"SiteConfig\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of SiteConfig for dynamic purposes.\r\n  **/\r\n  public static factory(data: SiteConfigInterface): SiteConfig{\r\n    return new SiteConfig(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'SiteConfig',\r\n      plural: 'SiteConfigs',\r\n      path: 'SiteConfigs',\r\n      idName: 'confKey',\r\n      properties: {\r\n        \"confKey\": {\r\n          name: 'confKey',\r\n          type: 'string'\r\n        },\r\n        \"confActive\": {\r\n          name: 'confActive',\r\n          type: 'boolean'\r\n        },\r\n        \"confValue\": {\r\n          name: 'confValue',\r\n          type: 'string'\r\n        },\r\n        \"confDesc\": {\r\n          name: 'confDesc',\r\n          type: 'string'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/SiteConfig.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface DespatchToDriverMessagesInterface {\r\n  \"drvmSeqid\"?: number;\r\n  \"drvmDriverId\": number;\r\n  \"drvmDate\": Date;\r\n  \"drvmTimestamp\": Date;\r\n  \"drvmMessage\": string;\r\n  \"drvmSender\": string;\r\n  \"drvmRecipient\": string;\r\n  \"drvmSpare\"?: string;\r\n}\r\n\r\nexport class DespatchToDriverMessages implements DespatchToDriverMessagesInterface {\r\n  \"drvmSeqid\": number;\r\n  \"drvmDriverId\": number;\r\n  \"drvmDate\": Date;\r\n  \"drvmTimestamp\": Date;\r\n  \"drvmMessage\": string;\r\n  \"drvmSender\": string;\r\n  \"drvmRecipient\": string;\r\n  \"drvmSpare\": string;\r\n  constructor(data?: DespatchToDriverMessagesInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `DespatchToDriverMessages`.\r\n   */\r\n  public static getModelName() {\r\n    return \"DespatchToDriverMessages\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of DespatchToDriverMessages for dynamic purposes.\r\n  **/\r\n  public static factory(data: DespatchToDriverMessagesInterface): DespatchToDriverMessages{\r\n    return new DespatchToDriverMessages(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'DespatchToDriverMessages',\r\n      plural: 'DespatchToDriverMessages',\r\n      path: 'DespatchToDriverMessages',\r\n      idName: 'drvmSeqid',\r\n      properties: {\r\n        \"drvmSeqid\": {\r\n          name: 'drvmSeqid',\r\n          type: 'number'\r\n        },\r\n        \"drvmDriverId\": {\r\n          name: 'drvmDriverId',\r\n          type: 'number'\r\n        },\r\n        \"drvmDate\": {\r\n          name: 'drvmDate',\r\n          type: 'Date'\r\n        },\r\n        \"drvmTimestamp\": {\r\n          name: 'drvmTimestamp',\r\n          type: 'Date'\r\n        },\r\n        \"drvmMessage\": {\r\n          name: 'drvmMessage',\r\n          type: 'string'\r\n        },\r\n        \"drvmSender\": {\r\n          name: 'drvmSender',\r\n          type: 'string'\r\n        },\r\n        \"drvmRecipient\": {\r\n          name: 'drvmRecipient',\r\n          type: 'string'\r\n        },\r\n        \"drvmSpare\": {\r\n          name: 'drvmSpare',\r\n          type: 'string'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/DespatchToDriverMessages.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface JseaDriverQuestionsInterface {\r\n  \"jdqQuestionText\"?: string;\r\n  \"jdqType\": string;\r\n  \"jdqCbox\"?: boolean;\r\n  \"jdqOrder\": number;\r\n  \"jdqNewForm\"?: boolean;\r\n  \"jdqNewFormType\"?: string;\r\n}\r\n\r\nexport class JseaDriverQuestions implements JseaDriverQuestionsInterface {\r\n  \"jdqQuestionText\": string;\r\n  \"jdqType\": string;\r\n  \"jdqCbox\": boolean;\r\n  \"jdqOrder\": number;\r\n  \"jdqNewForm\": boolean;\r\n  \"jdqNewFormType\": string;\r\n  constructor(data?: JseaDriverQuestionsInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `JseaDriverQuestions`.\r\n   */\r\n  public static getModelName() {\r\n    return \"JseaDriverQuestions\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of JseaDriverQuestions for dynamic purposes.\r\n  **/\r\n  public static factory(data: JseaDriverQuestionsInterface): JseaDriverQuestions{\r\n    return new JseaDriverQuestions(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'JseaDriverQuestions',\r\n      plural: 'JseaDriverQuestions',\r\n      path: 'JseaDriverQuestions',\r\n      idName: 'jdqType',\r\n      properties: {\r\n        \"jdqQuestionText\": {\r\n          name: 'jdqQuestionText',\r\n          type: 'string'\r\n        },\r\n        \"jdqType\": {\r\n          name: 'jdqType',\r\n          type: 'string'\r\n        },\r\n        \"jdqCbox\": {\r\n          name: 'jdqCbox',\r\n          type: 'boolean'\r\n        },\r\n        \"jdqOrder\": {\r\n          name: 'jdqOrder',\r\n          type: 'number'\r\n        },\r\n        \"jdqNewForm\": {\r\n          name: 'jdqNewForm',\r\n          type: 'boolean'\r\n        },\r\n        \"jdqNewFormType\": {\r\n          name: 'jdqNewFormType',\r\n          type: 'string'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/JseaDriverQuestions.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface PhotocontainerInterface {\r\n  \"id\"?: number;\r\n}\r\n\r\nexport class Photocontainer implements PhotocontainerInterface {\r\n  \"id\": number;\r\n  constructor(data?: PhotocontainerInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Photocontainer`.\r\n   */\r\n  public static getModelName() {\r\n    return \"Photocontainer\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of Photocontainer for dynamic purposes.\r\n  **/\r\n  public static factory(data: PhotocontainerInterface): Photocontainer{\r\n    return new Photocontainer(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'Photocontainer',\r\n      plural: 'Photocontainers',\r\n      path: 'Photocontainers',\r\n      idName: 'id',\r\n      properties: {\r\n        \"id\": {\r\n          name: 'id',\r\n          type: 'number'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Photocontainer.ts","/* tslint:disable */\r\n\r\ndeclare var Object: any;\r\nexport interface ImageInterface {\r\n  \"name\"?: string;\r\n  \"type\"?: string;\r\n  \"url\": string;\r\n  \"id\"?: any;\r\n}\r\n\r\nexport class Image implements ImageInterface {\r\n  \"name\": string;\r\n  \"type\": string;\r\n  \"url\": string;\r\n  \"id\": any;\r\n  constructor(data?: ImageInterface) {\r\n    Object.assign(this, data);\r\n  }\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Image`.\r\n   */\r\n  public static getModelName() {\r\n    return \"Image\";\r\n  }\r\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of Image for dynamic purposes.\r\n  **/\r\n  public static factory(data: ImageInterface): Image{\r\n    return new Image(data);\r\n  }\r\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\r\n  public static getModelDefinition() {\r\n    return {\r\n      name: 'Image',\r\n      plural: 'Images',\r\n      path: 'Images',\r\n      idName: 'id',\r\n      properties: {\r\n        \"name\": {\r\n          name: 'name',\r\n          type: 'string'\r\n        },\r\n        \"type\": {\r\n          name: 'type',\r\n          type: 'string'\r\n        },\r\n        \"url\": {\r\n          name: 'url',\r\n          type: 'string'\r\n        },\r\n        \"id\": {\r\n          name: 'id',\r\n          type: 'any'\r\n        },\r\n      },\r\n      relations: {\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Image.ts","/* tslint:disable */\r\nimport { Injectable } from '@angular/core';\r\nexport interface CookieInterface { [key: string]: any }\r\n/**\r\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\r\n* @module CookieBrowser\r\n* @license MIT\r\n* @description\r\n* This module handle cookies, it will be provided using DI Swapping according the\r\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\r\n**/\r\n@Injectable()\r\nexport class CookieBrowser {\r\n  /**\r\n   * @type {CookieInterface}\r\n   **/\r\n  private cookies: CookieInterface = {};\r\n  /**\r\n   * @method get\r\n   * @param {string} key Cookie key name\r\n   * @return {any}\r\n   * @description\r\n   * The getter will return any type of data persisted in cookies.\r\n   **/\r\n  get(key: string): any {\r\n    if (!this.cookies[key]) {\r\n      let cookie = window.document\r\n                         .cookie.split('; ')\r\n                         .filter((item: any) => item.split('=')[0] === key).pop();\r\n      if (!cookie) {\r\n        return null;\r\n      }\r\n\r\n      this.cookies[key] = this.parse(cookie.split('=').slice(1).join('='));\r\n    }\r\n\r\n    return this.cookies[key];\r\n  }\r\n  /**\r\n   * @method set\r\n   * @param {string} key Cookie key name\r\n   * @param {any} value Any value\r\n   * @param {Date=} expires The date of expiration (Optional)\r\n   * @return {void}\r\n   * @description\r\n   * The setter will return any type of data persisted in cookies.\r\n   **/\r\n  set(key: string, value: any, expires?: Date): void {\r\n    this.cookies[key] = value;\r\n    let cookie = `${key}=${value}; path=/${expires ? `; expires=${ expires.toUTCString() }` : ''}`;\r\n    window.document.cookie = cookie;\r\n  }\r\n  /**\r\n   * @method remove\r\n   * @param {string} key Cookie key name\r\n   * @return {void}\r\n   * @description\r\n   * This method will remove a cookie from the client.\r\n   **/\r\n  remove(key: string) {\r\n    document.cookie = key + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n    delete this.cookies[key];\r\n  }\r\n  /**\r\n   * @method parse\r\n   * @param {any} value Input data expected to be JSON\r\n   * @return {void}\r\n   * @description\r\n   * This method will parse the string as JSON if possible, otherwise will\r\n   * return the value itself.\r\n   **/\r\n  private parse(value: any) {\r\n    try {\r\n        return JSON.parse(value);\r\n    } catch (e) {\r\n        return value;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/storage/cookie.browser.ts","/* tslint:disable */\r\nimport { Injectable } from '@angular/core';\r\n/**\r\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\r\n* @module StorageBrowser\r\n* @license MIT\r\n* @description\r\n* This module handle localStorage, it will be provided using DI Swapping according the\r\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\r\n**/\r\n@Injectable()\r\nexport class StorageBrowser {\r\n  /**\r\n   * @method get\r\n   * @param {string} key Storage key name\r\n   * @return {any}\r\n   * @description\r\n   * The getter will return any type of data persisted in localStorage.\r\n   **/\r\n  get(key: string): any {\r\n    let data: string = localStorage.getItem(key);\r\n    return this.parse(data);\r\n  }\r\n  /**\r\n   * @method set\r\n   * @param {string} key Storage key name\r\n   * @param {any} value Any value\r\n   * @return {void}\r\n   * @description\r\n   * The setter will return any type of data persisted in localStorage.\r\n   **/\r\n  set(key: string, value: any, expires?: Date): void {\r\n    localStorage.setItem(\r\n      key,\r\n      typeof value === 'object' ? JSON.stringify(value) : value\r\n    );\r\n  }\r\n  /**\r\n   * @method remove\r\n   * @param {string} key Storage key name\r\n   * @return {void}\r\n   * @description\r\n   * This method will remove a localStorage item from the client.\r\n   **/\r\n  remove(key: string): void {\r\n    if (localStorage[key]) {\r\n      localStorage.removeItem(key);\r\n    } else {\r\n      console.log('Trying to remove unexisting key: ', key);\r\n    }\r\n  }\r\n  /**\r\n   * @method parse\r\n   * @param {any} value Input data expected to be JSON\r\n   * @return {void}\r\n   * @description\r\n   * This method will parse the string as JSON if possible, otherwise will\r\n   * return the value itself.\r\n   **/\r\n  private parse(value: any) {\r\n    try {\r\n        return JSON.parse(value);\r\n    } catch (e) {\r\n        return value;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/storage/storage.browser.ts","/* tslint:disable */\r\nimport { Injectable } from '@angular/core';\r\nimport { URLSearchParams } from '@angular/http';\r\n/**\r\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\r\n* @module JSONSearchParams\r\n* @license MIT\r\n* @description\r\n* JSON Parser and Wrapper for the Angular2 URLSearchParams\r\n* This module correctly encodes a json object into a query string and then creates\r\n* an instance of the URLSearchParams component for later use in HTTP Calls\r\n**/\r\n@Injectable()\r\nexport class JSONSearchParams {\r\n\r\n    private _usp: URLSearchParams;\r\n\r\n    public setJSON(obj: any) {\r\n        this._usp = new URLSearchParams(this._JSON2URL(obj, false));\r\n    }\r\n\r\n    public getURLSearchParams(): URLSearchParams {\r\n        return this._usp;\r\n    }\r\n\r\n    private _JSON2URL(obj: any, parent: any) {\r\n        var parts: any = [];\r\n        for (var key in obj)\r\n        parts.push(this._parseParam(key, obj[key], parent));\r\n        return parts.join('&');\r\n    }\r\n\r\n    private _parseParam(key: string, value: any, parent: string) {\r\n        let processedKey = parent ? parent + '[' + key + ']' : key;\r\n        if (value && (<string>(typeof value) === 'object' || Array.isArray(value))) {\r\n            return this._JSON2URL(value, processedKey);\r\n        }\r\n        return processedKey + '=' + value;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/core/search.params.ts","/* tslint:disable */\r\nimport { Injectable } from '@angular/core';\r\nimport { Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n//import { ErrorObservable } from 'rxjs/observable/ErrorObservable';\r\nimport 'rxjs/add/observable/throw';\r\n/**\r\n * Default error handler\r\n */\r\n@Injectable()\r\nexport class ErrorHandler {\r\n  // ErrorObservable when rxjs version < rc.5\r\n  // ErrorObservable<string> when rxjs version = rc.5\r\n  // I'm leaving any for now to avoid breaking apps using both versions\r\n  public handleError(error: Response): any {\r\n    return Observable.throw(error.json().error || 'Server error');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/core/error.service.ts","/* tslint:disable */\r\n/**\r\n * @module SocketDriver\r\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n * @license MIT\r\n * @description\r\n * The SocketDriver class is used for dependency injection swapping.\r\n * It will be provided using factory method from different sources.\r\n **/\r\nexport class SocketDriver {\r\n  connect(url: any, options: any) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/sockets/socket.driver.ts","/* tslint:disable */\r\nimport 'rxjs/add/operator/share';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { IO } from './io.service';\r\nimport { LoopBackAuth } from './auth.service';\r\nimport { FireLoop } from '../../models/FireLoop';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\nimport { SDKModels } from '../custom/SDKModels';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/share';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n/**\r\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\r\n* @module RealTime\r\n* @license MIT\r\n* @description\r\n* This module is a real-time interface for using socket connections, its main purpose\r\n* is to make sure that when there is a valid connection, it will create instances\r\n* of the different real-time functionalities like FireLoop, PubSub and IO.\r\n**/\r\n@Injectable()\r\nexport class RealTime {\r\n  public IO: IO;\r\n  public FireLoop: FireLoop;\r\n  private connecting: boolean = false;\r\n  private onReadySubject: Subject<string> = new Subject<string>();\r\n  private sharedOnReady: Observable<string> = this.onReadySubject.asObservable().share();\r\n  /**\r\n  * @method constructor\r\n  * @param {SocketConnection} connection WebSocket connection service\r\n  * @param {SDKModels} models Model provider service\r\n  * @param {LoopBackAuth} auth LoopBack authentication service\r\n  * @description\r\n  * It will intialize the shared on ready communication channel.\r\n  **/\r\n  constructor(\r\n    @Inject(SocketConnection) public connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth\r\n  ) {\r\n    this.sharedOnReady.subscribe();\r\n  }\r\n  /**\r\n  * @method onDisconnect\r\n  * @return {Observable<any>} \r\n  * @description\r\n  * Will trigger when Real-Time Service is disconnected from server.\r\n  **/\r\n  onDisconnect(): Observable<any> {\r\n    return this.connection.sharedObservables.sharedOnDisconnect;\r\n  }\r\n  /**\r\n  * @method onAuthenticated\r\n  * @return {Observable<any>} \r\n  * @description\r\n  * Will trigger when Real-Time Service is authenticated with the server.\r\n  **/\r\n  onAuthenticated(): Observable<any> {\r\n    return this.connection.sharedObservables.sharedOnAuthenticated;\r\n  }\r\n  /**\r\n  * @method onUnAuthorized\r\n  * @return {Observable<any>} \r\n  * @description\r\n  * Will trigger when Real-Time Service is not authorized to connect with the server.\r\n  **/\r\n  onUnAuthorized(): Observable<any> {\r\n    return this.connection.sharedObservables.sharedOnUnAuthorized;\r\n  }\r\n  /**\r\n  * @method onReady\r\n  * @return {Observable<any>} \r\n  * @description\r\n  * Will trigger when Real-Time Service is Ready for broadcasting.\r\n  * and will register connection flow events to notify subscribers.\r\n  **/\r\n  public onReady(): Observable<any> {\r\n    // If there is a valid connection, then we just send back to the EventLoop\r\n    // Or next will be executed before the actual subscription.\r\n    if (this.connection.isConnected()) {\r\n      let to = setTimeout(() => {\r\n        this.onReadySubject.next('shared-connection');\r\n        clearTimeout(to);\r\n      });\r\n    // Else if there is a current attempt of connection we wait for the prior\r\n    // process that started the connection flow.\r\n    } else if (this.connecting) {\r\n      let ti = setInterval(() => {\r\n        if (this.connection.isConnected()) {\r\n          this.onReadySubject.next('shared-connection');\r\n          clearInterval(ti);\r\n        }\r\n      }, 500);\r\n    // If there is not valid connection or attempt, then we start the connection flow\r\n    // and make sure we notify all the onReady subscribers when done.\r\n    // Also it will listen for desconnections so we unsubscribe and avoid both:\r\n    // Memory leaks and duplicated triggered events.\r\n    } else {\r\n      this.connecting = true;\r\n      this.connection.connect(this.auth.getToken());\r\n      this.IO       = new IO(this.connection);\r\n      this.FireLoop = new FireLoop(this.connection, this.models);\r\n      // Fire event for those subscribed \r\n      let s1: Subscription = this.connection.sharedObservables.sharedOnConnect.subscribe(() => {\r\n        console.log('Real-Time connection has been established');\r\n        this.connecting = false;\r\n        this.onReadySubject.next('connected');\r\n        let s2: Subscription = this.connection.sharedObservables.sharedOnDisconnect.subscribe(() => {\r\n          s1.unsubscribe();\r\n          s2.unsubscribe();\r\n        });\r\n      });\r\n    }\r\n    return this.sharedOnReady;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/core/real.time.ts","/* tslint:disable */\r\nexport * from './Job';\r\n\r\nexport * from './TpmPdaController';\r\nexport * from './GpsHistory';\r\nexport * from './Application';\r\nexport * from './Installation';\r\nexport * from './Notification';\r\nexport * from './Push';\r\nexport * from './Mobile_event';\r\nexport * from './SiteConfig';\r\nexport * from './DespatchToDriverMessages';\r\nexport * from './JseaDriverQuestions';\r\nexport * from './JseaDriverAnswers';\r\n\r\nexport * from './Photocontainer';\r\nexport * from './Image';\r\nexport * from './BarcodeHist';\r\n\r\nexport * from './BaseModels';\r\nexport * from './FireLoopRef';\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/index.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Job } from '../../models/Job';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `Job` model.\r\n *\r\n * **Details**\r\n *\r\n * Logged Jobs\r\n */\r\n@Injectable()\r\nexport class JobApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Job` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/Jobs\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id Job id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Job` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/Jobs/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get a set of deltas and conflicts since the given checkpoint.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `since` – `{number}` - Find deltas since this checkpoint\r\n   *\r\n   *  - `remoteChanges` – `{any}` - an array of change objects\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Job` object.)\r\n   * </em>\r\n   */\r\n  public diff(since: any = {}, remoteChanges: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/Jobs/diff\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      remoteChanges: remoteChanges\r\n    };\r\n    let _urlParams: any = {};\r\n    if (typeof since !== 'undefined' && since !== null) _urlParams.since = since;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the changes to a model since a given checkpoint.Provide a filter object to reduce the number of results returned.\r\n   *\r\n   * @param {number} since Only return changes since this checkpoint\r\n   *\r\n   * @param {object} filter Only include changes that match this filter\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Job` object.)\r\n   * </em>\r\n   */\r\n  public changes(since: any = {}, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/Jobs/changes\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof since !== 'undefined' && since !== null) _urlParams.since = since;\r\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Create a checkpoint.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method does not accept any data. Supply an empty object.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Job` object.)\r\n   * </em>\r\n   */\r\n  public checkpoint(customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/Jobs/checkpoint\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the current checkpoint.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Job` object.)\r\n   * </em>\r\n   */\r\n  public currentCheckpoint(customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/Jobs/checkpoint\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Create an update list from a delta list.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Job` object.)\r\n   * </em>\r\n   */\r\n  public createUpdates(deltas: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/Jobs/create-updates\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      deltas: deltas\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Run multiple updates at once. Note: this is not atomic.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `updates` – `{any}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public bulkUpdate(updates: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/Jobs/bulk-update\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof updates !== 'undefined' && updates !== null) _urlParams.updates = updates;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the most recent change record for this instance.\r\n   *\r\n   * @param {any} id Model id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Job` object.)\r\n   * </em>\r\n   */\r\n  public findLastChange(id: any, customHeaders?: Function): Observable<Job[]> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/Jobs/:id/changes/last\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result.map((instances: Array<Job>) =>\r\n        instances.map((instance: Job) => new Job(instance))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update the properties of the most recent change record kept for this instance.\r\n   *\r\n   * @param {any} id Model id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of Change property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Job` object.)\r\n   * </em>\r\n   */\r\n  public updateLastChange(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PUT\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/Jobs/:id/changes/last\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the Metadata for this Model...\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * For things like auto-generated forms...\r\n   */\r\n  public metadata(customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/Jobs/metadata\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Job`.\r\n   */\r\n  public getModelName() {\r\n    return \"Job\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Job.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { TpmPdaController } from '../../models/TpmPdaController';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `TpmPdaController` model.\r\n *\r\n * **Details**\r\n *\r\n * Controlling Pda Device Management\r\n */\r\n@Injectable()\r\nexport class TpmPdaControllerApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `TpmPdaController` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/TpmPdaControllers\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id TpmPdaController id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `TpmPdaController` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/TpmPdaControllers/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Sends a command to a PDA\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `driver` – `{number}` - driver/PDA number\r\n   *\r\n   *  - `command` – `{string}` - the command to send e.g. dumpLocalStorage\r\n   *\r\n   *  - `params` – `{object}` - optional parameter object\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public sendCommandToPDA(driver: any, command: any, params: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/TpmPdaControllers/sendCommandToPDA/:driver\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof driver !== 'undefined' && driver !== null) _urlParams.driver = driver;\r\n    if (typeof command !== 'undefined' && command !== null) _urlParams.command = command;\r\n    if (typeof params !== 'undefined' && params !== null) _urlParams.params = params;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Sends a message to a driver\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `driver` – `{number}` - \r\n   *\r\n   *  - `message` – `{string}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public sendMessageToDriver(driver: any, message: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/TpmPdaControllers/sendMessageToDriver/:driver\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof driver !== 'undefined' && driver !== null) _urlParams.driver = driver;\r\n    if (typeof message !== 'undefined' && message !== null) _urlParams.message = message;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `TpmPdaController`.\r\n   */\r\n  public getModelName() {\r\n    return \"TpmPdaController\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/TpmPdaController.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Application } from '../../models/Application';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `Application` model.\r\n */\r\n@Injectable()\r\nexport class ApplicationApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Application` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/applications\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id application id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Application` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/applications/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Application`.\r\n   */\r\n  public getModelName() {\r\n    return \"Application\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Application.ts","/* tslint:disable */\r\nimport { Injectable, Inject, NgZone } from '@angular/core';\r\nimport { SocketDriver } from './socket.driver';\r\nimport { AccessToken } from '../models';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/share';\r\nimport { LoopBackConfig } from '../lb.config';\r\n/**\r\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\r\n* @module SocketConnection\r\n* @license MIT\r\n* @description\r\n* This module handle socket connections and return singleton instances for each\r\n* connection, it will use the SDK Socket Driver Available currently supporting\r\n* Angular 2 for web, NativeScript 2 and Angular Universal.\r\n**/\r\n@Injectable()\r\nexport class SocketConnection {\r\n  private socket: any;\r\n  private subjects: {\r\n    onConnect: Subject<any>,\r\n    onDisconnect: Subject<any>,\r\n    onAuthenticated: Subject<any>,\r\n    onUnAuthorized: Subject<any>\r\n  } = {\r\n    onConnect: new Subject(),\r\n    onDisconnect: new Subject(),\r\n    onAuthenticated: new Subject(),\r\n    onUnAuthorized: new Subject()\r\n  };\r\n  public sharedObservables: {\r\n    sharedOnConnect?: Observable<any>,\r\n    sharedOnDisconnect?: Observable<any>,\r\n    sharedOnAuthenticated?: Observable<any>,\r\n    sharedOnUnAuthorized?: Observable<any>\r\n  } = {};\r\n  public authenticated: boolean = false;\r\n  /**\r\n   * @method constructor\r\n   * @param {SocketDriver} driver Socket IO Driver\r\n   * @param {NgZone} zone Angular 2 Zone\r\n   * @description\r\n   * The constructor will set references for the shared hot observables from\r\n   * the class subjects. Then it will subscribe each of these observables\r\n   * that will create a channel that later will be shared between subscribers.\r\n   **/\r\n  constructor(\r\n    @Inject(SocketDriver) private driver: SocketDriver,\r\n    @Inject(NgZone) private zone: NgZone\r\n  ) {\r\n    this.sharedObservables = {\r\n      sharedOnConnect: this.subjects.onConnect.asObservable().share(),\r\n      sharedOnDisconnect: this.subjects.onDisconnect.asObservable().share(),\r\n      sharedOnAuthenticated: this.subjects.onAuthenticated.asObservable().share(),\r\n      sharedOnUnAuthorized: this.subjects.onUnAuthorized.asObservable().share()\r\n    };\r\n    // This is needed to create the first channel, subsequents will share the connection\r\n    // We are using Hot Observables to avoid duplicating connection status events.\r\n    this.sharedObservables.sharedOnConnect.subscribe();\r\n    this.sharedObservables.sharedOnDisconnect.subscribe();\r\n    this.sharedObservables.sharedOnAuthenticated.subscribe();\r\n    this.sharedObservables.sharedOnUnAuthorized.subscribe();\r\n  }\r\n  /**\r\n   * @method connect\r\n   * @param {AccessToken} token AccesToken instance\r\n   * @return {void}\r\n   * @description\r\n   * This method will create a new socket connection when not previously established.\r\n   * If there is a broken connection it will re-connect.\r\n   **/\r\n  public connect(token: AccessToken = null): void {\r\n    if (!this.socket) {\r\n      console.info('Creating a new connection with: ', LoopBackConfig.getPath());\r\n      // Create new socket connection\r\n      this.socket = this.driver.connect(LoopBackConfig.getPath(), {\r\n        log: false,\r\n        secure: LoopBackConfig.isSecureWebSocketsSet(),\r\n        forceNew: true,\r\n        forceWebsockets: true,\r\n        transports: ['websocket']\r\n      });\r\n      // Listen for connection\r\n      this.on('connect', () => {\r\n        this.subjects.onConnect.next('connected');\r\n        // Authenticate or start heartbeat now    \r\n        this.emit('authentication', token);\r\n      });\r\n      // Listen for authentication\r\n      this.on('authenticated', () => {\r\n        this.authenticated = true;\r\n        this.subjects.onAuthenticated.next();\r\n        this.heartbeater();\r\n      })\r\n      // Listen for authentication\r\n      this.on('unauthorized', (err: any) => {\r\n        this.authenticated = false;\r\n        this.subjects.onUnAuthorized.next(err);\r\n      })\r\n      // Listen for disconnections\r\n      this.on('disconnect', (status: any) => this.subjects.onDisconnect.next(status));\r\n    } else if (this.socket && !this.socket.connected){\r\n      if (typeof this.socket.off === 'function') {\r\n        this.socket.off();\r\n      }\r\n      if (typeof this.socket.destroy === 'function') {\r\n        this.socket.destroy();\r\n      }\r\n      delete this.socket;\r\n      this.connect(token);\r\n    }\r\n  }\r\n  /**\r\n   * @method isConnected\r\n   * @return {boolean}\r\n   * @description\r\n   * This method will return true or false depending on established connections\r\n   **/\r\n  public isConnected(): boolean {\r\n    return (this.socket && this.socket.connected);\r\n  }\r\n  /**\r\n   * @method on\r\n   * @param {string} event Event name\r\n   * @param {Function} handler Event listener handler\r\n   * @return {void}\r\n   * @description\r\n   * This method listen for server events from the current WebSocket connection.\r\n   * This method is a facade that will wrap the original \"on\" method and run it\r\n   * within the Angular Zone to avoid update issues.\r\n   **/\r\n  public on(event: string, handler: Function): void {\r\n    this.socket.on(event, (data: any) => this.zone.run(() => handler(data)));\r\n  }\r\n  /**\r\n   * @method emit\r\n   * @param {string} event Event name\r\n   * @param {any=} data Any type of data\r\n   * @return {void}\r\n   * @description\r\n   * This method will send any type of data to the server according the event set.\r\n   **/\r\n  public emit(event: string, data?: any): void {\r\n    if (data) {\r\n      this.socket.emit(event, data);\r\n    } else {\r\n      this.socket.emit(event);\r\n    }\r\n  }\r\n  /**\r\n   * @method removeListener\r\n   * @param {string} event Event name\r\n   * @param {Function} handler Event listener handler\r\n   * @return {void}\r\n   * @description\r\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\r\n   * Note: off is being used since the nativescript socket io client does not provide\r\n   * removeListener method, but only provides with off which is provided in any platform.\r\n   **/\r\n  public removeListener(event: string, handler: Function): void {\r\n    if (typeof this.socket.off === 'function') {\r\n      this.socket.off(event, handler);\r\n    }\r\n  }\r\n  /**\r\n   * @method removeAllListeners\r\n   * @param {string} event Event name\r\n   * @param {Function} handler Event listener handler\r\n   * @return {void}\r\n   * @description\r\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\r\n   * Note: off is being used since the nativescript socket io client does not provide\r\n   * removeListener method, but only provides with off which is provided in any platform.\r\n   **/\r\n  public removeAllListeners(event: string): void {\r\n    if (typeof this.socket.removeAllListeners === 'function') {\r\n      this.socket.removeAllListeners(event);\r\n    }\r\n  }\r\n  /**\r\n   * @method disconnect\r\n   * @return {void}\r\n   * @description\r\n   * This will disconnect the client from the server\r\n   **/\r\n  public disconnect(): void {\r\n    this.socket.disconnect();\r\n  }\r\n  /**\r\n   * @method heartbeater\r\n   * @return {void}\r\n   * @description\r\n   * This will keep the connection as active, even when users are not sending\r\n   * data, this avoids disconnection because of a connection not being used.\r\n   **/\r\n  private heartbeater(): void {\r\n    let heartbeater: any = setInterval(() => {\r\n      if (this.isConnected()) {\r\n        this.socket.emit('lb-ping');\r\n      } else {\r\n        this.socket.removeAllListeners('lb-pong');\r\n        clearInterval(heartbeater);\r\n      }\r\n    }, 15000);\r\n    this.socket.on('lb-pong', (data: any) => console.info('Heartbeat: ', data));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/sockets/socket.connections.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Installation } from '../../models/Installation';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n\r\n\r\n/**\r\n * Api services for the `Installation` model.\r\n */\r\n@Injectable()\r\nexport class InstallationApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Find installations by application id\r\n   *\r\n   * @param {string} deviceType Device type\r\n   *\r\n   * @param {string} appId Application id\r\n   *\r\n   * @param {string} appVersion Application version\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Installation` object.)\r\n   * </em>\r\n   */\r\n  public findByApp(deviceType: any = {}, appId: any = {}, appVersion: any = {}, customHeaders?: Function): Observable<Installation> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/installations/byApp\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof deviceType !== 'undefined' && deviceType !== null) _urlParams.deviceType = deviceType;\r\n    if (typeof appId !== 'undefined' && appId !== null) _urlParams.appId = appId;\r\n    if (typeof appVersion !== 'undefined' && appVersion !== null) _urlParams.appVersion = appVersion;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result.map((instance: Installation) => new Installation(instance));\r\n  }\r\n\r\n  /**\r\n   * Find installations by user id\r\n   *\r\n   * @param {string} deviceType Device type\r\n   *\r\n   * @param {string} userId User id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Installation` object.)\r\n   * </em>\r\n   */\r\n  public findByUser(deviceType: any = {}, userId: any = {}, customHeaders?: Function): Observable<Installation> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/installations/byUser\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof deviceType !== 'undefined' && deviceType !== null) _urlParams.deviceType = deviceType;\r\n    if (typeof userId !== 'undefined' && userId !== null) _urlParams.userId = userId;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result.map((instance: Installation) => new Installation(instance));\r\n  }\r\n\r\n  /**\r\n   * Find installations by subscriptions\r\n   *\r\n   * @param {string} deviceType Device type\r\n   *\r\n   * @param {string} subscriptions Subscriptions\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Installation` object.)\r\n   * </em>\r\n   */\r\n  public findBySubscriptions(deviceType: any = {}, subscriptions: any = {}, customHeaders?: Function): Observable<Installation> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/installations/bySubscriptions\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof deviceType !== 'undefined' && deviceType !== null) _urlParams.deviceType = deviceType;\r\n    if (typeof subscriptions !== 'undefined' && subscriptions !== null) _urlParams.subscriptions = subscriptions;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result.map((instance: Installation) => new Installation(instance));\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Installation` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/installations\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id installation id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Installation` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/installations/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Installation`.\r\n   */\r\n  public getModelName() {\r\n    return \"Installation\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Installation.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Notification } from '../../models/Notification';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `Notification` model.\r\n */\r\n@Injectable()\r\nexport class NotificationApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Notification` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/notifications\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id notification id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Notification` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/notifications/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Notification`.\r\n   */\r\n  public getModelName() {\r\n    return \"Notification\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Notification.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Push } from '../../models/Push';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `Push` model.\r\n */\r\n@Injectable()\r\nexport class PushApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Send a push notification by installation query\r\n   *\r\n   * @param {object} deviceQuery Installation query\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `notification` – `{object}` - Notification\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Push` object.)\r\n   * </em>\r\n   */\r\n  public notifyByQuery(deviceQuery: any = {}, notification: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/Push\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      notification: notification\r\n    };\r\n    let _urlParams: any = {};\r\n    if (typeof deviceQuery !== 'undefined' && deviceQuery !== null) _urlParams.deviceQuery = deviceQuery;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Push`.\r\n   */\r\n  public getModelName() {\r\n    return \"Push\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Push.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Mobile_event } from '../../models/Mobile_event';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `Mobile_event` model.\r\n */\r\n@Injectable()\r\nexport class Mobile_eventApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n \r\n\r\n  /**\r\n   * Send a mobile event to the readPDA server process\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `payload` – `{object}` - Mobile event payload object\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public sendEvent(payload: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/mobile_event\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof payload !== 'undefined' && payload !== null) _urlParams.payload = payload;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Mobile_event`.\r\n   */\r\n  public getModelName() {\r\n    return \"Mobile_event\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Mobile_event.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { SiteConfig } from '../../models/SiteConfig';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `SiteConfig` model.\r\n */\r\n@Injectable()\r\nexport class SiteConfigApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `SiteConfig` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/SiteConfigs\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id SiteConfig id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `SiteConfig` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/SiteConfigs/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `SiteConfig`.\r\n   */\r\n  public getModelName() {\r\n    return \"SiteConfig\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/SiteConfig.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { DespatchToDriverMessages } from '../../models/DespatchToDriverMessages';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `DespatchToDriverMessages` model.\r\n */\r\n@Injectable()\r\nexport class DespatchToDriverMessagesApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `DespatchToDriverMessages` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/DespatchToDriverMessages\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id DespatchToDriverMessages id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `DespatchToDriverMessages` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/DespatchToDriverMessages/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `DespatchToDriverMessages`.\r\n   */\r\n  public getModelName() {\r\n    return \"DespatchToDriverMessages\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/DespatchToDriverMessages.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { JseaDriverAnswers } from '../../models/JseaDriverAnswers';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `JseaDriverAnswers` model.\r\n */\r\n@Injectable()\r\nexport class JseaDriverAnswersApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `JseaDriverAnswers` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/JseaDriverAnswers\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id JseaDriverAnswers id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `JseaDriverAnswers` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/JseaDriverAnswers/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get a set of deltas and conflicts since the given checkpoint.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `since` – `{number}` - Find deltas since this checkpoint\r\n   *\r\n   *  - `remoteChanges` – `{any}` - an array of change objects\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `JseaDriverAnswers` object.)\r\n   * </em>\r\n   */\r\n  public diff(since: any = {}, remoteChanges: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/JseaDriverAnswers/diff\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      remoteChanges: remoteChanges\r\n    };\r\n    let _urlParams: any = {};\r\n    if (typeof since !== 'undefined' && since !== null) _urlParams.since = since;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the changes to a model since a given checkpoint.Provide a filter object to reduce the number of results returned.\r\n   *\r\n   * @param {number} since Only return changes since this checkpoint\r\n   *\r\n   * @param {object} filter Only include changes that match this filter\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `JseaDriverAnswers` object.)\r\n   * </em>\r\n   */\r\n  public changes(since: any = {}, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/JseaDriverAnswers/changes\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof since !== 'undefined' && since !== null) _urlParams.since = since;\r\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Create a checkpoint.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method does not accept any data. Supply an empty object.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `JseaDriverAnswers` object.)\r\n   * </em>\r\n   */\r\n  public checkpoint(customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/JseaDriverAnswers/checkpoint\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the current checkpoint.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `JseaDriverAnswers` object.)\r\n   * </em>\r\n   */\r\n  public currentCheckpoint(customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/JseaDriverAnswers/checkpoint\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Create an update list from a delta list.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `JseaDriverAnswers` object.)\r\n   * </em>\r\n   */\r\n  public createUpdates(deltas: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/JseaDriverAnswers/create-updates\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      deltas: deltas\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Run multiple updates at once. Note: this is not atomic.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `updates` – `{any}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public bulkUpdate(updates: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/JseaDriverAnswers/bulk-update\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof updates !== 'undefined' && updates !== null) _urlParams.updates = updates;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the most recent change record for this instance.\r\n   *\r\n   * @param {any} id Model id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `JseaDriverAnswers` object.)\r\n   * </em>\r\n   */\r\n  public findLastChange(id: any, customHeaders?: Function): Observable<JseaDriverAnswers[]> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/JseaDriverAnswers/:id/changes/last\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result.map((instances: Array<JseaDriverAnswers>) =>\r\n        instances.map((instance: JseaDriverAnswers) => new JseaDriverAnswers(instance))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update the properties of the most recent change record kept for this instance.\r\n   *\r\n   * @param {any} id Model id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of Change property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `JseaDriverAnswers` object.)\r\n   * </em>\r\n   */\r\n  public updateLastChange(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PUT\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/JseaDriverAnswers/:id/changes/last\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `JseaDriverAnswers`.\r\n   */\r\n  public getModelName() {\r\n    return \"JseaDriverAnswers\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/JseaDriverAnswers.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Photocontainer } from '../../models/Photocontainer';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `Photocontainer` model.\r\n */\r\n@Injectable()\r\nexport class PhotocontainerApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Photocontainer` object.)\r\n   * </em>\r\n   */\r\n  public getContainers(customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/photocontainers\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Photocontainer` object.)\r\n   * </em>\r\n   */\r\n  public createContainer(options: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/photocontainers\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      options: options\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {string} container \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `` – `{}` - \r\n   */\r\n  public destroyContainer(container: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/photocontainers/:container\";\r\n    let _routeParams: any = {\r\n      container: container\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {string} container \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Photocontainer` object.)\r\n   * </em>\r\n   */\r\n  public getContainer(container: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/photocontainers/:container\";\r\n    let _routeParams: any = {\r\n      container: container\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {string} container \r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Photocontainer` object.)\r\n   * </em>\r\n   */\r\n  public getFiles(container: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/photocontainers/:container/files\";\r\n    let _routeParams: any = {\r\n      container: container\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {string} container \r\n   *\r\n   * @param {string} file \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Photocontainer` object.)\r\n   * </em>\r\n   */\r\n  public getFile(container: any, file: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/photocontainers/:container/files/:file\";\r\n    let _routeParams: any = {\r\n      container: container,\r\n      file: file\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {string} container \r\n   *\r\n   * @param {string} file \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `` – `{}` - \r\n   */\r\n  public removeFile(container: any, file: any, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"DELETE\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/photocontainers/:container/files/:file\";\r\n    let _routeParams: any = {\r\n      container: container,\r\n      file: file\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {string} container \r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `req` – `{object}` - \r\n   *\r\n   *  - `res` – `{object}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * Data properties:\r\n   *\r\n   *  - `result` – `{object}` - \r\n   */\r\n  public upload(container: any, req: any = {}, res: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/photocontainers/:container/upload\";\r\n    let _routeParams: any = {\r\n      container: container\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * <em>\r\n         * (The remote method definition does not provide any description.)\r\n         * </em>\r\n   *\r\n   * @param {string} container \r\n   *\r\n   * @param {string} file \r\n   *\r\n   * @param {object} req \r\n   *\r\n   * @param {object} res \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public download(container: any, file: any, req: any = {}, res: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/photocontainers/:container/download/:file\";\r\n    let _routeParams: any = {\r\n      container: container,\r\n      file: file\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Photocontainer` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/photocontainers\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id photocontainer id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Photocontainer` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/photocontainers/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Photocontainer`.\r\n   */\r\n  public getModelName() {\r\n    return \"Photocontainer\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Photocontainer.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Image } from '../../models/Image';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `Image` model.\r\n */\r\n@Injectable()\r\nexport class ImageApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Image` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/images\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id image id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `Image` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/images/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Image`.\r\n   */\r\n  public getModelName() {\r\n    return \"Image\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Image.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { SDKModels } from './SDKModels';\r\nimport { BaseLoopBackApi } from '../core/base.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackAuth } from '../core/auth.service';\r\nimport { LoopBackFilter,  } from '../../models/BaseModels';\r\nimport { JSONSearchParams } from '../core/search.params';\r\nimport { ErrorHandler } from '../core/error.service';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { BarcodeHist } from '../../models/BarcodeHist';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n\r\n\r\n/**\r\n * Api services for the `BarcodeHist` model.\r\n */\r\n@Injectable()\r\nexport class BarcodeHistApi extends BaseLoopBackApi {\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    super(http,  connection,  models, auth, searchParams, errorHandler);\r\n  }\r\n\r\n  /**\r\n   * Patch an existing model instance or insert a new one into the data source.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - Model instance data\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `BarcodeHist` object.)\r\n   * </em>\r\n   */\r\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/BarcodeHists\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Patch attributes for a model instance and persist it into the data source.\r\n   *\r\n   * @param {any} id BarcodeHist id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of model property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `BarcodeHist` object.)\r\n   * </em>\r\n   */\r\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PATCH\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/BarcodeHists/:id\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get a set of deltas and conflicts since the given checkpoint.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `since` – `{number}` - Find deltas since this checkpoint\r\n   *\r\n   *  - `remoteChanges` – `{any}` - an array of change objects\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `BarcodeHist` object.)\r\n   * </em>\r\n   */\r\n  public diff(since: any = {}, remoteChanges: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/BarcodeHists/diff\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      remoteChanges: remoteChanges\r\n    };\r\n    let _urlParams: any = {};\r\n    if (typeof since !== 'undefined' && since !== null) _urlParams.since = since;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the changes to a model since a given checkpoint.Provide a filter object to reduce the number of results returned.\r\n   *\r\n   * @param {number} since Only return changes since this checkpoint\r\n   *\r\n   * @param {object} filter Only include changes that match this filter\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `BarcodeHist` object.)\r\n   * </em>\r\n   */\r\n  public changes(since: any = {}, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/BarcodeHists/changes\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof since !== 'undefined' && since !== null) _urlParams.since = since;\r\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Create a checkpoint.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method does not accept any data. Supply an empty object.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `BarcodeHist` object.)\r\n   * </em>\r\n   */\r\n  public checkpoint(customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/BarcodeHists/checkpoint\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the current checkpoint.\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `BarcodeHist` object.)\r\n   * </em>\r\n   */\r\n  public currentCheckpoint(customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/BarcodeHists/checkpoint\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Create an update list from a delta list.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   * This method expects a subset of model properties as request parameters.\r\n   *\r\n   * @returns {object[]} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `BarcodeHist` object.)\r\n   * </em>\r\n   */\r\n  public createUpdates(deltas: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/BarcodeHists/create-updates\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {\r\n      deltas: deltas\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Run multiple updates at once. Note: this is not atomic.\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `updates` – `{any}` - \r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * This method returns no data.\r\n   */\r\n  public bulkUpdate(updates: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"POST\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/BarcodeHists/bulk-update\";\r\n    let _routeParams: any = {};\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    if (typeof updates !== 'undefined' && updates !== null) _urlParams.updates = updates;\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the most recent change record for this instance.\r\n   *\r\n   * @param {any} id Model id\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `BarcodeHist` object.)\r\n   * </em>\r\n   */\r\n  public findLastChange(id: any, customHeaders?: Function): Observable<BarcodeHist[]> {\r\n    let _method: string = \"GET\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/BarcodeHists/:id/changes/last\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {};\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result.map((instances: Array<BarcodeHist>) =>\r\n        instances.map((instance: BarcodeHist) => new BarcodeHist(instance))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update the properties of the most recent change record kept for this instance.\r\n   *\r\n   * @param {any} id Model id\r\n   *\r\n   * @param {object} data Request data.\r\n   *\r\n   *  - `data` – `{object}` - An object of Change property name/value pairs\r\n   *\r\n   * @returns {object} An empty reference that will be\r\n   *   populated with the actual data once the response is returned\r\n   *   from the server.\r\n   *\r\n   * <em>\r\n   * (The remote method definition does not provide any description.\r\n   * This usually means the response is a `BarcodeHist` object.)\r\n   * </em>\r\n   */\r\n  public updateLastChange(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\r\n    let _method: string = \"PUT\";\r\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\r\n    \"/BarcodeHists/:id/changes/last\";\r\n    let _routeParams: any = {\r\n      id: id\r\n    };\r\n    let _postBody: any = {\r\n      data: data\r\n    };\r\n    let _urlParams: any = {};\r\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `BarcodeHist`.\r\n   */\r\n  public getModelName() {\r\n    return \"BarcodeHist\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/BarcodeHist.ts","import { Observer } from 'rxjs/Rx';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\nimport { SiteConfigApi } from '../../../shared/sdk/services';\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\n\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { ConfigServiceProvider } from '../config-service/config-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\n\r\n\r\n/*\r\n  Generated class for the SiteconfigServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class SiteconfigServiceProvider {\r\n\r\n  keylist = [\r\n    'BARCODE_SUPP_BCODEISJOBNUM',\r\n    'PDA_BARCODES',\r\n    'PDA_JSEA_ON',\r\n    'PDA_JSEA_TYPE',\r\n    'PDA_PICKUP_ALL',\r\n    'PDA_DEPART_ALL',\r\n    'PDA_DELIVER_ALL',\r\n    'PDA_FULL_STATUSES',\r\n    'PDA_IMAGES',\r\n    'PDA_IMAGES_URL',\r\n    'PDA_NOTES',\r\n    'PDA_DEL_DAYSBACK',\r\n    'PDA_SORT_COL1',\r\n    'PDA_DISPLAY_DATE',\r\n    'PDA_SIGNATURE_PUP',\r\n    'PDA_SIGNATURE_DPUP',\r\n    'PDA_DISCRETE_DEL_SIGNAT',\r\n    'PDA_MULTIDEL_NOTE_TEXT',\r\n    'PDA_DISPLAY_FROM',\r\n    'PDA_DISPLAY_TO',\r\n    'PDA_ROW1_FONT_SIZE',\r\n    'PDA_MONITOR_ONLINE',\r\n    'PDA_CLIENT_CONFLICTS',\r\n    'PDA_MANDATORY_PHOTOS'\r\n  ];\r\n\r\n  siteconfigs = null;\r\n  injector;\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider,\r\n    private siteConfigApi: SiteConfigApi,\r\n    private configService: ConfigServiceProvider,\r\n\r\n    public http: Http,\r\n    private sharedService: SharedServiceProvider,\r\n    private logger: LogServiceProvider\r\n  ) {\r\n    //console.log('Hello SiteconfigServiceProvider Provider');\r\n    //this.injector = ReflectiveInjector.resolveAndCreate([LogServiceProvider, LoggerService, PdaparamsServiceProvider, ConfigServiceProvider, Http]);\r\n  }\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'SiteconfigServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  loadAllConfigsFromServer() {\r\n    var filter = {\r\n      \"where\":\r\n        {\r\n          and: [{ \"confActive\": true }, { \"confKey\": { \"inq\": this.keylist } }]\r\n        }\r\n    };\r\n    return Observable.create((observer: Observer<string>) => {\r\n      this.siteConfigApi.find(filter).subscribe(siteconfigs => {\r\n        this.log.info(\"Retrieved:\" + JSON.stringify(siteconfigs));\r\n\r\n        this.siteconfigs = siteconfigs;\r\n        var len = this.siteconfigs.length;\r\n        if (len == 0) {\t\t// not found\r\n          this.log.error(\"No site config values found\");\r\n          //console.log(\"No site config values found\");\r\n        } else {\r\n\r\n          for (var i = 0; i < len; i++) {\r\n            // store in local storage for future use\r\n            // TODO - store in individual keys or as a site_config key for an object with all keys?\r\n            localStorage.setItem(this.siteconfigs[i].confKey, this.siteconfigs[i].confValue);\r\n          }\r\n          localStorage.setItem('SITE_CONFIG_LOADED', 'true');\r\n          this.sharedService.SITE_CONFIG_LOADED.next(true);\r\n        }\r\n        observer.next(\"success\");\r\n      },\r\n        error => {\r\n          this.log.info(error);\r\n          Observable.throw(error);\r\n        });\r\n    });\r\n  } //End of  getAllConfigsFromServer() \r\n\r\n\r\n\r\n  deleteLocalConfigs() {\r\n    // Remove all config key/value pairs from local storage\r\n    // NOTE this should in general ALWAYS be followed by a getAllConfigsFromServer() call to repopulate\r\n    var len = this.keylist.length;\r\n    for (var i = 0; i < len; i++) {\r\n      if (localStorage.getItem(this.keylist[i]) !== null) {\r\n        localStorage.removeItem(this.keylist[i]);\r\n      }\r\n    }\r\n\r\n    this.sharedService.SITE_CONFIG_LOADED.next(false);\r\n  }\r\n\r\n  // returns a promise as we are using it in app.module.js to resolve routes\r\n  getSiteConfigYN(key) {\r\n    var retval = localStorage.getItem(key);\r\n    if (!retval) {\r\n      retval = 'N';\r\n    }\r\n    //return ($q.when(retval));\r\n    //return (retval);\r\n    return retval;\r\n  }\r\n\r\n\r\n  getSiteConfig(key) {\r\n    var retval = localStorage.getItem(key);\r\n    if (!retval) {\r\n      retval = '';\r\n    }\r\n    //return ($q.when(retval));\r\n    //return (retval);\r\n    return Observable.of(retval);\r\n  }\r\n\r\n  getSiteConfigInt(key) {\r\n    var retval = +localStorage.getItem(key);\t\t// the \"+\" causes a cast to an integer\r\n    if (!retval) {\r\n      retval = 0;\r\n    }\r\n    //return ($q.when(retval));\r\n    //return (retval);\r\n    return retval;\r\n  }\r\n\r\n  // no promise on this one so it can be used in inline synchronous code\r\n  getSiteConfigValue(key) {\r\n    var retval = localStorage.getItem(key);\r\n    if (!retval) {\r\n      retval = '';\r\n    }\r\n    return (retval);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/siteconfig-service/siteconfig-service.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ImageTextPage } from './image-text';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ImageTextPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ImageTextPage),\r\n  ],\r\n})\r\nexport class ImageTextPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/image-text/image-text.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ViewController } from 'ionic-angular';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\n\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { ImageFileServiceProvider } from '../../providers/image-file-service/image-file-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\n\r\n/**\r\n * Generated class for the ImageTextPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-image-text',\r\n  templateUrl: 'image-text.html',\r\n})\r\nexport class ImageTextPage {\r\n  photoMessage;\r\n  loginFlag = this.pdaParams.isDrvLoggedOn();\r\n  newFileName: string = this.navParams.get('newFileName');\r\n\r\n  constructor(public navCtrl: NavController, private imageFileService: ImageFileServiceProvider,\r\n    public navParams: NavParams, public viewCtrl: ViewController,\r\n    private configService: ConfigServiceProvider, private pdaParams: PdaparamsServiceProvider,\r\n    private sharedService: SharedServiceProvider) {\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n  }\r\n\r\n  save = () => {\r\n    var notes = this.photoMessage;\r\n    this.imageFileService.setImageProperty(this.newFileName, 'notes', notes);\r\n    // close after saving\r\n    this.closeModal();\r\n  };\r\n\r\n  // function to close the modal\r\n  closeModal = () => {\r\n    if (this.newFileName)\r\n      this.imageFileService.setImageProperty(this.newFileName, 'readyForUpload', 'true');\r\n    this.clear();\r\n    this.viewCtrl.dismiss();\r\n  };\r\n\r\n  clear = () => {\r\n    this.photoMessage = \"\";\r\n  };\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/image-text/image-text.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { JobDetailNotesPage } from './job-detail-notes';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    JobDetailNotesPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(JobDetailNotesPage),\r\n  ],\r\n})\r\nexport class JobDetailNotesPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/job-detail-notes/job-detail-notes.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ViewController } from 'ionic-angular';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\n\r\n/**\r\n * Generated class for the JobDetailNotesPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-job-detail-notes',\r\n  templateUrl: 'job-detail-notes.html',\r\n})\r\nexport class JobDetailNotesPage {\r\n  loginFlag = this.pdaParams.isDrvLoggedOn();\r\n  note = {\r\n    'seqid': '',\r\n    'formtype': '',\r\n    'text': '',\r\n    'placeholderText': ''\r\n  };\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams,\r\n    private viewCtrl: ViewController, private configService: ConfigServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider, private sharedService: SharedServiceProvider) {\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n    this.note = Object.assign({}, this.navParams.get('note'));\r\n  }\r\n\r\n\r\n  clear() {\r\n    this.note.formtype = '';\r\n    this.note.placeholderText = '';\r\n    this.note.text = '';\r\n    this.note.seqid = '';\r\n  };\r\n\r\n  drawCancel() {\r\n    this.clear();\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n  save() {\r\n    var seqid = this.note.seqid;\r\n    var noteText = this.note.text;\r\n    this.note.text = \"\";\r\n    this.viewCtrl.dismiss({\r\n      noteText: noteText,\r\n      seqid: seqid\r\n    });\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/job-detail-notes/job-detail-notes.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { JobDetailsPage } from './job-details';\r\nimport { CameraButtonComponent } from '../../components/camera-button/camera-button';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    JobDetailsPage,\r\n    CameraButtonComponent,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(JobDetailsPage),\r\n  ],\r\n})\r\nexport class JobDetailsPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/job-details/job-details.module.ts","import { Injectable } from '@angular/core';\r\n\r\n\r\n/*\r\n  Generated class for the WindowRefServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n\r\n    REf:https://stackoverflow.com/questions/34177221/angular2-how-to-inject-window-into-an-angular2-service\r\n*/\r\n\r\nfunction getWindow(): any {\r\n  return window;\r\n}\r\n@Injectable()\r\nexport class WindowRefServiceProvider {\r\n\r\n  constructor() {\r\n    //console.log('Hello WindowRefServiceProvider Provider');\r\n  }\r\n\r\n  get nativeWindow(): any {\r\n    return getWindow();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/window-ref-service/window-ref-service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { JobReplicationServiceProvider } from '../job-replication-service/job-replication-service'\r\n\r\n/*\r\n  Generated class for the SyncServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class SyncServiceProvider {\r\n\r\n\r\n  mystr;\r\n  lcallingfunc;\r\n  isSyncing: boolean = false;\r\n\r\n  //sync = lbclient.sync(this.arg1,this.arg2);\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'PlatformReadyServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  constructor(public http: Http, private logger: LogServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider,\r\n    public jobReplicationService: JobReplicationServiceProvider) {\r\n    //console.log('Hello SyncServiceProvider Provider');\r\n  }\r\n\r\n\r\n  hybridSync = function (callback, filter) {\r\n\r\n    this.mystr = 'syncService: About to sync SyncInprogress = ' + this.isSyncing + \" Called from (last value set =) [\" + this.lcallingfunc + \"]\";\r\n    this.log.debug(this.mystr);\r\n\r\n    if (!this.isSyncing) {\r\n      this.isSyncing = true;\r\n\r\n      this.mystr = 'syncService: isSyncInprogress is off so turn it on before Replication sync call ';\r\n      this.log.debug(this.mystr);\r\n      this.log.debug(\"SYNC: START\");\r\n\r\n      //console.log(\"+++++++++++++++++++++Calling jobReplicationService.sync in sync-service.ts.+++++++++++\");\r\n     \r\n      this.jobReplicationService.sync(callback, filter);\r\n    }\r\n  }\r\n\r\n  getSyncInProgress = function () {\r\n\r\n    this.mystr = 'syncService: getSyncInProgress:' + this.isSyncing;\r\n    this.log.debug(this.mystr);\r\n\r\n    return this.isSyncing;\r\n  };\r\n\r\n  setCallingFunc = function (callingfunc) {\r\n\r\n    this.mystr = 'syncService: In setCallingFunc value = ' + callingfunc;\r\n    this.log.debug(this.mystr);\r\n\r\n    this.lcallingfunc = callingfunc;\r\n  };\r\n\r\n  setSyncInProgress = function (torf) {\r\n\r\n    this.isSyncing = torf;\r\n    this.mystr = 'syncService: In setSyncInprogress setting value = ' + this.isSyncing;\r\n    this.log.debug(this.mystr);\r\n  };\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sync-service/sync-service.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ChangePage } from './change';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ChangePage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ChangePage),\r\n  ],\r\n})\r\nexport class ChangePageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/change/change.module.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { DevicePage } from './device';\r\nimport { KeysPipe } from '../../pipes/keys.pipe'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DevicePage,\r\n    KeysPipe\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(DevicePage),\r\n  ],\r\n})\r\nexport class DevicePageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/device/device.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, AlertController, App } from 'ionic-angular';\r\nimport { Network } from '@ionic-native/network';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\n\r\ndeclare const lbclient: any;\r\n\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { SiteconfigServiceProvider } from '../../providers/siteconfig-service/siteconfig-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { GpsServiceProvider } from '../../providers/gps-service/gps-service';\r\nimport { PlatformReadyServiceProvider } from '../../providers/platform-ready-service/platform-ready-service';\r\nimport { ExitServiceProvider } from '../../providers/exit-service/exit-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\nimport { DeviceServiceProvider } from '../../providers/device-service/device-service';\r\nimport { MessageServiceProvider } from '../../providers/message-service/message-service';\r\nimport { JobServiceProvider } from '../../providers/job-service/job-service';\r\nimport { JseaServiceProvider } from '../../providers/jsea-service/jsea-service';\r\nimport { SodServiceProvider } from '../../providers/sod-service/sod-service';\r\nimport { PushServiceProvider } from '../../providers/push-service/push-service';\r\nimport { ConnectivityMonitorProvider } from '../../providers/connectivity-monitor/connectivity-monitor';\r\n\r\n\r\n\r\nimport { KeysPipe } from '../../pipes/keys.pipe';\r\n\r\nimport { LoginPage } from '../login/login';\r\nimport { ChangePage } from '../change/change';\r\nimport { MyApp } from '../../app/app.component';\r\n\r\n/**\r\n * Generated class for the DevicePage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\ninterface ClientConfig {\r\n  \"connector\": \"\",\r\n  \"debug\": \"\",\r\n  \"clientId\": \"\",\r\n  \"serverIP\": \"\",\r\n  \"serverPort\": 0,\r\n  \"url\": \"\"\r\n}\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-device',\r\n  templateUrl: 'device.html',\r\n})\r\nexport class DevicePage {\r\n\r\n  username: any;\r\n  clientConfig: ClientConfig;\r\n  appConfig;\r\n  version;\r\n  fullreplication;\r\n  usedStorage;\r\n  localStorageList;\r\n  error;\r\n  device;\r\n  isOnline;\r\n  networkType;\r\n  driverId: number;\r\n  loginFlag = this.pdaParams.isDrvLoggedOn();\r\n  devicectrl = {\r\n    title: '',\r\n    drivernum: 0,\r\n    isGpsWorking: false,\r\n    isDeviceReady: false,\r\n    showGpsAlerts: false,\r\n    sendGps: false,\r\n    registeredForPush: false\r\n  };\r\n\r\n  constructor(private storage: Storage, public navCtrl: NavController, public navParams: NavParams,\r\n    private platformReady: PlatformReadyServiceProvider,\r\n    private configService: ConfigServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider, private gpsService: GpsServiceProvider,\r\n    private exitService: ExitServiceProvider, private deviceService: DeviceServiceProvider,\r\n    private sharedService: SharedServiceProvider,\r\n    private alertCtrl: AlertController, private siteConfig: SiteconfigServiceProvider,\r\n    private messageService: MessageServiceProvider, private jobService: JobServiceProvider,\r\n    private jseaService: JseaServiceProvider, private sodService: SodServiceProvider,\r\n    private conMonService: ConnectivityMonitorProvider, private pushService: PushServiceProvider,\r\n    private app: App) {\r\n    this.username = navParams.data;\r\n    //console.log(\"DevicePage loading...\");\r\n\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n    this.clientConfig = this.configService.getClientConfig();\r\n    this.appConfig = this.configService.appConfig;\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n\r\n    this.driverId = this.pdaParams.getDriverId();\r\n    this.devicectrl.title = \"Device Details\" + \" v\" + this.configService.appConfig.version;\r\n    this.devicectrl.drivernum = this.pdaParams.getDriverId();\r\n    this.devicectrl.isGpsWorking = this.gpsService.getGpsIsWorking();\r\n    this.devicectrl.isDeviceReady = this.platformReady.isPlatformReady();\r\n    this.devicectrl.showGpsAlerts = this.gpsService.getShowGpsAlerts();\r\n    this.devicectrl.sendGps = this.gpsService.getSendGps();\r\n\r\n    if (this.devicectrl.isDeviceReady) {\r\n      this.devicectrl.registeredForPush = this.pushService.getIsRegistered();\r\n      this.version = this.configService.appConfig.version;\r\n      this.fullreplication = lbclient.fullreplication.fullReplication;\r\n      this.usedStorage = Math.round(JSON.stringify(localStorage).length / 1024) + \" KB\";\r\n      this.localStorageList = this.localStorageUsage();\r\n      this.device = this.deviceService.getDevice();\r\n    }\r\n    this.conMonService.isConnected.subscribe(res => {\r\n      this.isOnline = res;\r\n    });\r\n    this.conMonService.networkType.subscribe(res => {\r\n      this.networkType = res;\r\n    });\r\n\r\n  }// ionViewDidLoad() ends\r\n\r\n  showResult = () => {\r\n    return this.error == \"\";\r\n  }\r\n\r\n  updateShowGpsAlerts = (torf) => {\r\n    this.gpsService.setShowGpsAlerts(torf);\r\n  }\r\n\r\n  updateSendGps = (torf) => {\r\n    this.gpsService.setSendGps(torf);\r\n  }\r\n\r\n  exitTplusMobile = () => {\r\n    this.gpsService.setSendGps(false);\r\n    this.exitService.exitTplusMobile();\r\n  }\r\n\r\n  toggleFullReplication = () => {\r\n    this.fullreplication = !this.fullreplication;\r\n  };\r\n\r\n  toggleDesktopBrowserScrolling = () => {\r\n    this.sharedService.setDesktopBrowserScrolling(!this.sharedService.setDesktopBrowserScrolling);\r\n  }\r\n\r\n  pushDeRegister = () => {\r\n  }\r\n  pushRegister = () => {\r\n    this.pushService.registerForPush();\r\n  }\r\n\r\n  resetApp = () => {\r\n    let confirmPopup = this.alertCtrl.create({\r\n      title: 'Reset App',\r\n      message: 'This will delete all data for this app and you will need to login again.  Are you sure you want to do this?',\r\n      buttons: [\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            localStorage.clear();\r\n            // TODO -  clear images if required - see /app/strongloop/loopback-clientservices-osc-images/client/js/deviceCtrl.js           \r\n            this.app.getRootNav().setRoot(MyApp);\r\n            //return false;\r\n          }\r\n        },\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            //console.log('Cancel clicked');\r\n            return;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    confirmPopup.present();\r\n  }\r\n\r\n  reloadSiteConfig = () => {\r\n    this.siteConfig.deleteLocalConfigs();\r\n    console.log(\"Local Configs deleted!\");\r\n    var result$: Observable<string> = this.siteConfig\r\n      .loadAllConfigsFromServer()\r\n      .subscribe((result) => {\r\n        console.log(\"Site Config Reloaded!\");\r\n      },\r\n        (error) => {\r\n          this.showError(\"Unable to load Site Configs.Please check your connection.\");\r\n          return;\r\n        });\r\n  }\r\n\r\n  showError(text) {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Error',\r\n      subTitle: text,\r\n      buttons: ['OK']\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  localStorageUsage = () => {\r\n    var len = localStorage.length;\r\n    var localStorageList = {};\r\n    for (var i = 0; i < len; i++) {\r\n      var key = localStorage.key(i);\r\n      var value = localStorage[key];\r\n      if (key == 'osc-local-db' || key == 'signature')\t\t// Ignore (potentially very large) list of jobs etc.\r\n        continue;\r\n      localStorageList[key] = value;\r\n    }\r\n    return (localStorageList);\r\n  }\r\n\r\n\r\n\r\n  viewChangeData = () => {\r\n    this.navCtrl.push(ChangePage).catch((err) => {\r\n      //console.log(\"Error pushing ChangePage:\" + err);\r\n    });\r\n  }\r\n\r\n  clearChangeData = () => {\r\n    this.messageService.clearChangeData();\r\n  }\r\n\r\n  deleteOldJobs = () => {\r\n    this.jobService.deleteOldJobs(0);\r\n  }\r\n\r\n  deleteOldJSEA = () => {\r\n    this.jseaService.deleteOldData(0);\r\n  }\r\n\r\n  clearSODDate = () => {\r\n    this.sodService.clearSODDate();\r\n    this.localStorageList = this.localStorageUsage();\r\n  }\r\n\r\n  setSODDate = () => {\r\n    this.sodService.setSODDate();\r\n    this.localStorageList = this.localStorageUsage();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/device/device.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\n\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { GpsAuditServiceProvider } from '../../providers/gps-audit-service/gps-audit-service'\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\n\r\n/**\r\n * Generated class for the GpsPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\ninterface Coordinates {\r\n  latitude: number;\r\n  longitude: number;\r\n  accuracy: number;\r\n  altitude: number;\r\n  altitudeAccuracy: number;\r\n  heading: number;\r\n  speed: number;\r\n}\r\n\r\ninterface Geoposition {\r\n  coords: Coordinates;\r\n  timestamp: number;\r\n}\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-gps',\r\n  templateUrl: 'gps.html',\r\n})\r\nexport class GpsPage {\r\n  username: any;\r\n  psIsWorking: boolean = false;\r\n  posOptions = {\r\n    timeout: 10000,\r\n    enableHighAccuracy: false\r\n  };\r\n  error;\r\n  debug;\r\n  gpshistory;\r\n  gpsIsWorking = false;\r\n  gpsErrorMess;\r\n  err;\r\n  driverId: number;\r\n  loginFlag = this.pdaParams.isDrvLoggedOn();\r\n\r\n  position: Geoposition = {\r\n    coords: {\r\n      latitude: 0,\r\n      longitude: 0,\r\n      accuracy: 0,\r\n      altitude: 100,\r\n      altitudeAccuracy: 100,\r\n      heading: 50,\r\n      speed: 100,\r\n    },\r\n    timestamp: 10\r\n  };\r\n  success;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams,\r\n    private pdaParams: PdaparamsServiceProvider, private configService: ConfigServiceProvider,\r\n    private gpsAudit: GpsAuditServiceProvider, private geolocation: Geolocation,\r\n    private sharedService: SharedServiceProvider) {\r\n    this.username = navParams.data;\r\n    //console.log(\"GpsPage loading...\");\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.driverId = this.pdaParams.getDriverId();\r\n    this.error = \"\";\r\n    this.debug = this.pdaParams.debugMode;\r\n    this.gpshistory = this.gpsAudit.getHistory();\r\n\r\n    //Riyaz: Using ionic native's geolocation plugin here\r\n    this.geolocation.getCurrentPosition(this.posOptions).then((position) => {\r\n      this.position.coords.latitude = position.coords.latitude;\r\n      this.position.coords.longitude = position.coords.longitude;\r\n      this.position.coords.altitude = position.coords.altitude;\r\n      this.position.coords.accuracy = position.coords.accuracy;\r\n      this.position.coords.altitudeAccuracy = position.coords.altitudeAccuracy;\r\n      this.position.coords.heading = position.coords.heading;\r\n      this.position.coords.speed = position.coords.speed;\r\n      this.position.timestamp = position.timestamp;\r\n      this.success = 'YES';\r\n      this.gpsIsWorking = true;\r\n\r\n    }).catch((err) => {\r\n      this.success = 'FAIL';\r\n      this.gpsIsWorking = false;\r\n      this.gpsErrorMess = err.message;\r\n      this.error = \"Failed\";\r\n      this.err = err;\r\n    });\r\n\r\n  }\r\n\r\n  getGPSIsworking = () => {\r\n    return this.gpsIsWorking;\r\n  }\r\n\r\n  showResult = () => {\r\n    return this.error == \"\";\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/gps/gps.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, AlertController, Tabs } from 'ionic-angular';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\nimport { DespatchToDriverMessagesApi } from '../../../shared/sdk';\r\n\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { LogServiceProvider } from '../../providers/log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../../providers/siteconfig-service/siteconfig-service';\r\nimport { BaseServiceProvider } from '../../providers/base-service/base-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\nimport { MessageServiceProvider } from '../../providers/message-service/message-service';\r\nimport { DriverMessageServiceProvider } from '../../providers/driver-message-service/driver-message-service';\r\n\r\n/**\r\n * Generated class for the MsgsPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-msgs',\r\n  templateUrl: 'msgs.html',\r\n})\r\nexport class MsgsPage {\r\n\r\n  t: Tabs = this.navCtrl.parent;\r\n  username: any;\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'MsgsPage' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  messageText;\r\n  boxShow = false;\r\n  textareadata;\r\n  messages = [];\r\n  driverId;\r\n  err;\r\n  filter;\r\n  loginFlag = this.pdaParams.isDrvLoggedOn();\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, private configService: ConfigServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider, private alertCtrl: AlertController, private siteConfig: SiteconfigServiceProvider,\r\n    private logger: LogServiceProvider, private base: BaseServiceProvider, private sharedService: SharedServiceProvider,\r\n    private messageService: MessageServiceProvider, private driverMessageService: DriverMessageServiceProvider,\r\n    private despatchToDriverMessages: DespatchToDriverMessagesApi) {\r\n    this.username = navParams.data;\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n    this.driverId = this.pdaParams.getDriverId();\r\n    this.filter = {\r\n      \"where\": { \"drvmDriverId\": this.driverId },\r\n      \"order\": 'drvmSeqid DESC',\r\n      \"limit\": 20\r\n    };\r\n  }\r\n  ionViewWillEnter() {\r\n    this.getMessages();\r\n    // Reset new message count now they have been viewed\r\n    this.messageService.resetNewMessageCount();\r\n  }\r\n\r\n\r\n  getMessages() {\r\n    this.despatchToDriverMessages.find(this.filter).subscribe(\r\n      (msgs) => {\r\n        this.messages = msgs;\r\n        //console.log(\"messages from inside subscribe:::\" + this.messages);\r\n      },\r\n      err => {\r\n        this.err = err;\r\n      }\r\n    )\r\n  }\r\n\r\n  // Reshow messages as required from callbacks etc.\r\n  showMessages(err) {\r\n    this.messages = this.err;\r\n  }\r\n\r\n  showMessageEntryBox(tf) {\r\n    this.boxShow = tf;\r\n  }\r\n\r\n  newMessage() {\r\n    this.textareadata = \"Input your text here\";\r\n    this.showMessageEntryBox(true);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.messageText = this.textareadata;\r\n    this.driverMessageService.addMessage(this.pdaParams.getDriverId(), this.messageText, this.showMessages);\r\n    this.showMessageEntryBox(false);\r\n    this.getMessages();\r\n  }\r\n\r\n  deleteAllMessages() {\r\n    let confirmPopup = this.alertCtrl.create({\r\n      title: 'DELETE All messages',\r\n      subTitle: 'Are you sure you want to DELETE All messages?',\r\n      buttons: [\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            //console.log('User has DELETED all messages');\r\n            this.log.debug('User has DELETED all messages');\r\n            return false;\r\n          }\r\n        },\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            //console.log('Cancel clicked');\r\n            this.log.debug('User has CANCELLED out of DELETE All messages');\r\n            return;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    confirmPopup.present();\r\n  }//End of  deleteAllMessages() messages\r\n\r\n  quit() {\r\n    this.showMessageEntryBox(false);\r\n    this.t.select(0);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/msgs/msgs.ts","import { Injectable } from '@angular/core';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport { timestamp } from 'rxjs/operator/timestamp';\r\nimport { DespatchToDriverMessagesApi } from '../../../shared/sdk';\r\n\r\n/*\r\n  Generated class for the DriverMessageServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n\r\nexport interface driverMsgInt {\r\n  drvmDriverId: any;\r\n  drvmDate: any;\r\n  drvmTimestamp: any;\r\n  drvmMessage: string;\r\n  drvmSender: any;\r\n  drvmRecipient: any;\r\n  drvmSpare: any;\r\n\r\n}\r\n\r\n@Injectable()\r\nexport class DriverMessageServiceProvider {\r\n\r\n  constructor(private despatchToDriverMessages: DespatchToDriverMessagesApi) {\r\n    //console.log('Hello DriverMessageServiceProvider Provider');\r\n  }\r\n\r\n  driverMsg: driverMsgInt;\r\n\r\n  getMessages(driverId) {\r\n    // TODO - limit shoud be a config or pda parameter\r\n    var filter = {\r\n      \"where\": { \"drvmDriverId\": driverId },\r\n      \"order\": 'drvmSeqid DESC',\r\n      \"limit\": 20\r\n    };\r\n\r\n    return (this.despatchToDriverMessages.find(filter).subscribe());\r\n  };\r\n\r\n  addMessage(driverId, message, cb) {\r\n\r\n    //var now = new Date();\r\n\r\n    //console.log(\"driverId, message, cb\" + driverId + \",\" + message + \",\" + cb);\r\n    var now = new Date().toISOString();\r\n\r\n    this.driverMsg = {\r\n      drvmDriverId: driverId,\r\n      drvmDate: now,\r\n      drvmTimestamp: now,\r\n      drvmMessage: message,\t\t// TODO - should make sure <:512 chars\r\n      drvmSender: driverId,\r\n      drvmRecipient: \"DESPATCH\",\r\n      drvmSpare: ''\r\n    };\t// for now will always be DESPATCH until we maybe have a reply concept\r\n\r\n    this.despatchToDriverMessages.create(this.driverMsg).subscribe();\r\n    //this.despatchToDriverMessages.upsert(this.driverMsg).subscribe();\r\n  };\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/driver-message-service/driver-message-service.ts","/* tslint:disable */\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Http, Headers, Request, RequestOptions } from '@angular/http';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { JSONSearchParams } from './search.params';\r\nimport { ErrorHandler } from './error.service';\r\nimport { LoopBackAuth } from './auth.service';\r\nimport { LoopBackConfig } from '../../lb.config';\r\nimport { LoopBackFilter, AccessToken } from '../../models/BaseModels';\r\nimport { SDKModels } from '../custom/SDKModels';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport { SocketConnection } from '../../sockets/socket.connections';\r\n// Making Sure EventSource Type is available to avoid compilation issues.\r\ndeclare var EventSource: any;\r\n/**\r\n* @module BaseLoopBackApi\r\n* @author Jonathan Casarrubias <@johncasarrubias> <github:jonathan-casarrubias>\r\n* @author Nikolay Matiushenkov <https://github.com/mnvx>\r\n* @license MIT\r\n* @description\r\n* Abstract class that will be implemented in every custom service automatically built\r\n* by the sdk builder.\r\n* It provides the core functionallity for every API call, either by HTTP Calls or by\r\n* WebSockets.\r\n**/\r\n@Injectable()\r\nexport abstract class BaseLoopBackApi {\r\n\r\n  protected path: string;\r\n  protected model: any;\r\n\r\n  constructor(\r\n    @Inject(Http) protected http: Http,\r\n    @Inject(SocketConnection) protected connection: SocketConnection,\r\n    @Inject(SDKModels) protected models: SDKModels,\r\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\r\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\r\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\r\n  ) {\r\n    this.model = this.models.get(this.getModelName());\r\n  }\r\n  /**\r\n   * @method request\r\n   * @param {string}  method      Request method (GET, POST, PUT)\r\n   * @param {string}  url         Request url (my-host/my-url/:id)\r\n   * @param {any}     routeParams Values of url parameters\r\n   * @param {any}     urlParams   Parameters for building url (filter and other)\r\n   * @param {any}     postBody    Request postBody\r\n   * @return {Observable<any>}\r\n   * @description\r\n   * This is a core method, every HTTP Call will be done from here, every API Service will\r\n   * extend this class and use this method to get RESTful communication.\r\n   **/\r\n  public request(\r\n    method: string,\r\n    url: string,\r\n    routeParams: any = {},\r\n    urlParams: any = {},\r\n    postBody: any = {},\r\n    pubsub: boolean = false,\r\n    customHeaders?: Function\r\n  ): Observable<any> {\r\n    // Transpile route variables to the actual request Values\r\n    Object.keys(routeParams).forEach((key: string) => {\r\n      url = url.replace(new RegExp(\":\" + key + \"(\\/|$)\", \"g\"), routeParams[key] + \"$1\")\r\n    });\r\n    if (pubsub) {\r\n      if (url.match(/fk/)) {\r\n        let arr = url.split('/'); arr.pop();\r\n        url = arr.join('/');\r\n      }\r\n      let event: string = (`[${method}]${url}`).replace(/\\?/, '');\r\n      let subject: Subject<any> = new Subject<any>();\r\n      this.connection.on(event, (res: any) => subject.next(res));\r\n      return subject.asObservable();\r\n    } else {\r\n      // Headers to be sent\r\n      let headers: Headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n      // Authenticate request\r\n      this.authenticate(url, headers);\r\n      // Body fix for built in remote methods using \"data\", \"options\" or \"credentials\r\n      // that are the actual body, Custom remote method properties are different and need\r\n      // to be wrapped into a body object\r\n      let body: any;\r\n      let postBodyKeys = typeof postBody === 'object' ? Object.keys(postBody) : []\r\n      if (postBodyKeys.length === 1) {\r\n        body = postBody[postBodyKeys.shift()];\r\n      } else {\r\n        body = postBody;\r\n      }\r\n      let filter: string = '';\r\n      // Separate filter object from url params and add to search query\r\n      if (urlParams.filter) {\r\n        if (LoopBackConfig.isHeadersFilteringSet()) {\r\n          headers.append('filter', JSON.stringify(urlParams.filter));\r\n        } else {\r\n          filter = `?filter=${encodeURIComponent(JSON.stringify(urlParams.filter))}`;\r\n        }\r\n        delete urlParams.filter;\r\n      }\r\n      // Separate where object from url params and add to search query\r\n      /**\r\n      CODE BELOW WILL GENERATE THE FOLLOWING ISSUES:\r\n      - https://github.com/mean-expert-official/loopback-sdk-builder/issues/356\r\n      - https://github.com/mean-expert-official/loopback-sdk-builder/issues/328 \r\n      if (urlParams.where) {\r\n        headers.append('where', JSON.stringify(urlParams.where));\r\n        delete urlParams.where;\r\n      }\r\n      **/\r\n      if (typeof customHeaders === 'function') {\r\n        headers = customHeaders(headers);\r\n      }\r\n      this.searchParams.setJSON(urlParams);\r\n      let request: Request = new Request(\r\n        new RequestOptions({\r\n          headers: headers,\r\n          method: method,\r\n          url: `${url}${filter}`,\r\n          search: Object.keys(urlParams).length > 0 ? this.searchParams.getURLSearchParams() : null,\r\n          body: body ? JSON.stringify(body) : undefined,\r\n          withCredentials: LoopBackConfig.getRequestOptionsCredentials()\r\n        })\r\n      );\r\n      return this.http.request(request)\r\n        .map((res: any) => (res.text() != \"\" ? res.json() : {}))\r\n        .catch((e) => this.errorHandler.handleError(e));\r\n    }\r\n  }\r\n  /**\r\n   * @method authenticate\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @param {string} url Server URL\r\n   * @param {Headers} headers HTTP Headers\r\n   * @return {void}\r\n   * @description\r\n   * This method will try to authenticate using either an access_token or basic http auth\r\n   */\r\n  public authenticate<T>(url: string, headers: Headers): void {\r\n    if (this.auth.getAccessTokenId()) {\r\n      headers.append(\r\n        'Authorization',\r\n        LoopBackConfig.getAuthPrefix() + this.auth.getAccessTokenId()\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   * @method create\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @param {T} data Generic data type\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic create method\r\n   */\r\n  public create<T>(data: T, customHeaders?: Function): Observable<T> {\r\n    return this.request('POST', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path\r\n    ].join('/'), undefined, undefined, { data }, null, customHeaders).map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method onCreate\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @param {T[]} data Generic data type array\r\n   * @return {Observable<T[]>}\r\n   * @description\r\n   * Generic pubsub oncreate many method\r\n   */\r\n  public onCreate<T>(data: T[]): Observable<T[]> {\r\n    return this.request('POST', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path\r\n    ].join('/'), undefined, undefined, { data }, true)\r\n      .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\r\n  }\r\n  /**\r\n   * @method createMany\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @param {T[]} data Generic data type array\r\n   * @return {Observable<T[]>}\r\n   * @description\r\n   * Generic create many method\r\n   */\r\n  public createMany<T>(data: T[], customHeaders?: Function): Observable<T[]> {\r\n    return this.request('POST', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path\r\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\r\n      .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\r\n  }\r\n  /**\r\n   * @method onCreateMany\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @param {T[]} data Generic data type array\r\n   * @return {Observable<T[]>}\r\n   * @description\r\n   * Generic create many method\r\n   */\r\n  public onCreateMany<T>(data: T[]): Observable<T[]> {\r\n    return this.request('POST', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path\r\n    ].join('/'), undefined, undefined, { data }, true)\r\n      .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\r\n  }\r\n  /**\r\n   * @method findById\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @param {any} data Generic data type\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic findById method\r\n   */\r\n  public findById<T>(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\r\n    let _urlParams: any = {};\r\n    if (filter) _urlParams.filter = filter;\r\n    return this.request('GET', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      ':id'\r\n    ].join('/'), { id }, _urlParams, undefined, null, customHeaders)\r\n      .map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method find\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T[+>}\r\n   * @description\r\n   * Generic find method\r\n   */\r\n  public find<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T[]> {\r\n\r\n    //console.log('=========:::::Request sent from base.service.ts:::::=======' + filter);\r\n    return this.request('GET', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path\r\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\r\n      .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\r\n  }\r\n  /**\r\n   * @method exists\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T[]>}\r\n   * @description\r\n   * Generic exists method\r\n   */\r\n  public exists<T>(id: any, customHeaders?: Function): Observable<T> {\r\n    return this.request('GET', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      ':id/exists'\r\n    ].join('/'), { id }, undefined, undefined, null, customHeaders);\r\n  }\r\n  /**\r\n   * @method findOne\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic findOne method\r\n   */\r\n  public findOne<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\r\n    return this.request('GET', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      'findOne'\r\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\r\n      .map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method updateAll\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T[]>}\r\n   * @description\r\n   * Generic updateAll method\r\n   */\r\n  public updateAll<T>(where: any = {}, data: T, customHeaders?: Function): Observable<{ count: 'number' }> {\r\n    let _urlParams: any = {};\r\n    if (where) _urlParams.where = where;\r\n    return this.request('POST', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      'update'\r\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders);\r\n  }\r\n  /**\r\n   * @method onUpdateAll\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T[]>}\r\n   * @description\r\n   * Generic pubsub onUpdateAll method\r\n   */\r\n  public onUpdateAll<T>(where: any = {}, data: T): Observable<{ count: 'number' }> {\r\n    let _urlParams: any = {};\r\n    if (where) _urlParams.where = where;\r\n    return this.request('POST', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      'update'\r\n    ].join('/'), undefined, _urlParams, { data }, true);\r\n  }\r\n  /**\r\n   * @method deleteById\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic deleteById method\r\n   */\r\n  public deleteById<T>(id: any, customHeaders?: Function): Observable<T> {\r\n    return this.request('DELETE', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      ':id'\r\n    ].join('/'), { id }, undefined, undefined, null, customHeaders)\r\n      .map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method onDeleteById\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic pubsub onDeleteById method\r\n   */\r\n  public onDeleteById<T>(id: any): Observable<T> {\r\n    return this.request('DELETE', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      ':id'\r\n    ].join('/'), { id }, undefined, undefined, true).map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method count\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<{ count: number }>}\r\n   * @description\r\n   * Generic count method\r\n   */\r\n  public count(where: any = {}, customHeaders?: Function): Observable<{ count: number }> {\r\n    let _urlParams: any = {};\r\n    if (where) _urlParams.where = where;\r\n    return this.request('GET', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      'count'\r\n    ].join('/'), undefined, _urlParams, undefined, null, customHeaders);\r\n  }\r\n  /**\r\n   * @method updateAttributes\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic updateAttributes method\r\n   */\r\n  public updateAttributes<T>(id: any, data: T, customHeaders?: Function): Observable<T> {\r\n    return this.request('PUT', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      ':id'\r\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\r\n      .map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method onUpdateAttributes\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic onUpdateAttributes method\r\n   */\r\n  public onUpdateAttributes<T>(id: any, data: T): Observable<T> {\r\n    return this.request('PUT', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      ':id'\r\n    ].join('/'), { id }, undefined, { data }, true).map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method upsert\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic upsert method\r\n   */\r\n  public upsert<T>(data: any = {}, customHeaders?: Function): Observable<T> {\r\n    return this.request('PUT', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\r\n      .map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method onUpsert\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic pubsub onUpsert method\r\n   */\r\n  public onUpsert<T>(data: any = {}): Observable<T> {\r\n    return this.request('PUT', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n    ].join('/'), undefined, undefined, { data }, true).map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method upsertPatch\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic upsert method using patch http method\r\n   */\r\n  public upsertPatch<T>(data: any = {}, customHeaders?: Function): Observable<T> {\r\n    return this.request('PATCH', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\r\n      .map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method onUpsertPatch\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic pubsub onUpsertPatch method using patch http method\r\n   */\r\n  public onUpsertPatch<T>(data: any = {}): Observable<T> {\r\n    return this.request('PATCH', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n    ].join('/'), undefined, undefined, { data }, true).map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method upsertWithWhere\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic upsertWithWhere method\r\n   */\r\n  public upsertWithWhere<T>(where: any = {}, data: any = {}, customHeaders?: Function): Observable<T> {\r\n    let _urlParams: any = {};\r\n    if (where) _urlParams.where = where;\r\n    return this.request('POST', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      'upsertWithWhere'\r\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders)\r\n      .map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method onUpsertWithWhere\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic pubsub onUpsertWithWhere method\r\n   */\r\n  public onUpsertWithWhere<T>(where: any = {}, data: any = {}): Observable<T> {\r\n    let _urlParams: any = {};\r\n    if (where) _urlParams.where = where;\r\n    return this.request('POST', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      'upsertWithWhere'\r\n    ].join('/'), undefined, _urlParams, { data }, true).map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method replaceOrCreate\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic replaceOrCreate method\r\n   */\r\n  public replaceOrCreate<T>(data: any = {}, customHeaders?: Function): Observable<T> {\r\n    return this.request('POST', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      'replaceOrCreate'\r\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\r\n      .map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method onReplaceOrCreate\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic onReplaceOrCreate method\r\n   */\r\n  public onReplaceOrCreate<T>(data: any = {}): Observable<T> {\r\n    return this.request('POST', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      'replaceOrCreate'\r\n    ].join('/'), undefined, undefined, { data }, true).map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method replaceById\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic replaceById method\r\n   */\r\n  public replaceById<T>(id: any, data: any = {}, customHeaders?: Function): Observable<T> {\r\n    return this.request('POST', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      ':id', 'replace'\r\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\r\n      .map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method onReplaceById\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<T>}\r\n   * @description\r\n   * Generic onReplaceById method\r\n   */\r\n  public onReplaceById<T>(id: any, data: any = {}): Observable<T> {\r\n    return this.request('POST', [\r\n      LoopBackConfig.getPath(),\r\n      LoopBackConfig.getApiVersion(),\r\n      this.model.getModelDefinition().path,\r\n      ':id', 'replace'\r\n    ].join('/'), { id }, undefined, { data }, true).map((data: T) => this.model.factory(data));\r\n  }\r\n  /**\r\n   * @method createChangeStream\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {Observable<any>}\r\n   * @description\r\n   * Generic createChangeStream method\r\n   */\r\n  public createChangeStream(): Observable<any> {\r\n    let subject = new Subject();\r\n    if (typeof EventSource !== 'undefined') {\r\n      let emit = (msg: any) => subject.next(JSON.parse(msg.data));\r\n      var source = new EventSource([\r\n        LoopBackConfig.getPath(),\r\n        LoopBackConfig.getApiVersion(),\r\n        this.model.getModelDefinition().path,\r\n        'change-stream'\r\n      ].join('/'));\r\n      source.addEventListener('data', emit);\r\n      source.onerror = emit;\r\n    } else {\r\n      console.warn('SDK Builder: EventSource is not supported');\r\n    }\r\n    return subject.asObservable();\r\n  }\r\n  /**\r\n   * @method getModelName\r\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n   * @license MIT\r\n   * @return {string}\r\n   * @description\r\n   * Abstract getModelName method\r\n   */\r\n  abstract getModelName(): string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/core/base.service.ts","import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, AlertController, Tabs } from 'ionic-angular';\r\nimport { File } from '@ionic-native/file';\r\n\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\n\r\n\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { ImageServiceProvider } from '../../providers/image-service/image-service';\r\nimport { ImageFileServiceProvider } from '../../providers/image-file-service/image-file-service';\r\nimport { SiteconfigServiceProvider } from '../../providers/siteconfig-service/siteconfig-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\nimport { UtilServiceProvider } from '../../providers/util-service/util-service';\r\n\r\n\r\n/**\r\n * Generated class for the ImagesPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-images',\r\n  templateUrl: 'images.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ImagesPage {\r\n  username: any;\r\n  t: Tabs = this.navCtrl.parent;\r\n  lpda_images;\r\n  pda_images;\r\n  images;\r\n  images_present: boolean;\r\n  images_loaded: boolean;\r\n  subscription;\r\n  result = null;\r\n  driverId: number;\r\n  loginFlag = this.pdaParams.isDrvLoggedOn();\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, private file: File,\r\n    private configService: ConfigServiceProvider, private pdaParams: PdaparamsServiceProvider,\r\n    private imageService: ImageServiceProvider, private siteConfig: SiteconfigServiceProvider,\r\n    private sharedService: SharedServiceProvider,\r\n    private imageFileService: ImageFileServiceProvider, private alertCtrl: AlertController,\r\n    private utilService: UtilServiceProvider, private cd: ChangeDetectorRef) {\r\n    //console.log(\"ImagesPage loading...\");\r\n    this.username = navParams.data;\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n    this.driverId = this.pdaParams.getDriverId();\r\n    //Monitor Image Refreshes.\r\n    this.sharedService.imageRefresh.subscribe(res => {\r\n      this.getImages();\r\n    });\r\n  }//End of the constructor.\r\n\r\n\r\n  ionViewWillEnter() {\r\n    this.images_loaded = false;\r\n    this.images_present = false;\r\n    if (this.sharedService.testing) {\r\n      this.lpda_images = 'Y';\r\n      this.pda_images = 'Y';\r\n    } else {\r\n      this.lpda_images = this.pdaParams.pda_images ? 'Y' : 'N';\r\n      this.pda_images = this.siteConfig.getSiteConfigYN('PDA_IMAGES');\r\n    }\r\n    if (this.pda_images != 'Y' && this.lpda_images != 'Y') {\r\n      let alert = this.alertCtrl.create({\r\n        title: 'Module not installed',\r\n        subTitle: 'This module is not installed.',\r\n        buttons: [{\r\n          text: 'OK',\r\n          handler: () => {\r\n            const navTransition = alert.dismiss();\r\n            navTransition.then(() => {\r\n              this.t.select(0);\r\n            });\r\n            return false;\r\n          }\r\n        }]\r\n      });\r\n      alert.present();\r\n    } else {\r\n      this.getImages();\r\n    }\r\n  }// ionViewWillEnter() ends here\r\n\r\n\r\n  getImages = () => {\r\n    this.imageService.getImageList().subscribe((images) => {\r\n      var len = images.length;\r\n      if (len > 0)\r\n        this.images_present = true;\r\n      //For each of the images retrieved from file system grab any notes and update the uploaded flag.\r\n      for (var i = 0; i < len; i++) {\r\n        var notes = this.imageFileService.getImageProperty(images[i].name, 'notes');\r\n        if (notes != null) {\r\n          images[i].notes = notes;\r\n        }\r\n        images[i].uploaded = this.imageFileService.getImageProperty(images[i].name, 'uploaded');\r\n        images[i].readyForUpload = this.imageFileService.getImageProperty(images[i].name, 'readyForUpload');\r\n      }\r\n      this.images = images;\r\n      this.images_loaded = true;\r\n      this.cd.detectChanges();\r\n    });\r\n  }//getImages() ends here\r\n\r\n  //Riyaz: See https://github.com/justinwoodcock/Loopback-Upload\r\n  uploadImage = (image) => {\r\n    this.imageService.uploadImage(image, (result) => {\r\n      this.images_loaded = false;\r\n      this.getImages();\r\n    });\r\n  }\r\n\r\n  deleteImage = (imageName) => {\r\n    this.imageService.deleteSingleImage(imageName).subscribe((success) => {\r\n      this.getImages();\t\t// reload images into scope     \r\n    }, function (err) {\r\n      this.log.error(err);\r\n    });\r\n  }\r\n\r\n  deleteObsoleteImages = () => {\r\n    this.imageService.deleteObsoleteImages().subscribe((result) => {\r\n      this.result = result;\r\n      this.navCtrl.setRoot(this.navCtrl.getActive().component);\r\n    }, (err) => {\r\n      //this.log.error(err);\r\n    });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/images/images.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, AlertController, Tabs, ModalController, App } from 'ionic-angular';\r\nimport { Device } from '@ionic-native/device';\r\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\ndeclare const lbclient: any;\r\n\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { LogServiceProvider } from '../../providers/log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../../providers/siteconfig-service/siteconfig-service';\r\nimport { BaseServiceProvider } from '../../providers/base-service/base-service';\r\nimport { PlatformReadyServiceProvider } from '../../providers/platform-ready-service/platform-ready-service';\r\nimport { BarcodeServiceProvider } from '../../providers/barcode-service/barcode-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\n\r\nimport { SignaturePage } from '../signature/signature'\r\nimport { TabsPage } from '../tabs/tabs';\r\nimport { HomePage } from '../home/home';\r\n\r\n\r\n/**\r\n * Generated class for the BarcodePage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-barcode',\r\n  templateUrl: 'barcode.html',\r\n})\r\nexport class BarcodePage {\r\n  username: any;\r\n  t: Tabs = this.navCtrl.parent;\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'JobDetailsPage' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  saveok = false;\r\n  bcode;\r\n  useCamera = true;\r\n  useCipherlab = false;\r\n  myBcodeIsjobNum = false;\r\n  my_scan_session_type;\r\n  my_is_scan_on = true;\r\n  matchedJobsPieces = 0;\r\n  LocalBarcodeHist = lbclient.models.LocalBarcodeHist;\r\n  RemoteBarcodeHist = lbclient.models.RemoteBarcodeHist;\r\n  Job = lbclient.models.LocalJob;\r\n  barcode_sync = lbclient.barcode_sync;\r\n  YN;\r\n  pda_barcodes;\r\n  jobsPieces;\r\n  barcodes = [];\r\n  //barcodes = ['011804230301XX01'];\r\n  scan_session_id;\r\n  driverId: number;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, private configService: ConfigServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider, private siteConfig: SiteconfigServiceProvider,\r\n    private logger: LogServiceProvider, private base: BaseServiceProvider, private alertCtrl: AlertController, private platformReady: PlatformReadyServiceProvider, private device: Device,\r\n    private barcodeScanner: BarcodeScanner, public modalController: ModalController, private barcodeService: BarcodeServiceProvider,\r\n    private app: App, private sharedService: SharedServiceProvider) {\r\n    //console.log(\"BarcodePage loading...\");\r\n    this.username = navParams.data;\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    if (this.sharedService.testing) {\r\n      this.YN = 'Y';\r\n      this.pda_barcodes = 'Y';\r\n    }\r\n    else {\r\n      this.pda_barcodes = this.siteConfig.getSiteConfigYN('PDA_BARCODES');\r\n      this.YN = this.siteConfig.getSiteConfigYN('BARCODE_SUPP_BCODEISJOBNUM');\r\n    }\r\n\r\n    this.driverId = this.pdaParams.getDriverId();\r\n    if (this.pda_barcodes != 'Y') {\r\n      let alert = this.alertCtrl.create({\r\n        title: 'Module not installed',\r\n        subTitle: 'This module is not installed.',\r\n        buttons: [{\r\n          text: 'OK',\r\n          handler: () => {\r\n            const navTransition = alert.dismiss();\r\n            navTransition.then(() => {\r\n              this.t.select(0);\r\n            });\r\n            return false;\r\n          }\r\n        }]\r\n      });\r\n      alert.present();\r\n    } else {\r\n      //Check if the user is logged in\r\n      if (this.pdaParams.isDrvLoggedOn() == false) {\r\n        let logAlert = this.alertCtrl.create({\r\n          title: 'ERROR',\r\n          subTitle: 'You are not logged in please do so first from the jobs screen',\r\n          buttons: [{\r\n            text: 'OK',\r\n            handler: () => {\r\n              const navTransition = logAlert.dismiss();\r\n              navTransition.then(() => {\r\n                this.t.select(0);\r\n              });\r\n              return false;\r\n            }\r\n          }]\r\n        });\r\n        logAlert.present();\r\n      }\r\n\r\n      //Check the value of 'BARCODE_SUPP_BCODEISJOBNUM'\r\n      if (this.YN === \"Y\") {\r\n        this.myBcodeIsjobNum = true;\r\n      }\r\n      else {\r\n        this.myBcodeIsjobNum = false;\r\n      }\r\n      this.jobsPieces = this.matchedJobsPieces;\r\n\r\n      //Determine Scan Type   \r\n      let scanPrompt = this.alertCtrl.create({\r\n        title: 'Determine SCAN Type',\r\n        message: 'Please choose what SCAN type you are performing',\r\n        buttons: [\r\n          {\r\n            text: 'Scan On',\r\n            handler: () => {\r\n              this.log.debug(\"Choosing Scan type: Chose SCAN ON !!!\");\r\n              this.my_scan_session_type = 'SCAN ON SESSION';\r\n              this.scan_session_id = this.my_scan_session_type;\r\n              this.my_is_scan_on = true;\r\n\r\n            }\r\n          },\r\n          {\r\n            text: 'Scan Off',\r\n            handler: () => {\r\n              this.log.debug(\"Choosing Scan type: Chose SCAN OFF !!!\");\r\n              this.my_scan_session_type = 'SCAN OFF SESSION';\r\n              this.scan_session_id = this.my_scan_session_type;\r\n              this.my_is_scan_on = false;\r\n\r\n            }\r\n          }\r\n        ]\r\n      });\r\n      scanPrompt.present();\r\n\r\n      //Check Device for a CipherLab RS30\r\n      if (this.platformReady.isPlatformReady()) {\r\n        var model = this.device.model;\r\n        this.log.debug(\"Device Model = \" + model);\r\n        if (model == 'CipherLab RS30') {\r\n          this.log.debug(\"Device is a CipherLab RS30 \" + model);\r\n          this.useCamera = false;\r\n          this.useCipherlab = true;\r\n        }\r\n        else {\r\n          this.log.debug(\"Device is NOT !!!! a CipherLab RS30 HEAD scanning NOT Available \" + model);\r\n          this.useCamera = true;\r\n        }\r\n        if (this.useCipherlab) {\r\n          (<any>window).plugins.CipherlabRS30CordovaPlugin.initialise(() => {\r\n            (<any>window).plugins.CipherlabRS30CordovaPlugin.setReceiveScanCallback((data) => {\r\n              this.log.debug(\"Cipherlab Callback called scanned = [\" + data + \"]\");\r\n              this.barcodes.push(data);\r\n            });\r\n          });\r\n        }\r\n        window.onbeforeunload = () => {\r\n          this.log.debug('BarcodeCtrl: onBeforeUnload');\r\n        }\r\n      }\r\n    }//End of else    \r\n  }//ionViewDidEnter() ends here\r\n\r\n\r\n  strncmp = (str1, str2, n) => {\r\n    str1 = str1.substring(0, n);\r\n    str2 = str2.substring(0, n);\r\n    return ((str1 == str2) ? 0 :\r\n      ((str1 > str2) ? 1 : -1));\r\n  }\r\n\r\n  /*========================================*/\r\n  /*        CAMERA SCAN                    */\r\n  /*========================================*/\r\n  scan = () => {\r\n    if (this.platformReady.isPlatformReady()) {\r\n      this.useCamera = true;\r\n      this.barcodeScanner.scan().then((barcodeData) => {\r\n        // Success! Barcode data is here\r\n        // Returns object e.g.: {text: \"053329109558\", format: \"UPC_A\", cancelled: false}\r\n        this.barcodes.push(barcodeData.text);\r\n        this.log.debug('CAMERA scanned OK: barcodeData:' + barcodeData);\r\n      }, (error) => {\r\n        // An error occurred\r\n        this.log.debug('CAMERA BAD scan : error:' + error);\r\n      })\r\n    }\r\n    else {\r\n      var ltitle = 'ERROR';\r\n      var lmes = 'CAMERA: cordova NOT ready';\r\n      let alert = this.alertCtrl.create({\r\n        title: ltitle,\r\n        subTitle: lmes,\r\n        buttons: ['Ok']\r\n      });\r\n      alert.present();\r\n    };\r\n  }//Camera Scan ends\r\n\r\n\r\n\r\n  /*========================================*/\r\n  /*        SCAN SESSION CANCEL   */\r\n  /*========================================*/\r\n  scanCancel = () => {\r\n    var confirmPopup = this.alertCtrl.create({\r\n      title: 'CANCEL Scan Session',\r\n      subTitle: 'Are you sure you want to CANCEL this scan session (You will lose all data scanned)?',\r\n      buttons: [\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            this.log.debug('User has Cancelled the scan session');\r\n            this.barcodes = [];\r\n            return;\r\n          }\r\n        },\r\n        {\r\n          text: 'No',\r\n          handler: () => {\r\n            this.log.debug('User has CANCELLED out of a Scan session CANCEL');\r\n\r\n          }\r\n        }]\r\n    });\r\n    confirmPopup.present();\r\n  }//scanCancel() ends here\r\n\r\n  openSignatureModal = () => {\r\n    let modal = this.modalController.create(SignaturePage);\r\n    modal.onDidDismiss(result => {\r\n      if (typeof result !== 'undefined') {\r\n        var podname = result.podname;\r\n        var signature = result.signature;\r\n        this.confirmscanSubmit(signature, podname);\r\n      }\r\n    });\r\n    modal.present();\r\n  }\r\n\r\n  scanSubmit = function () {\r\n    if (this.barcodes.length == 0) {\r\n      return;\r\n    }\r\n\r\n    let subconfirmPopup = this.alertCtrl.create({\r\n      title: 'Scan Session Confirm',\r\n      message: 'Are you sure you want to submit your Scan session to the database ?',\r\n      buttons: [\r\n        {\r\n          text: 'Submit',\r\n          handler: () => {\r\n            if (this.my_is_scan_on == false) /// SCAN OFF\r\n            {\r\n              this.openSignatureModal();\r\n            } else {\r\n              this.confirmscanSubmit();\r\n            }\r\n          }\r\n        },\r\n        {\r\n          text: 'Cancel',\r\n          handler: () => {\r\n            this.log.debug('User has CANCELLED out of a Scan session SUBMIT Doing nothing');\r\n            return;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    subconfirmPopup.present();\r\n\r\n  }//scanSubmit() ends\r\n\r\n\r\n  /*========================================*/\r\n  /*       SCAN SESSION SUBMIT   */\r\n  /*========================================*/\r\n  confirmscanSubmit = function (signat, podname) {\r\n    var save_status = 'FAILED';\r\n    var _filter =\r\n      {\r\n        \"where\": { and: [{ \"mobjobDriver\": this.pdaParams.getDriverId() }, { \"mobjobStatus\": { \"neq\": \"DL\" } }] },\r\n        \"order\": ['mobjobNumber ASC', 'mobjobLegNumber ASC']\r\n      };\r\n\r\n    var filter = Object.assign({}, _filter);\r\n    this.Job.find(filter, (err, jobs) => {\r\n      this.doSubmitWork(jobs, signat, podname);\r\n    });\r\n  }//confirmscanSubmit() ends here\r\n\r\n  doSubmitWork = function (jobs, signat, podname) {\r\n    //console.log(\"doSubmitWork fired!!\");\r\n    var syncRequired = 0;\r\n    var foundJob = false;\r\n    var foundIdx = 0;\r\n    var foundJobNum;\r\n    var foundJobDate;\r\n    var fjobarr = new Array();\r\n    var matchedJobsPieces = 0;\r\n    // A confirm dialog\r\n    var len = this.barcodes.length;\r\n    this.log.debug(\"Searching on \" + len + \" Barcodes across all Jobs\");\r\n    for (var i = 0; i < len; i++) {\r\n      //Set up a unique number\r\n      var d = new Date();\r\n      var uniqId = d.getTime();\r\n      var bchSession = new this.LocalBarcodeHist();\r\n      bchSession.bchSeq = uniqId % 1000000;\r\n      bchSession.bchDriver = this.pdaParams.getDriverId();\r\n      bchSession.bchBarcode = this.barcodes[i];\r\n      this.bcode = bchSession.bchBarcode;\r\n      this.log.debug(\"Looking for BCODE [\" + this.bcode + \"] across all Jobs\");\r\n      bchSession.bchTimestamp = d.toISOString();\r\n      var oset = d.getTimezoneOffset();\r\n      bchSession.bchTimestamp += (oset * -1) * 60 * 1000;\r\n      //Always Zero for a Scan on \r\n      bchSession.bchTimestamp = new Date().toISOString();\r\n      if (this.my_is_scan_on) {\r\n        bchSession.bchJobno = 0;\r\n        bchSession.bchJobdate = new Date();\r\n        bchSession.bchEvent = 'SCAN ON';\r\n      }\r\n      else {\r\n        //We need to get these from a Job\r\n        bchSession.bchEvent = 'SCAN OFF';\r\n        /****************************************************************/\r\n        /* Go Thru the list of jobs that are Picked up and compare their */\r\n        /* connote number against the barcode and when matches thats the*/\r\n        /* Job to finish off                                            */\r\n        /****************************************************************/\r\n        this.log.debug(\"Looking across \" + jobs.length + \" JOBS\");\r\n        for (var x = 0; x < jobs.length; x++) {\r\n          var job = jobs[x];\r\n          var dstring;\r\n          var myconnote_num;\r\n          //Only do this for the first leg as the others are not usefull\r\n          //console.log(\"mobjobLegNumber is:\" + job.mobjobLegNumber);\r\n          if (job.mobjobLegNumber == 0) {\r\n            var jn = job.mobjobNumber;\r\n            if (this.myBcodeIsjobNum) {\r\n              //==== DATE HANDLING to get the connotenum to something like\r\n              //============= 1160615002020 ===========================\r\n              var jobBookDay = new Date(job.mobjobBookingDay);\r\n              var fy = jobBookDay.getFullYear() % 100;\r\n              var dm = jobBookDay.getDate() * 1;\r\n              var mi = jobBookDay.getMonth() + 1;\r\n              //The  leading zero is due to the barcode that gets generate needing to be an even number\r\n              dstring = \"01\" + fy + ((mi < 10) ? (\"0\" + mi) : mi) + ((dm < 10) ? (\"0\" + dm) : dm);\r\n              jn = (jn < 100000 && jn > 9999) ? (\"0\" + jn) : jn;\r\n              jn = (jn < 10000) ? (\"00\" + jn) : jn;\r\n              myconnote_num = dstring + jn;\r\n            }\r\n            else {\r\n              //Connote num stored here\r\n              myconnote_num = job.mobjobAddrExtras;\r\n            }\r\n            bchSession.bchEventSubtype = 'N/A';\r\n\r\n            this.log.debug(\"Before checking Barcode against Job: \" + job.mobjobNumber + \" JobsConnoteNumber: \" + myconnote_num + ' Barcode: ' + this.bcode);\r\n            //Only Compare the length of myconnote_num eg so if Bcode was WXLGHHH01 and myconn is WXLGHHH then OK\r\n            if (myconnote_num.length > 1 && this.strncmp(myconnote_num, this.bcode, myconnote_num.length) == 0) {\r\n              this.log.debug('Scan OFF FOUND Barcode on Job:' + jn + \" On Date \" + myconnote_num);\r\n              foundJob = true;\r\n              //Should store the Pickup Leg of the Found Job\r\n              foundIdx = x;\r\n              foundJobNum = job.mobjobNumber;\r\n              foundJobDate = job.mobjobBookingDay;\r\n              matchedJobsPieces += job.mobjobJobPieces;\r\n              this.JobsPieces = matchedJobsPieces;\r\n              this.log.debug('Scan OFF recording JOb Index ' + foundIdx + 'Pieces now = ' + matchedJobsPieces);\r\n\r\n              fjobarr.push(foundIdx);\r\n              break; // No need to keep looking we have found the job for this barcode   \r\n            }\r\n          }\r\n        }\r\n        if (foundJob == false) {\r\n          bchSession.bchEventSubtype = 'ORPHAN';\r\n        }\r\n      }//SCAN OFF ELSE ENDS\r\n      this.log.info(\"About to save Barcode Hist Session for barcode \" + JSON.stringify(bchSession));\r\n      bchSession.save();\r\n      syncRequired++;\r\n    }\r\n\r\n    //Go through Jobs and attach signat and PODNAME where required\r\n    if (this.my_is_scan_on == false)  //ONLY FOR SCAN OFF\r\n    {\r\n      this.log.debug('Doing Job update for SCAN OFF Job foundJob = ' + foundJob);\r\n      if (foundJob) {\r\n        var fjobnum = 0;\r\n        //The list can array may have matched the same job number multiple times\r\n        var uniquearr = fjobarr.filter(function (item, i, ar) { return ar.indexOf(item) === i; });\r\n        //Go Thru the found Job Array\r\n        for (var li = 0; li < uniquearr.length; li++) {\r\n          var lfidx = uniquearr[li];\r\n          for (var x = 0; x < 2; x++) {\r\n            this.log.debug('In Job loop: x = ' + x);\r\n            var job = jobs[lfidx + x];\r\n            if (x == 0)\r\n              fjobnum = job.mobjobNumber;\r\n            this.log.debug('In Job loop: x = ' + x + ' jobnum = ' + job.mobjobNumber);\r\n            if (x == 1) {\r\n              if (fjobnum != job.mobjobNumber) {\r\n                this.log.debug('!!!!!!!!! JOb Number Mismatch Pup JOb ' + fjobnum + ' Del job ' + job.mobjobNumber);\r\n              }\r\n              else {\r\n                this.log.debug('In Job loop: x + 1 = ' + x + ' jobnum = ' + job.mobjobNumber);\r\n                job.mobjobSignat = signat || \"\";\r\n                if (podname) {\r\n                  job.mobjobPodName = podname;\r\n                  job.mobjobPodTime = new Date().toISOString();\r\n                }\r\n              }\r\n            }\r\n            job.mobjobStatus = 'DL';\r\n            job.save();     // save leg           \r\n          }\r\n        }\r\n      }\r\n      else {\r\n        var ltitle = 'ERROR';\r\n        var lmes = 'The Scan Off could not find a job that matched your barcodes';\r\n        let alert = this.alertCtrl.create({\r\n          title: ltitle,\r\n          subTitle: lmes,\r\n          buttons: ['Ok']\r\n        });\r\n        alert.present();\r\n      }\r\n    }//my_is_scan_on check for false ends here\r\n    this.finishSubmit(foundJob, syncRequired);\r\n  }//End of doSubmitWork()\r\n\r\n\r\n  finishSubmit = function (foundJob, syncRequired) {\r\n    if (foundJob == false) {\r\n      this.log.info(\"Been through all barcodes and Jobs and NOT FOUND CONNOTE ON ANY JOB \");\r\n    }\r\n\r\n    if (syncRequired) {\r\n      this.barcode_sync();\r\n      this.barcodeService.setSyncRequired(true);\r\n      this.barcodes = [];\r\n    }\r\n\r\n    if (this.platformReady.isPlatformReady()) {\r\n      if (this.useCipherlab) {\r\n        (<any>window).plugins.CipherlabRS30CordovaPlugin.destroy(function () { });\r\n      }\r\n    }\r\n    //this.app.getRootNav().setRoot(TabsPage);\r\n    //this.navCtrl.popToRoot();\r\n    this.t.select(0);\r\n\r\n  }//finishSubmit() ends here\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/barcode/barcode.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\n\r\ndeclare const lbclient: any;\r\n/*\r\n  Generated class for the BarcodeServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class BarcodeServiceProvider {\r\n  //When App starts Get from localstorage\r\n  syncrequired: any = localStorage.getItem('BARCODES_SYNC_REQD');\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'BackgroundGeolocationServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  apponline: any = true;\r\n  barcode_sync = lbclient.barcode_sync;\r\n\r\n  constructor(public http: Http, private pdaParams: PdaparamsServiceProvider,\r\n    private logger: LogServiceProvider, private sharedService: SharedServiceProvider) {\r\n    //console.log('Hello BarcodeServiceProvider Provider');\r\n    this.syncrequired = (this.syncrequired == \"true\");\r\n    this.sharedService.APP_ON_LINE.subscribe(event => {\r\n      this.syncrequired = localStorage.getItem('BARCODES_SYNC_REQD');\r\n      this.syncrequired = (this.syncrequired == \"true\");\r\n      this.apponline = localStorage.getItem('APP_CONECTIVITY');\r\n      this.apponline = (this.apponline == \"true\");\r\n      this.log.debug(\" APP_ON_LINE: Syncrequired = \" + this.syncrequired + \" AppOnline From LocaStorage = \" + this.apponline);\r\n\r\n      //If the last state from localstorage was offline the sync if required\r\n      if (this.syncrequired && this.apponline == false) {\r\n        this.log.debug(\" SYNC Required and apponline from LStorage is FALSE so will barcode_sync:\" + event);\r\n        this.barcode_sync();\r\n        localStorage.setItem('BARCODES_SYNC_REQD', 'false');\r\n      }\r\n\r\n      //Now Update Local Storage\r\n      this.apponline = true;\r\n      localStorage.setItem('APP_CONECTIVITY', this.apponline);\r\n    });\r\n    this.sharedService.APP_OFF_LINE.subscribe(event => {\r\n      this.apponline = false;\r\n      localStorage.setItem('APP_CONECTIVITY', this.apponline);\r\n    });\r\n\r\n  }//End of the constructor.\r\n\r\n  //This is called from BarcodeCtrl and will update Local Storage\r\n  setSyncRequired = (val) => {\r\n    localStorage.setItem('BARCODES_SYNC_REQD', val);\r\n    this.log.debug(\" setSyncRequired:\" + val);\r\n    this.syncrequired = val;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/barcode-service/barcode-service.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { GpsPage } from './gps';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GpsPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(GpsPage),\r\n  ],\r\n})\r\nexport class GpsPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/gps/gps.module.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { PdaPage } from './pda';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PdaPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(PdaPage),\r\n  ],\r\n})\r\nexport class PdaPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pda/pda.module.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { MsgsPage } from './msgs';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MsgsPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(MsgsPage),\r\n  ],\r\n})\r\nexport class MsgsPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/msgs/msgs.module.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ImagesPage } from './images';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ImagesPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ImagesPage),\r\n  ],\r\n})\r\nexport class ImagesPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/images/images.module.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { BarcodePage } from './barcode';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BarcodePage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(BarcodePage),\r\n  ],\r\n})\r\nexport class BarcodePageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/barcode/barcode.module.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { LoginPage } from './login';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(LoginPage),\r\n  ],\r\n  exports: [\r\n    LoginPage\r\n  ]\r\n})\r\nexport class LoginPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\r\nimport { Http } from '@angular/http';\r\n\r\n\r\n\r\nimport { MyApp } from './app.component';\r\n\r\n\r\n\r\nimport { IonicStorageModule } from '@ionic/storage';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { Device } from '@ionic-native/device';\r\nimport { Insomnia } from '@ionic-native/insomnia';\r\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation';\r\nimport { SignaturePadModule } from 'angular2-signaturepad';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport { DeviceFeedback } from '@ionic-native/device-feedback';\r\nimport { File } from '@ionic-native/file';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { Network } from '@ionic-native/network';\r\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\r\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\r\nimport { Media } from '@ionic-native/media';\r\nimport { Push } from '@ionic-native/push';\r\n\r\n\r\nimport { ChangeDisplayFromPipe } from '../pipes/change-display-from.pipe';\r\nimport { ChangeDisplaySvcPipe } from '../pipes/change-display-svc.pipe';\r\nimport { ChangeDisplayToPipe } from '../pipes/change-display-to.pipe';\r\nimport { DisplayStatusDetailPipe } from '../pipes/display-status-detail.pipe';\r\n\r\nimport { SDKBrowserModule } from '../../shared/sdk/index';\r\nimport { LoggerService } from '../../shared/sdk/services/custom/logger.service';\r\n\r\n\r\n\r\nimport { LoginServiceProvider } from '../providers/login-service/login-service';\r\nimport { ConfigServiceProvider } from '../providers/config-service/config-service';\r\nimport { CustomerconnServiceProvider } from '../providers/customerconn-service/customerconn-service';\r\nimport { PdaparamsServiceProvider } from '../providers/pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../providers/siteconfig-service/siteconfig-service';\r\nimport { SharedServiceProvider } from '../providers/shared-service/shared-service';\r\nimport { BaseServiceProvider } from '../providers/base-service/base-service';\r\nimport { UtilServiceProvider } from '../providers/util-service/util-service';\r\nimport { JseaServiceProvider } from '../providers/jsea-service/jsea-service';\r\nimport { MessageServiceProvider } from '../providers/message-service/message-service';\r\nimport { FixedQueueServiceProvider } from '../providers/fixed-queue-service/fixed-queue-service';\r\nimport { DeviceServiceProvider } from '../providers/device-service/device-service';\r\nimport { PlatformReadyServiceProvider } from '../providers/platform-ready-service/platform-ready-service';\r\nimport { BackgroundGeolocationServiceProvider } from '../providers/background-geolocation-service/background-geolocation-service';\r\nimport { GpsAuditServiceProvider } from '../providers/gps-audit-service/gps-audit-service';\r\nimport { LogServiceProvider } from '../providers/log-service/log-service';\r\nimport { JobServiceProvider } from '../providers/job-service/job-service';\r\nimport { EventServiceProvider } from '../providers/event-service/event-service';\r\nimport { WindowRefServiceProvider } from '../providers/window-ref-service/window-ref-service';\r\nimport { SodServiceProvider } from '../providers/sod-service/sod-service';\r\nimport { PushServiceProvider } from '../providers/push-service/push-service';\r\nimport { ExitServiceProvider } from '../providers/exit-service/exit-service';\r\nimport { GpsServiceProvider } from '../providers/gps-service/gps-service';\r\nimport { ErrorModalServiceProvider } from '../providers/error-modal-service/error-modal-service';\r\nimport { JobChangedServiceProvider } from '../providers/job-changed-service/job-changed-service';\r\nimport { ImageServiceProvider } from '../providers/image-service/image-service';\r\nimport { ImageFileServiceProvider } from '../providers/image-file-service/image-file-service';\r\nimport { DriverMessageServiceProvider } from '../providers/driver-message-service/driver-message-service';\r\nimport { ConnectivityMonitorProvider } from '../providers/connectivity-monitor/connectivity-monitor';\r\nimport { SyncServiceProvider } from '../providers/sync-service/sync-service';\r\nimport { JobReplicationServiceProvider } from '../providers/job-replication-service/job-replication-service';\r\nimport { BarcodeServiceProvider } from '../providers/barcode-service/barcode-service';\r\n\r\n\r\nimport { TabsPage } from '../pages/tabs/tabs';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { JobDetailsPageModule } from '../pages/job-details/job-details.module';\r\nimport { DevicePageModule } from '../pages/device/device.module';\r\nimport { GpsPageModule } from '../pages/gps/gps.module';\r\nimport { PdaPageModule } from '../pages/pda/pda.module';\r\nimport { JseaPageModule } from '../pages/jsea/jsea.module';\r\nimport { MsgsPageModule } from '../pages/msgs/msgs.module';\r\nimport { ImagesPageModule } from '../pages/images/images.module';\r\nimport { BarcodePageModule } from '../pages/barcode/barcode.module';\r\nimport { LoginPage } from '../pages/login/login';\r\nimport { LoginPageModule } from '../pages/login/login.module';\r\nimport { SignaturePage } from '../pages/signature/signature';\r\nimport { JobDetailNotesPageModule } from '../pages/job-detail-notes/job-detail-notes.module';\r\nimport { ImageTextPageModule } from '../pages/image-text/image-text.module';\r\nimport { ChangePageModule } from '../pages/change/change.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    TabsPage,\r\n    HomePage,\r\n    SignaturePage,\r\n    \r\n  \r\n    ChangeDisplayFromPipe,\r\n    ChangeDisplaySvcPipe,\r\n    ChangeDisplayToPipe,\r\n    DisplayStatusDetailPipe\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    SignaturePadModule,\r\n    IonicModule.forRoot(MyApp, {}, \n{\n  links: [\n    { loadChildren: '../pages/jsea/jsea.module#JseaPageModule', name: 'JseaPage', segment: 'jsea', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/image-text/image-text.module#ImageTextPageModule', name: 'ImageTextPage', segment: 'image-text', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/job-detail-notes/job-detail-notes.module#JobDetailNotesPageModule', name: 'JobDetailNotesPage', segment: 'job-detail-notes', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/job-details/job-details.module#JobDetailsPageModule', name: 'JobDetailsPage', segment: 'job-details', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/change/change.module#ChangePageModule', name: 'ChangePage', segment: 'change', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/device/device.module#DevicePageModule', name: 'DevicePage', segment: 'device', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/gps/gps.module#GpsPageModule', name: 'GpsPage', segment: 'gps', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/pda/pda.module#PdaPageModule', name: 'PdaPage', segment: 'pda', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/msgs/msgs.module#MsgsPageModule', name: 'MsgsPage', segment: 'msgs', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/images/images.module#ImagesPageModule', name: 'ImagesPage', segment: 'images', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/barcode/barcode.module#BarcodePageModule', name: 'BarcodePage', segment: 'barcode', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/login/login.module#LoginPageModule', name: 'LoginPage', segment: 'login', priority: 'low', defaultHistory: [] }\n  ]\n}),\r\n    SDKBrowserModule.forRoot(),\r\n    IonicStorageModule.forRoot(),\r\n    LoginPageModule,\r\n    BarcodePageModule,\r\n    ChangePageModule,\r\n    DevicePageModule,\r\n    GpsPageModule,\r\n    ImageTextPageModule,\r\n    ImagesPageModule,\r\n    JobDetailNotesPageModule,\r\n    JobDetailsPageModule,\r\n    JseaPageModule,\r\n    MsgsPageModule,\r\n    PdaPageModule\r\n\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    TabsPage,\r\n    HomePage,\r\n    LoginPage,\r\n    SignaturePage,\r\n\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    { provide: ErrorHandler, useClass: IonicErrorHandler },\r\n    LoginServiceProvider,\r\n    ConfigServiceProvider,\r\n    CustomerconnServiceProvider,\r\n    PdaparamsServiceProvider,\r\n    SiteconfigServiceProvider,\r\n    SharedServiceProvider,\r\n    BaseServiceProvider,\r\n    UtilServiceProvider,\r\n    JseaServiceProvider,\r\n    MessageServiceProvider,\r\n    FixedQueueServiceProvider,\r\n    DeviceServiceProvider,\r\n    PlatformReadyServiceProvider,\r\n    BackgroundGeolocationServiceProvider,\r\n    Device,\r\n    LogServiceProvider,\r\n    LoggerService,\r\n    GpsAuditServiceProvider,\r\n    BackgroundGeolocation,\r\n    Insomnia,\r\n    JobServiceProvider,\r\n    EventServiceProvider,\r\n    WindowRefServiceProvider,\r\n    SodServiceProvider,\r\n    PushServiceProvider,\r\n    ExitServiceProvider,\r\n    GpsServiceProvider,\r\n    Geolocation,\r\n    ErrorModalServiceProvider,\r\n    JobChangedServiceProvider,\r\n    DeviceFeedback,\r\n    ImageServiceProvider,\r\n    ImageFileServiceProvider,\r\n    File,\r\n    Camera,\r\n    Network,\r\n    DriverMessageServiceProvider,\r\n    BarcodeScanner,\r\n    InAppBrowser,\r\n    FileTransfer,\r\n    FileTransferObject,\r\n    ConnectivityMonitorProvider,\r\n    SyncServiceProvider,\r\n    Media,\r\n    JobReplicationServiceProvider,\r\n    BarcodeServiceProvider,\r\n    Push\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/* tslint:disable */\r\nimport * as io from 'socket.io-client';\r\n/**\r\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\r\n* @module SocketBrowser\r\n* @license MIT\r\n* @description\r\n* This module handle socket connections for web browsers, it will be DI Swapped\r\n* depending on the platform environment.\r\n* This module will be generated when the -d ng2web flag is set\r\n**/\r\nexport class SocketBrowser {\r\n  /**\r\n   * @method connect\r\n   * @param {string} url URL path to connect with the server.\r\n   * @param {any} options Any socket.io v1 =< valid options\r\n   * @return {any} Not currently a socket.io-client for web Typings implemented.\r\n   * @description\r\n   * This method will return a valid socket connection.  \r\n   **/\r\n  connect(url: string, options: any): any {\r\n    return io(url, options);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/sockets/socket.browser.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 444\n// module chunks = 0","/* tslint:disable */\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nexport class IO {\r\n\r\n  private socket: any;\r\n  private observables: any = {};\r\n\r\n  constructor(socket: any) { this.socket = socket; }\r\n\r\n  emit(event: string, data: any): void {\r\n    this.socket.emit('ME:RT:1://event', {\r\n        event : event,\r\n        data  : data\r\n    });\r\n  }\r\n\r\n  on(event: string): Observable<any> {\r\n    if (this.observables[event]) { return this.observables[event]; }\r\n    let subject: Subject<any> = new Subject<any>();\r\n    this.socket.on(event, (res: any) => subject.next(res));\r\n    this.observables[event] = subject.asObservable();\r\n    return this.observables[event];\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/core/io.service.ts","/* tslint:disable */\r\nimport { FireLoopRef } from './index';\r\n\r\nexport class FireLoop {\r\n\r\n  private references: any = {};\r\n\r\n  constructor(private socket: any, private models: { get: Function }) {}\r\n\r\n  public ref<T>(model: any): FireLoopRef<T> {\r\n    let name: string = model.getModelName();\r\n    model.models = this.models;\r\n    this.references[name] = new FireLoopRef<T>(model, this.socket);\r\n    return this.references[name];\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/FireLoop.ts","/* tslint:disable */\r\nimport 'rxjs/add/observable/merge';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/merge';\r\nimport { LoopBackFilter, StatFilter } from './index';\r\nimport { SocketConnection } from '../sockets/socket.connections';\r\n/**\r\n * @class FireLoopRef<T>\r\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n * @license MIT\r\n * @description\r\n * This class allows to create FireLoop References which will be in sync with\r\n * Server. It also allows to create FireLoop Reference Childs, that allows to\r\n * persist data according the generic model relationships.\r\n **/\r\nexport class FireLoopRef<T> {\r\n  // Reference ID\r\n  private id: number = this.buildId();\r\n  // Model Instance (For child references, empty on root references)\r\n  private instance: any;\r\n  // Model Childs\r\n  private childs: any = {};\r\n  // Disposable Events\r\n  private disposable: { [key: string]: any } = {};\r\n  /**\r\n  * @method constructor\r\n  * @param {any} model The model we want to create a reference\r\n  * @param {SocketConnection} socket Socket connection to handle events\r\n  * @param {FireLoopRef<any>} parent Parent FireLoop model reference\r\n  * @param {string} relationship The defined model relationship\r\n  * @description\r\n  * The constructor will receive the required parameters and then will register this reference\r\n  * into the server, needed to allow multiple references for the same model.\r\n  * This ids are referenced into this specific client connection and won't have issues\r\n  * with other client ids.\r\n  **/\r\n  constructor(\r\n    private model: any,\r\n    private socket: SocketConnection,\r\n    private parent: FireLoopRef<any> = null,\r\n    private relationship: string = null\r\n  ) {\r\n    this.socket.emit(\r\n      `Subscribe.${!parent ? model.getModelName() : parent.model.getModelName()}`,\r\n      { id: this.id, scope: model.getModelName(), relationship: relationship }\r\n    );\r\n    return this;\r\n  }\r\n  /**\r\n  * @method dispose\r\n  * @return {void}\r\n  * @description\r\n  * This method is super important to avoid memory leaks in the server.\r\n  * This method requires to be called on components destroy\r\n  *\r\n  * ngOnDestroy() {\r\n  *  this.someRef.dispose() \r\n  * }\r\n  **/\r\n  public dispose(): void {\r\n    const subscription = this.operation('dispose', {}).subscribe(() => {\r\n      Object.keys(this.disposable).forEach((channel: string) => {\r\n        this.socket.removeListener(channel, this.disposable[channel]);\r\n        this.socket.removeAllListeners(channel);\r\n      });\r\n      subscription.unsubscribe();\r\n    });\r\n  }\r\n  /**\r\n  * @method upsert\r\n  * @param {T} data Persisted model instance\r\n  * @return {Observable<T>}\r\n  * @description\r\n  * Operation wrapper for upsert function.\r\n  **/\r\n  public upsert(data: T): Observable<T> {\r\n    return this.operation('upsert', data);\r\n  }\r\n  /**\r\n  * @method create\r\n  * @param {T} data Persisted model instance\r\n  * @return {Observable<T>}\r\n  * @description\r\n  * Operation wrapper for create function.\r\n  **/\r\n  public create(data: T): Observable<T> {\r\n    return this.operation('create', data);\r\n  }\r\n  /**\r\n  * @method remove\r\n  * @param {T} data Persisted model instance\r\n  * @return {Observable<T>}\r\n  * @description\r\n  * Operation wrapper for remove function.\r\n  **/\r\n  public remove(data: T): Observable<T> {\r\n    return this.operation('remove', data);\r\n  }\r\n  /**\r\n  * @method remote\r\n  * @param {string} method Remote method name\r\n  * @param {any[]=} params Parameters to be applied into the remote method\r\n  * @param {boolean} broadcast Flag to define if the method results should be broadcasted\r\n  * @return {Observable<any>}\r\n  * @description\r\n  * This method calls for any remote method. It is flexible enough to\r\n  * allow you call either built-in or custom remote methods.\r\n  *\r\n  * FireLoop provides this interface to enable calling remote methods\r\n  * but also to optionally send any defined accept params that will be\r\n  * applied within the server.\r\n  **/\r\n  public remote(method: string, params?: any[], broadcast: boolean = false): Observable<any> {\r\n    return this.operation('remote', { method, params, broadcast });\r\n  }\r\n  /**\r\n  * @method onRemote\r\n  * @param {string} method Remote method name\r\n  * @return {Observable<any>}\r\n  * @description\r\n  * This method listen for public broadcasted remote method results. If the remote method\r\n  * execution is not public only the owner will receive the result data.\r\n  **/\r\n  public onRemote(method: string): Observable<any> {\r\n    let event: string = 'remote';\r\n    if (!this.relationship) {\r\n      event = `${this.model.getModelName()}.${event}`;\r\n    } else {\r\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\r\n    }\r\n    return this.broadcasts(event, {});\r\n  }\r\n  /**\r\n  * @method on\r\n  * @param {string} event Event name\r\n  * @param {LoopBackFilter} filter LoopBack query filter\r\n  * @return {Observable<T>}\r\n  * @description\r\n  * Listener for different type of events. Valid events are:\r\n  *   - change (Triggers on any model change -create, update, remove-)\r\n  *   - value (Triggers on new entries)\r\n  *   - child_added (Triggers when a child is added)\r\n  *   - child_updated (Triggers when a child is updated)\r\n  *   - child_removed (Triggers when a child is removed)\r\n  **/\r\n  public on(event: string, filter: LoopBackFilter = { limit: 100, order: 'id DESC' }): Observable<T | T[]> {\r\n    if (event === 'remote') {\r\n      throw new Error('The \"remote\" event is not allowed using \"on()\" method, use \"onRemote()\" instead');\r\n    }\r\n    let request: any;\r\n    if (!this.relationship) {\r\n      event = `${this.model.getModelName()}.${event}`;\r\n      request = { filter };\r\n    } else {\r\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\r\n      request = { filter, parent: this.parent.instance };\r\n    }\r\n    if (event.match(/(value|change|stats)/)) {\r\n      return Observable.merge(\r\n        this.pull(event, request),\r\n        this.broadcasts(event, request)\r\n      );\r\n    } else {\r\n      return this.broadcasts(event, request);\r\n    }\r\n  }\r\n  /**\r\n  * @method stats\r\n  * @param {LoopBackFilter=} filter LoopBack query filter\r\n  * @return {Observable<T>}\r\n  * @description\r\n  * Listener for real-time statistics, will trigger on every\r\n  * statistic modification.\r\n  * TIP: You can improve performance by adding memcached to LoopBack models.\r\n  **/\r\n  public stats(filter?: StatFilter): Observable<T | T[]> {\r\n    return this.on('stats', filter);\r\n  }\r\n  /**\r\n  * @method make\r\n  * @param {any} instance Persisted model instance reference\r\n  * @return {Observable<T>}\r\n  * @description\r\n  * This method will set a model instance into this a new FireLoop Reference.\r\n  * This allows to persiste parentship when creating related instances.\r\n  *\r\n  * It also allows to have multiple different persisted instance references to same model.\r\n  * otherwise if using singleton will replace a previous instance for a new instance, when\r\n  * we actually want to have more than 1 instance of same model.\r\n  **/\r\n  public make(instance: any): FireLoopRef<T> {\r\n    let reference: FireLoopRef<T> = new FireLoopRef<T>(this.model, this.socket);\r\n    reference.instance = instance;\r\n    return reference;\r\n  }\r\n  /**\r\n  * @method child\r\n  * @param {string} relationship A defined model relationship\r\n  * @return {FireLoopRef<T>}\r\n  * @description\r\n  * This method creates child references, which will persist related model\r\n  * instances. e.g. Room.messages, where messages belongs to a specific Room.\r\n  **/\r\n  public child<T>(relationship: string): FireLoopRef<T> {\r\n    // Return singleton instance\r\n    if (this.childs[relationship]) { return this.childs[relationship]; }\r\n    // Try to get relation settings from current model\r\n    let settings: any = this.model.getModelDefinition().relations[relationship];\r\n    // Verify the relationship actually exists\r\n    if (!settings) {\r\n      throw new Error(`Invalid model relationship ${this.model.getModelName()} <-> ${relationship}, verify your model settings.`);\r\n    }\r\n    // Verify if the relationship model is public\r\n    if (settings.model === '') {\r\n      throw new Error(`Relationship model is private, cam't use ${relationship} unless you set your model as public.`);\r\n    }\r\n    // Lets get a model reference and add a reference for all of the models\r\n    let model: any = this.model.models.get(settings.model);\r\n    model.models = this.model.models;\r\n    // If everything goes well, we will store a child reference and return it.\r\n    this.childs[relationship] = new FireLoopRef<T>(model, this.socket, this, relationship);\r\n    return this.childs[relationship];\r\n  }\r\n  /**\r\n  * @method pull\r\n  * @param {string} event Event name\r\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\r\n  * @return {Observable<T>}\r\n  * @description\r\n  * This method will pull initial data from server\r\n  **/\r\n  private pull(event: string, request: any): Observable<T> {\r\n    let sbj: Subject<T> = new Subject<T>();\r\n    let that: FireLoopRef<T> = this;\r\n    let nowEvent: any = `${event}.pull.requested.${this.id}`;\r\n    this.socket.emit(`${event}.pull.request.${this.id}`, request);\r\n    function pullNow(data: any) {\r\n      if (that.socket.removeListener) {\r\n        that.socket.removeListener(nowEvent, pullNow);\r\n      }\r\n      sbj.next(data);\r\n    };\r\n    this.socket.on(nowEvent, pullNow);\r\n    return sbj.asObservable();\r\n  }\r\n  /**\r\n  * @method broadcasts\r\n  * @param {string} event Event name\r\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\r\n  * @return {Observable<T>}\r\n  * @description\r\n  * This will listen for public broadcasts announces and then request\r\n  * for data according a specific client request, not shared with other clients.\r\n  **/\r\n  private broadcasts(event: string, request: any): Observable<T> {\r\n    let sbj: Subject<T> = new Subject<T>();\r\n    let channels: { announce: string, broadcast: string } = {\r\n      announce: `${event}.broadcast.announce.${this.id}`,\r\n      broadcast: `${event}.broadcast.${this.id}`\r\n    };\r\n    let that = this;\r\n    // Announces Handler\r\n    this.disposable[channels.announce] = function (res: T) {\r\n      that.socket.emit(`${event}.broadcast.request.${that.id}`, request)\r\n    };\r\n    // Broadcasts Handler\r\n    this.disposable[channels.broadcast] = function (data: any) {\r\n      sbj.next(data);\r\n    };\r\n    this.socket.on(channels.announce, this.disposable[channels.announce]);\r\n    this.socket.on(channels.broadcast, this.disposable[channels.broadcast]);\r\n    return sbj.asObservable();\r\n  }\r\n  /**\r\n  * @method operation\r\n  * @param {string} event Event name\r\n  * @param {any} data Any type of data sent to the server\r\n  * @return {Observable<T>}\r\n  * @description\r\n  * This internal method will run operations depending on current context \r\n  **/\r\n  private operation(event: string, data: any): Observable<T> {\r\n    if (!this.relationship) {\r\n      event = `${this.model.getModelName()}.${event}.${this.id}`;\r\n    } else {\r\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}.${this.id}`;\r\n    }\r\n    let subject: Subject<T> = new Subject<T>();\r\n    let config: { data: any, parent: any } = {\r\n      data,\r\n      parent: this.parent && this.parent.instance ? this.parent.instance : null\r\n    };\r\n    this.socket.emit(event, config);\r\n    let resultEvent: string = '';\r\n    if (!this.relationship) {\r\n      resultEvent = `${this.model.getModelName()}.value.result.${this.id}`;\r\n    } else {\r\n      resultEvent = `${this.parent.model.getModelName()}.${this.relationship}.value.result.${this.id}`;\r\n    }\r\n    this.socket.on(resultEvent, (res: any) => {\r\n      if (res.error) {\r\n        subject.error(res);\r\n      } else {\r\n        subject.next(res);\r\n      }\r\n    });\r\n    if (event.match('dispose')) {\r\n      setTimeout(() => subject.next());\r\n    }\r\n    // This event listener will be wiped within socket.connections\r\n    this.socket.sharedObservables.sharedOnDisconnect.subscribe(() => subject.complete());\r\n    return subject.asObservable().catch((error: any) => Observable.throw(error));\r\n  }\r\n  /**\r\n  * @method buildId\r\n  * @return {number}\r\n  * @description\r\n  * This internal method build an ID for this reference, this allows to have\r\n  * multiple references for the same model or relationships.\r\n  **/\r\n  private buildId(): number {\r\n    return Date.now() + Math.floor(Math.random() * 100800) *\r\n      Math.floor(Math.random() * 100700) *\r\n      Math.floor(Math.random() * 198500);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/FireLoopRef.ts","import { Injectable } from '@angular/core';\r\nimport { AlertController, ActionSheetController } from 'ionic-angular';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport { UtilServiceProvider } from '../util-service/util-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\n\r\n\r\n/*\r\n  Generated class for the BaseServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\ninterface LooseObject {\r\n  [key: string]: any\r\n}\r\n\r\n@Injectable()\r\nexport class BaseServiceProvider {\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'BaseServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  mystr;\r\n  errorMessages = [];\r\n  errorObj = <any>{};\r\n  bNewItem: boolean = false;\r\n  results;\r\n  addProp: LooseObject;\r\n  base = {\r\n    \"bDataChanged\": false,\r\n    // For Edit Forms, this could be used to display/hide a \"Save\" Button\r\n    \"currentItem\": null,\t\t// Set by derived Class\r\n    \"currentData\": null \t\t// Set by derived Class\r\n  };\r\n  bDataChanged = false;\r\n  // For Edit Forms, this could be used to display/hide a \"Save\" Button\r\n  currentItem = null;\t\t// Set by derived Class\r\n  currentData = null;\t\t// Set by derived Class\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider,\r\n    private util: UtilServiceProvider,\r\n    private logger: LogServiceProvider, private alertCtrl: AlertController,\r\n    private sharedService: SharedServiceProvider,\r\n    public actionSheetCtrl: ActionSheetController) {\r\n    //console.log('Hello BaseServiceProvider Provider');\r\n    this.bNewItem = this.sharedService.getBNewItem();\r\n    this.sharedService.setDesktopBrowserScrolling(true);\r\n\r\n  }\r\n\r\n  //\tThe Forms in this App are controlled by extra Attributes defined\r\n  //\twithin the LoopBack Data Model Properties and control the display\r\n  //\tof these Properties within their Display and Edit Forms  \r\n  getModelMetadata = (model, rootScopeProperty) => {\r\n\r\n    if (rootScopeProperty === \"jobMetadata\" && !(this.sharedService.getJobMetaData() === undefined)) {\r\n      this.sharedService.jobMetaDataLoadedSubject.next(true);\r\n      return this.sharedService.getJobMetaData();\r\n    }\r\n    else if (rootScopeProperty === \"historyMetadata\" && !this.sharedService.getHistoryMetadata() === undefined) {\r\n      return this.sharedService.getHistoryMetadata();\r\n    }\r\n    if (model.metadata)\r\n      model.metadata((dummy, results) => {\r\n        this.results = results;\r\n        // \"index\" will be used for Property Display Order\r\n        for (var property in this.results.properties) {\r\n          this.results.properties[property].index =\r\n            this.results.properties[property].index || 1000000000;\t\t// sets index if currently no value\r\n        }//end of for\r\n        // Sort the Properties by \"index\"\r\n        this.results.properties.sort(sortByindex);\r\n        function sortByindex(a, b) {\r\n          return a.index - b.index;\r\n        }\r\n        if (rootScopeProperty === \"jobMetadata\") {\r\n          this.sharedService.setJobMetaData(this.results);\r\n        }\r\n        else if (rootScopeProperty === \"historyMetadata\")\r\n          this.sharedService.setHistoryMetaData(this.results);\r\n        this.sharedService.jobMetaDataLoadedSubject.next(true);\r\n      },\r\n        error => { this.log.debug(error) });\r\n\r\n  }//getModelMetadata(model, rootScopeProperty, cb) ends here.\r\n\r\n\r\n  // If some Properties within the Model have \"includeInHeader\" attributes,\r\n  // the Labels and Values will be concatanated into a meaningful description\r\n  // of the Entity...\r\n  generateHeaderForModelInstance = (item, metadata, bLabels) => {\r\n    this.mystr = 'generateHeaderForModelInstance';\r\n    this.log.debug(this.mystr);\r\n    if (!metadata || !item) {\r\n      return '';\r\n    }\r\n    var header = '';\r\n    if (Object.keys(metadata.properties).length > 0) {\r\n      header = (metadata.properties[0].label || '') + ' : ' +//PROBLEM HERE\r\n        item[metadata.properties[0].name];\r\n    }\r\n    var headerProperties = this.util.findArrayItemsByKey(metadata.properties, \"includeInHeader\", true);\r\n    if (headerProperties.length > 0) {\r\n      header = '';\r\n      for (var i = 0; i < headerProperties.length; i++) {\r\n        if (i > 0) {\r\n          header += ' ';\r\n        }\r\n        if (bLabels !== false) {\r\n          header += (headerProperties[i].label || '') + ':' + item[headerProperties[i].name];\r\n        }\r\n        else {\r\n          header += item[headerProperties[i].name];\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      var headerProperty = this.util.findArrayItemByKey(metadata.properties, \"defaultHeader\", true);\r\n      if (headerProperty) {\r\n        header = (headerProperty.label || '') + ' : ' + item[headerProperty.name];\r\n      }\r\n    }\r\n    return header;\r\n  }//End of generateHeaderForModelInstance()\r\n\r\n  // The \"item\" argument represents the Raw Data Values for the Entity\r\n  // The \"metadata\" argument represents the Rules of how to Render the Values\r\n  // The \"bNew\" argument directs us to created a new Default Entity\r\n  combineValuesAndLabels = (item, metadata: any, bNew) => {\r\n    var data = [];\r\n    var mystr = 'combineValuesAndLabels';\r\n    this.log.debug(mystr);\r\n    //Will register if not already registered\r\n    this.convertDates(item, metadata);\r\n    var curProp;\r\n    for (var iac = 0; iac < item.length; iac++)    //LEG LOOP EACH JOB LEG\r\n    {\r\n      var interimitem = item[iac];  //Just Get one of the Jobs/Leg\r\n      if (this.pdaParams.experimental)\r\n        this.log.debug(\"LegLoop:START:\" + iac);\r\n      for (var i = 0; i < Object.keys(metadata.properties).length; i++) {\t //Metadata LOOP loops thru each column\r\n        if (this.pdaParams.experimental)\r\n          this.log.debug(\"Metadata:START:\" + i);\r\n        if (i === 0) {\r\n          metadata.properties[i].index = 1;\r\n          // Give the First Property a predictable Index Value\r\n        }\r\n        curProp = metadata.properties[i];\r\n        var property = interimitem[curProp.name];\r\n        if (property !== undefined) {\r\n          // These properties are referenced in the jobDetail template as e.g. property.legid\r\n          this.addProp = {\r\n            label: (curProp.label || curProp.name),\r\n            value: property,\r\n            id: curProp.id,\r\n            index: curProp.index,\r\n            linkPattern: curProp.linkPattern,\r\n            required: curProp.required,\r\n            property: curProp.name,\r\n            centered: curProp.centered || false,\r\n            strong: curProp.strong || false,\r\n            type: (curProp.inputType || ''),\r\n            numlegs: interimitem.mobjobTotalLegs,\r\n            legid: interimitem.mobjobSeq,\r\n            legStatus: interimitem.mobjobStatus,\r\n            basejob: interimitem.mobjobBasejobNum\r\n          }\r\n          // Ionic / Angular now have Data and Metadata combined for rendering...\r\n          if (curProp.generateNewID) {\r\n            this.addProp.generateNewID = curProp.generateNewID;\r\n            // Some Database Tables may not be set up to auto-generate\r\n            // new Primary Keys, so this will do it for them.\r\n            // NOTE:  THIS IS A HACK THAT USING THE CURRENT Date/Time...\r\n          }\r\n\r\n          if (curProp.omitFromForm) {\r\n            this.addProp.omitFromForm = curProp.omitFromForm;\r\n            // This can be used to leave a Property off specific forms\r\n            // based on Logic within the Template\r\n          }\r\n\r\n          if (curProp.lastModified) {\r\n            this.addProp.lastModified = curProp.lastModified;\r\n            // To make sure we update the lastModified on upsert...\r\n          }\r\n\r\n          if (curProp.inputType === 'enum') {\r\n            //console.log(\"curProp.inputType is enum for curProp::\" + JSON.stringify(curProp));\r\n            this.addProp.enum = curProp.enum;\r\n            var currentEnumValue = this.util.findArrayItemByKey(this.addProp.enum, \"value\", property);\r\n            if (!currentEnumValue) {\r\n              currentEnumValue = this.addProp.enum[0];\r\n            }\r\n            this.addProp.enumValue = currentEnumValue;\r\n            this.addProp.enumValue = Object.assign({}, currentEnumValue);\r\n          }\r\n          data.push(this.addProp);\r\n        }\r\n\r\n        if (this.pdaParams.experimental)\r\n          this.log.debug(\"Metadata:END:\" + i);\r\n      }   // Metadata End FOR\r\n\r\n      if (this.pdaParams.experimental)\r\n        this.log.debug(\"LegLoop:END:\" + iac);\r\n    } //Item/Job END FOR    \r\n    return data;\r\n  }//combineValuesAndLabels ends here\r\n\r\n  // Generate a Primary Key for the new Entity Instance if necessary\r\n  // and then create a new Instance with Default Values if provided.\r\n  createNewItem = (item, metadata) => {\r\n    var idProperty = this.util.findArrayItemByKey(metadata.properties, \"id\", true);\r\n    if (idProperty && (idProperty.generateNewID)) {\r\n      var newID = new Date().getTime().toString();\r\n      newID = (new Date().getTime() % 2) + newID.substr(newID.length - 8) + (new Date().getTime() % 2);\r\n      item[idProperty.name] = newID;\r\n      // This is a HACK to generate an almost certain Unique Key...\r\n    }\r\n    else {\r\n      item[idProperty.name] = 'New';\r\n    }\r\n    var data = this.combineValuesAndLabels(item, metadata, true);\r\n    return data;\r\n  }//createNewItem() ends here\r\n\r\n  // Ionic Date Input will ONLY take the \"YYYY-MM-DD\"\r\n  convertDates = (item, metadata) => {  \r\n    for (var property in item) {\r\n      var metaProperty = this.util.findArrayItemByKey(metadata.properties, \"name\", property);\r\n      if ((item[property]) && (metaProperty) && (metaProperty.type === 'Date')) {\r\n        item[property] = this.convertDate(item[property]);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Assume an ISO Date Format is passed in...\r\n  convertDate = (dateTime) => {\r\n    //console.log(\"Start date:\"+dateTime);\r\n    var dateTimeString = dateTime.toString();\r\n    var tnum = dateTimeString.indexOf('T');\r\n    if (tnum > 0) {\r\n      dateTime = dateTimeString.substring(0, tnum + 1);\r\n    }   \r\n    return dateTime;\r\n  }\r\n\r\n  // Return a Boolean if any Data Item in the Form differs from the\r\n  // Data originally loaded.  This is called from \"onChanged\" Events\r\n  checkIfDataChanged = (item, data) => {\r\n    if (!item || !data) {\r\n      return false;\r\n    }\r\n    for (var property in item) {\r\n      var metaProperty = this.util.findArrayItemByKey(data, \"property\", property);\r\n      if (metaProperty && (item[property] !== metaProperty.value)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // If some operation, typically Creates or Updates, fails,\r\n  // This will let the User know what happened.\r\n  // This is CURRENTLY displaying the Raw Error Messages\r\n  // TODO: Map known errors to more User Friendly Messages.\r\n  ErrorPopup = (err, title, data) => {\r\n    var messages = err.data.error.details;\r\n    if (messages) {\r\n      messages = messages.messages;\r\n    }\r\n    else {\r\n      messages = { \"Error\": err.data.error.message };\r\n      if (!messages) {\r\n        messages = { \"Error\": err.data.error };\r\n      }\r\n      else {\r\n        messages = { \"Error\": \"Unknown Failure\" };\r\n      }\r\n    }\r\n\r\n    for (var message in messages) {\r\n      this.errorObj = { name: message, message: messages[message], label: message }\r\n      var metaProperty = this.util.findArrayItemByKey(data, \"property\", message);\r\n      if (metaProperty) {\r\n        this.errorObj.label = metaProperty.label || this.errorObj.label;\r\n      }\r\n      this.errorMessages.push(this.errorObj);\r\n    }\r\n    var myPopup = <any>{};\r\n    myPopup = this.alertCtrl.create({});\r\n    myPopup.setTitle(title);\r\n    for (let mesg of this.errorMessages) {\r\n      myPopup.setSubtitle(mesg.label);\r\n      myPopup.message(mesg.message);\r\n      myPopup.addButton(\r\n        {\r\n          text: 'OK'\r\n        });\r\n    }//End of for loop\r\n    myPopup.present();\r\n\r\n  }//ErrorPopup ends here\r\n\r\n  // \"updateItem\" will handle both Inserts and Updates\r\n  updateItem = (item, data, model, cb, bNew) => {\r\n    // If we didn't have to generate a Primary Key for a New Entity,\r\n    // we delete the \"id\" property to ensure the DB Generates it as needed.\r\n    if (bNew) {\r\n      var idProperty = this.util.findArrayItemByKey(data, \"id\", true);\r\n      if (idProperty) {\r\n        if (!idProperty.generateNewID) {\r\n          delete item[idProperty.property];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Because the UX displayed the Values controlled with the Metadata,\r\n    // Let's extract the Values back into a Clean Item Object...\r\n    for (var property in item) {\r\n      var metaProperty = this.util.findArrayItemByKey(data, \"property\", property);\r\n      if (metaProperty && (item[property] !== metaProperty.value)) {\r\n        item[property] = metaProperty.value;\r\n      }\r\n    }\r\n\r\n    // If there is a \"lastModified\" Property, update it to \"NOW\"...\r\n\r\n    var lastModified = this.util.findArrayItemByKey(data, \"lastModified\", true);\r\n    if (lastModified) {\r\n      item[lastModified.property] = new Date().toISOString();\r\n    }\r\n\r\n\r\n    // Insert or Update\r\n    model.upsert(item) // Method generated by the LoopBack Angular SDK\r\n      .$promise\r\n      .then(function (results) {\r\n        cb(results);\r\n        // The Callback will usually do something like refresh the View\r\n      }, function (err) {\r\n        this.ErrorPopup(err, 'Save Error(s)', data);\r\n        // Display the Error(s)\r\n      });\r\n  }//updateItem ends here\r\n\r\n  // Delete an Entity\r\n  deleteItem = (id, model, cb) => {\r\n    model.deleteById({ \"id\": id })  // Method generated by the LoopBack Angular SDK\r\n      .$promise\r\n      .then(function (results) {\r\n        cb(results);\r\n      }, function (err) {\r\n        this.ErrorPopup(err, 'Deletion Error(s)', this.data);\r\n        // Display the Error(s)\r\n      });\r\n  }//deleteItem \r\n\r\n  // Most Views will have to Display some sort of Context Menu and\r\n  // this is the Base Helper Function which uses $ionicActionSheet\r\n  // to reveal this Context Menu from the Bottom of the Screen.\r\n  showActionSheetBase = (label, buttons, cb, bDelete) => {\r\n    // Show the action sheet\r\n    var sheetParams = {\r\n      buttons: buttons,\t\t\t\t\t\t// Different for each View\r\n      destructiveText: 'Delete',\t// Delete the Entity being Displayed\r\n      titleText: label,\t\t\t\t\t\t// Gives some Context to the Menu\r\n      cancelText: 'Hide Menu',\t\t// Click to Hide the Menu\r\n      cancel: function () { },\t\t\t// Do nothing extra on Cancel\r\n      buttonClicked: function (index) {\r\n        var command = buttons[index].command;\r\n        if (cb) {\r\n          cb(command);\t\t\t\t\t\t// Just let the View know the chosen\r\n        }\t\t\t\t\t\t\t\t\t\t\t\t\t// Action to perform...\r\n        return true;\r\n      },\r\n      destructiveButtonClicked: function () {\r\n        if (cb) {\r\n          cb(\"delete\");\t\t\t\t\t\t// \"delete\" is the Action for \"Delete\"\r\n        }\r\n        return true;\r\n      }\r\n    }//End of sheetParams\r\n\r\n    let actionSheet = this.actionSheetCtrl.create(sheetParams);\r\n\r\n    if (bDelete === false) {\r\n      delete sheetParams.destructiveText;\r\n      // if \"delete\" doesn't mean anything in this Context\r\n    }\r\n\r\n    // Let Ionic display the Menu\r\n    actionSheet.present();\r\n\r\n    //$ionicActionSheet.show(sheetParams);\r\n  }//showActionSheetBase ends here\r\n\r\n\r\n\r\n  // Enum Selects need special Handling onChange\r\n  // Since their Label may not be equivalent to the mapped Value\r\n  // and the Enum Array Objects cannot serve as the actual Property Value\r\n  multiSelectChange = (property) => {\r\n    if (this.bNewItem) {\r\n      this.base.bDataChanged = true; // New Entities should always allow \"save\"\r\n      return;\r\n    }\r\n    property.value = property.enumValue.value;\r\n    // Set the Actual Property Value from the Chosen Enum Label...\r\n    this.base.bDataChanged = this.checkIfDataChanged(this.base.currentItem, this.base.currentData);\r\n    // Check if anything has changed from the currentItem...\r\n  }\r\n\r\n  // This is actually done on keyup for standard Input Fields\r\n  // Since onChange only triggers when the New Value differs \r\n  // from the Original Value.\r\n  dataChanged = (evt, property) => {\r\n    if (this.bNewItem) {\r\n      this.base.bDataChanged = true; // New Entities should always allow \"save\"\r\n      return;\r\n    }\r\n\r\n    this.base.bDataChanged = this.checkIfDataChanged(this.base.currentItem, this.base.currentData);\r\n    // Check if anything has changed from the currentItem...\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/base-service/base-service.ts","/* tslint:disable */\r\nexport * from './auth.service';\r\nexport * from './error.service';\r\nexport * from './search.params';\r\nexport * from './base.service';\r\nexport * from './real.time';\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/core/index.ts","/* tslint:disable */\r\nexport * from './Job';\r\n\r\nexport * from './TpmPdaController';\r\nexport * from './GpsHistory';\r\nexport * from './Application';\r\nexport * from './Installation';\r\nexport * from './Notification';\r\nexport * from './Push';\r\nexport * from './Mobile_event';\r\nexport * from './SiteConfig';\r\nexport * from './DespatchToDriverMessages';\r\nexport * from './JseaDriverQuestions';\r\nexport * from './JseaDriverAnswers';\r\n\r\nexport * from './Photocontainer';\r\nexport * from './Image';\r\nexport * from './BarcodeHist';\r\n\r\nexport * from './SDKModels';\r\nexport * from './logger.service';\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/index.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n/*\r\n  Generated class for the UtilServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class UtilServiceProvider {\r\n\r\n  oneDay = 60 * 60 * 24 * 1000;\r\n  scrollBarWidth = null;\r\n\r\n  constructor(public http: Http) {\r\n    //console.log('Hello UtilServiceProvider Provider');\r\n  }\r\n\r\n\r\n  dateDiff(older, newer) {\r\n    var data = <any>{};\r\n    // Elapsed milliseconds\r\n    data.elapsed = newer.getTime() - older.getTime();\r\n    // Elapsed Days\r\n    data.days = Math.round((((data.elapsed / 1000) / 60) / 60) / 24);\r\n    // Elapsed Hours\r\n    data.hours = Math.round(((data.elapsed / 1000) / 60) / 60);\r\n    // Elapsed Months\r\n    var monthDiff = (newer.getMonth() + 1) - (older.getMonth() + 1);\r\n    var yearDiff = newer.getFullYear() - older.getFullYear();\r\n    data.months = monthDiff + (yearDiff * 12);\r\n    // Return data\r\n    return data;\r\n  }\r\n\r\n  arraysIdentical(array1, array2) {\r\n    return (JSON.stringify(array1) === JSON.stringify(array2));\r\n  }\r\n\r\n  trimLeadingSpaces(s) {\r\n    var index = 0;\r\n    var lastLeadingString = -1;\r\n    while (s.charCodeAt(index) < 33) {\r\n      lastLeadingString++;\r\n      index++;\r\n    }\r\n    if (lastLeadingString >= 0) {\r\n      var sTrim = s.substr(lastLeadingString + 1);\r\n      return sTrim;\r\n    }\r\n    else {\r\n      return s;\r\n    }\r\n  }\r\n\r\n  nameSort(a, b) {\r\n    if (a.name < b.name) {\r\n      return -1;\r\n    }\r\n    if (a.name > b.name) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n\r\n  findArrayIndexByKey(data, key, value) {\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (data[i][key] === value) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  findArrayItemByKey(data, key, value) {\r\n    //console.log(\"data in findArrayItemByKey::::\" + data);\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (data[i][key] === value) {\r\n        return data[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  findArrayItemsByKey(data, key, value) {\r\n    var retArray = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (data[i][key] === value) {\r\n        retArray.push(data[i]);\r\n      }\r\n    }\r\n    return retArray;\r\n  }\r\n\r\n\r\n  isNumber(n) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n  }\r\n\r\n  getParamFromURL(url, key) {\r\n    var params = url.split(\"?\");\r\n    var value = \"\";\r\n    if (params.length > 1) {\r\n      params = params[1].split(\"&\");\r\n      for (var i = 0; (i < params.length) && (value === \"\"); i++) {\r\n        if (params[i].indexOf(key) === 0) {\r\n          var param = params[i].split(\"=\");\r\n          if (param.length > 1) {\r\n            value = param[1];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return decodeURIComponent(value);\r\n  }\r\n\r\n\r\n\r\n  getScrollbarWidth() {\r\n    if (this.scrollBarWidth !== null) {\r\n      return this.scrollBarWidth;\r\n    }\r\n    var outer = document.createElement(\"div\");\r\n    outer.style.visibility = \"hidden\";\r\n    outer.style.width = \"100px\";\r\n    outer.style.msOverflowStyle = \"scrollbar\"; // needed for WinJS apps\r\n\r\n    document.body.appendChild(outer);\r\n\r\n    var widthNoScroll = outer.offsetWidth;\r\n    // force scrollbars\r\n    outer.style.overflow = \"scroll\";\r\n\r\n    // add innerdiv\r\n    var inner = document.createElement(\"div\");\r\n    inner.style.width = \"100%\";\r\n    outer.appendChild(inner);\r\n\r\n    var widthWithScroll = inner.offsetWidth;\r\n\r\n    // remove divs\r\n    outer.parentNode.removeChild(outer);\r\n\r\n    this.scrollBarWidth = widthNoScroll - widthWithScroll;\r\n    return this.scrollBarWidth;\r\n  }\r\n\r\n  /*  ShowDataErrorMessage(value, message) {\r\n     if ((value === \"Error\") || (value === \"\")) {\r\n       if (message === \"\") {\r\n         message = \"An Error has occured retrieving your data.  Please try again or return to the Previous Page.\";\r\n       }\r\n       $(\".tabContentContainer\").html(\"\");\r\n       $(\"<div class='dataError'>\" + message + \"</div>\").appendTo($(\".tabContentContainer\"));\r\n       $(\".tabContentContainer\")[0].scrollIntoViewIfNeeded(false);\r\n       return true;\r\n     }\r\n     else {\r\n       return false;\r\n     }\r\n \r\n   } */\r\n\r\n\r\n\r\n  /*  GetResponsiveScreenSize() {\r\n     var visible = false;\r\n     visible = $(\"#Screen-XS\").is(\":visible\");\r\n     if (visible === true) {\r\n       return \"XS\";\r\n     }\r\n     visible = $(\"#Screen-SM\").is(\":visible\");\r\n     if (visible === true) {\r\n       return \"SM\";\r\n     }\r\n     visible = $(\"#Screen-MD\").is(\":visible\");\r\n     if (visible === true) {\r\n       return \"MD\";\r\n     }\r\n     visible = $(\"#Screen-LG\").is(\":visible\");\r\n     if (visible === true) {\r\n       return \"LG\";\r\n     }\r\n     return \"\";\r\n   } */\r\n\r\n  copyObject(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n  }\r\n\r\n  arrayUnique(array, property) {\r\n    var a = array.concat();\r\n    for (var i = 0; i < a.length; ++i) {\r\n      for (var j = i + 1; j < a.length; ++j) {\r\n        if (property === undefined) {\r\n          if (a[i] === a[j]) {\r\n            a.splice(j--, 1);\r\n          }\r\n        }\r\n        else {\r\n          var x = a[i][property];\r\n          var x2 = a[j][property];\r\n          if (x === x2) {\r\n            a.splice(j--, 1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return a;\r\n  }\r\n\r\n\r\n  isEmpty=(obj) => {\r\n    for(var key in obj) {\r\n        if(obj.hasOwnProperty(key))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/util-service/util-service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { LoggerService } from '../../../shared/sdk/services';\r\n\r\ndeclare const lbclient: any;\r\n\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\r\nimport { BaseServiceProvider } from '../base-service/base-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\n\r\n/*\r\n  Generated class for the JseaServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class JseaServiceProvider {\r\n\r\n  //var logParams = { site: pdaParams.getSiteId(), driver: pdaParams.getDriverId(), fn: 'jseaService' };\r\n  //var log = Logger.getInstance(logParams);\r\n\r\n  //STARTOFDAY is for Start of Day agreements, PERJOB is for Job agreements\r\n  jseaServiceTypes = new Array();\r\n  jseaServiceType: any;\r\n  //myConfiguredForJsea: boolean = false;\r\n  SODSERVICE_IS_NEW_DAY: boolean = false;\r\n  SITE_CONFIG_LOADED: boolean = false;\r\n  myDetailJobnum = 0;\r\n  myDetailJobdate;\r\n  myDetailJobJseaCaptured = false;\r\n  myJobStatusType = 'N/A';\r\n  myFormType = 'JSEA';\r\n  myFormLeg = 0;\r\n  mystr;\r\n  deleteJseaChangeData = lbclient.deleteJseaChangeData;\r\n  LocalJseaDriverAnswers = lbclient.models.LocalJseaDriverAnswers;\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider,\r\n    private siteConfig: SiteconfigServiceProvider,\r\n    private log: LoggerService,\r\n    private base: BaseServiceProvider,\r\n    private sharedService: SharedServiceProvider) {\r\n\r\n    //console.log('Hello JseaServiceProvider Provider');\r\n\r\n    //Subscribe to the SODSERVICE_IS_NEW_DAY subject.\r\n    this.sharedService.SODSERVICE_IS_NEW_DAY.subscribe(SODSERVICE_IS_NEW_DAY => {\r\n      this.SODSERVICE_IS_NEW_DAY = SODSERVICE_IS_NEW_DAY;\r\n    });\r\n\r\n    //Subscribe to the SITE_CONFIG_LOADED subject.\r\n    this.sharedService.SITE_CONFIG_LOADED.subscribe(SITE_CONFIG_LOADED => {\r\n      this.SITE_CONFIG_LOADED = SITE_CONFIG_LOADED;\r\n    });\r\n\r\n\r\n    this.jseaServiceTypes[\"SOD\"] = \"STARTOFDAY\";\r\n    this.jseaServiceTypes[\"PJB\"] = \"PERJOB\";\r\n\r\n    this.myDetailJobdate = new Date();\t\t\t\t//Default to current day\r\n    this.myDetailJobdate.setHours(0, 0, 0, 0);\t\t\t//remove time portion\r\n\r\n    if (localStorage.getItem('PDA_JSEA_TYPE')) {\r\n      this.jseaServiceType = localStorage.getItem('PDA_JSEA_TYPE');\r\n    }\r\n    else {\r\n      this.jseaServiceType = this.jseaServiceTypes[\"SOD\"]; //Default\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  setJseaIsCaptured(val) {\r\n    if (this.jseaServiceType == this.jseaServiceTypes[\"SOD\"]) {\r\n      localStorage.setItem('JSEA_SOD_CAPTURED', val);\r\n    }\r\n    if (this.jseaServiceType == this.jseaServiceTypes[\"PJB\"]) {\r\n      this.myDetailJobJseaCaptured = (val == \"Y\");\r\n    }\r\n  }\r\n\r\n\r\n  setJseaType(larg) {\r\n    var match = false;\r\n    this.log.info('Setting JseaType passed ' + larg);\r\n\r\n    for (var key in this.jseaServiceTypes) {\r\n      var lvalue = this.jseaServiceTypes[key];\r\n      this.log.info(' lvalue : ' + lvalue);\r\n      if (larg == lvalue) {\r\n        match = true;\r\n        this.jseaServiceType = this.jseaServiceTypes[key];\r\n        this.log.info('Setting JseaType got a match on ' + lvalue + \" To \" + this.jseaServiceTypes[key]);\r\n        //this.myConfiguredForJsea = true;\r\n        this.sharedService.setMyConfiguredForJsea(true);\r\n\r\n      }\r\n    }\r\n\r\n    if (match == false) {\r\n      this.log.info('Setting JseaType NO MATCH on ' + larg + ' Will be Set to default: ' + this.jseaServiceType);\r\n    }\r\n  }\r\n\r\n\r\n  setJseaTypePerJob() {\r\n    this.log.info('Setting JseaType to Per Job');\r\n    this.jseaServiceType = this.jseaServiceTypes[\"PJB\"];\r\n  }\r\n\r\n\r\n  setJseaTypeStartOfDay() {\r\n    this.log.info('Setting JseaType to StartOfDay');\r\n    this.jseaServiceType = this.jseaServiceTypes[\"SOD\"];\r\n  }\r\n\r\n  getJseaType() {\r\n    return this.jseaServiceType;\r\n  }\r\n\r\n  isJseaStartOfDay() {\r\n    return (this.jseaServiceType == this.jseaServiceTypes[\"SOD\"]);\r\n  }\r\n\r\n  getJseaConfig() {\r\n    this.log.info('Getting JseaIsCaptured');\r\n\r\n    //If we havn't been configured then don't stop the person doing things in the app\r\n    //if (this.myConfiguredForJsea == false) {\r\n    if (this.sharedService.getMyConfiguredForJsea() == false) {\r\n      this.log.info('this.myConfiguredForJsea = ' + this.sharedService.getMyConfiguredForJsea() + ' So will return true');\r\n      return 'NA';\r\n    }\r\n\r\n    if (this.isJseaStartOfDay()) {\r\n      var lstr;\r\n      this.log.info('Getting JseaIsCaptured this.jseaServiceType = ' + this.jseaServiceType + ' From Local storage');\r\n      lstr = localStorage.getItem('JSEA_SOD_CAPTURED');\r\n      if (lstr == 'Y') {\r\n        return 'SOD_YES'\r\n      }\r\n      else {\r\n        return 'SOD_NO'\r\n      }\r\n    }\r\n    else {\r\n      return 'PJB_CHECK';\r\n    }\r\n\r\n  }\r\n\r\n\r\n  startWatching() {\r\n\r\n    //if (this.SODSERVICE_IS_NEW_DAY || localStorage.getItem('SODSERVICE_IS_NEW_DAY')) {\r\n    this.sharedService.SODSERVICE_IS_NEW_DAY.subscribe(SODSERVICE_IS_NEW_DAY => {\r\n\r\n      this.log.info('SODSERVICE_IS_NEW_DAY Event triggered');\r\n      if (this.isJseaStartOfDay()) {\r\n        this.log.info('SODSERVICE_IS_NEW_DAY isJseaStartOfDay is TRUE ');\r\n        //Update the value to be No and then when the guy uses the ctrler this will make it Yes\r\n        localStorage.setItem('JSEA_SOD_CAPTURED', 'N');\r\n      }\r\n      else {\r\n        this.log.info('SODSERVICE_IS_NEW_DAY isJseaStartOfDay is NOT TRUE assume PER JOB');\r\n      }\r\n    });\r\n\r\n    // if (this.SITE_CONFIG_LOADED || localStorage.getItem('SITE_CONFIG_LOADED')) {\r\n    this.sharedService.SITE_CONFIG_LOADED.subscribe(SITE_CONFIG_LOADED => {\r\n      console.log(\"Hi from jsea-service.ts\");\r\n      this.log.info('SITE_CONFIG_LOADED Event triggered');\r\n      if (this.siteConfig.getSiteConfigValue('PDA_JSEA_ON') === 'Y' || this.pdaParams.pda_jsea_on) {\r\n        //Now get the type value\r\n        var lvar = this.siteConfig.getSiteConfigValue('PDA_JSEA_TYPE');\r\n        if (lvar != '') {\r\n          this.mystr = \"getSiteConfig returned  \" + lvar;\r\n          this.log.info(this.mystr);\r\n          //Set the TYpe in the service\r\n          this.setJseaType(lvar);\r\n        }\r\n        else {\r\n          this.mystr = \"getSiteConfig returned nothing !!!!\";\r\n          this.log.info(this.mystr);\r\n        }\r\n      }\r\n    });\r\n\r\n  } //startWatching() ends here\r\n\r\n\r\n  setJobJseaDetails(jobnum, jobdate, iscaptured, statusType, formType, formLeg) {\r\n    this.log.info('setJobJseaDetails' + ' Jobnum: ' + jobnum + ' Jobdate ' + jobdate + ' IsCaptured '\r\n      + iscaptured, ' StatusTYpe' + statusType, ' FormType ' + formType, ' FormLeg' + formLeg);\r\n    this.myDetailJobnum = jobnum;\r\n    this.myDetailJobdate = jobdate;\r\n    this.myDetailJobJseaCaptured = (iscaptured == 'Y');\r\n    this.myJobStatusType = statusType;\r\n    this.myFormType = formType;\r\n    this.myFormLeg = formLeg\r\n  }\r\n\r\n  getServiceJobNum() {\r\n    return this.myDetailJobnum;\r\n  }\r\n\r\n  getServiceJobDate() {\r\n    return this.myDetailJobdate;\r\n  }\r\n\r\n  getServiceStatusType() {\r\n    return this.myJobStatusType;\r\n  }\r\n\r\n  getServiceFormType() {\r\n    return this.myFormType;\r\n  }\r\n\r\n  getServiceFormLeg() {\r\n    return this.myFormLeg;\r\n  }\r\n\r\n  checkJobDateJseaCaptured(jobnum, jobdate) {\r\n    this.log.info('checkJobDate' + ' Passed Jobnum: ' + jobnum + ' Passed Jobdate ' + jobdate);\r\n    if (jobnum == this.myDetailJobnum && jobdate == this.myDetailJobdate) {\r\n      this.log.info('updateJobIsCaptured' + ' Svc Jobnum: ' + jobnum + ' Svc Jobdate ' + jobdate);\r\n      return (this.myDetailJobJseaCaptured);\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  deleteOldData = (daysback?) => {\r\n    // delete old data\r\n    // if daysback parameter provided use it otherwise use site config value\r\n    var val = this.siteConfig.getSiteConfigInt('PDA_DEL_DAYSBACK');\r\n    daysback = daysback || val;\r\n\r\n    var queryDate = new Date();\r\n    queryDate.setDate(queryDate.getDate() - daysback);\r\n\r\n    this.log.info(\"deleteOldData: daysback:\" + daysback + \", queryDate:\" + queryDate);\r\n\r\n    if (daysback > 1) {\r\n      var delfilter = { \"where\": { \"jdaJobBday\": { \"lt\": queryDate } } };\r\n      this.log.info(\"deleteOldData: delfilter:\" + JSON.stringify(delfilter));\r\n\r\n      this.LocalJseaDriverAnswers.find(delfilter, (err, answers) => {\r\n        var len = answers.length;\r\n        this.log.info(\"deleteOldData: deleting:\" + len + \" answers\");\r\n\r\n        for (var i = 0; i < len; i++) {\r\n          var answer = answers[i];\r\n          this.log.info(\"deleteOldData: delete answer:\" + i + \" job:\" + answer.jdaJobNum + \" date:\" + answer.jdaJobBday + \" order:\" + answer.jdaOrder);\r\n          answer.delete();\r\n        }\r\n\r\n        // clear jsea change data if we've deleted any old answers\r\n        if (len > 1) {\r\n          this.deleteJseaChangeData((err, changeData) => {\r\n            if (err)\r\n              this.log.error(err);\r\n            if (changeData)\r\n              this.log.info(changeData);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n  }//deleteOldData ends here\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/jsea-service/jsea-service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { JobApi } from '../../../shared/sdk/services';\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\n\r\ndeclare const lbclient: any;\r\n\r\nimport { FixedQueueServiceProvider } from '../fixed-queue-service/fixed-queue-service';\r\nimport { DeviceServiceProvider } from '../device-service/device-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { JobServiceProvider } from '../../providers/job-service/job-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\nimport { UtilServiceProvider } from '../util-service/util-service';\r\n\r\n/*\r\n  Generated class for the MessageServiceProvider provider.\r\n\r\n  A Service to handle incoming PDA messages \r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n/*   interface payload {\r\n    command:string,\r\n    params:{}\r\n   } */\r\n\r\n@Injectable()\r\nexport class MessageServiceProvider {\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'MessageServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  /* Riyaz: fixedQueue is no longer imported as an npm library.\r\n  It is now rewritten as an angular2 service within our codebase */\r\n  msgQ = this.fixedQueue.create(50);// Store last x no. driver messages  \t\r\n  newMsgCount = 0;\t\t\t// keep a count of new messages - will reset once driver has seen them\r\n  deleteJobChangeData = lbclient.deleteJobChangeData;\r\n  deleteJseaChangeData = lbclient.deleteJseaChangeData;\r\n\r\n  constructor(private fixedQueue: FixedQueueServiceProvider,\r\n    private logger: LogServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider,\r\n    private deviceService: DeviceServiceProvider, private jobApi: JobApi,\r\n    private jobService: JobServiceProvider,\r\n    private sharedService: SharedServiceProvider,\r\n    private utilService: UtilServiceProvider) {\r\n    //console.log('Hello MessageServiceProvider Provider');\r\n  }\r\n\r\n  isJson(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  dumpLocalStorage() {\r\n    var logmsg = <any>{};\r\n    var dblist = ['osc-local-db', 'osc-driver-info', 'osc-push-credentials'];\r\n    var len = dblist.length;\r\n\r\n    // dump ALL items, not just out predefined ones\r\n    len = localStorage.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      var key = localStorage.key(i);\r\n      var value = localStorage[key];\r\n\r\n      logmsg.type = 'dumpLocalStorage:' + key;\r\n      if (this.isJson(value))\r\n        logmsg.data = JSON.parse(value);\r\n      else\r\n        logmsg.data = value;\r\n\r\n      this.log.info(logmsg);\r\n    }\r\n  }\r\n\r\n  clearLocalStorage() {\r\n    var logmsg = <any>{};\r\n    logmsg.type = 'clearLocalStorage';\r\n    // clear local storage then log contents - should be empty\r\n    localStorage.removeItem('osc-local-db');\r\n    logmsg.data = JSON.parse(localStorage.getItem('osc-local-db'));\r\n    this.log.info(logmsg);\r\n  }\r\n\r\n  clearChangeData() {\r\n    var logmsg = <any>{};\r\n    logmsg.type = 'clearChangeData';\r\n    // clear job-change and checkpoint data from local storage then log contents\r\n    this.deleteJobChangeData = (err, changeData) => {\r\n      if (err)\r\n        this.log.error(err);\r\n      if (changeData)\r\n        this.log.debug(changeData);\r\n      logmsg.data = JSON.parse(localStorage.getItem('osc-local-db'));\r\n      this.log.info(logmsg);\r\n    }\r\n\r\n    // clear jsea change data\r\n    this.deleteJseaChangeData = (err, changeData) => {\r\n      if (err)\r\n        this.log.error(err);\r\n      if (changeData)\r\n        this.log.debug(changeData);\r\n      logmsg.data = JSON.parse(localStorage.getItem('osc-local-db'));\r\n      this.log.info(logmsg);\r\n    }\r\n  }\r\n\r\n  dumpDeviceInfo() {\r\n    var logmsg = <any>{};\r\n    logmsg.type = 'dumpDeviceInfo';\r\n\r\n    var deviceData = this.deviceService.getDevice();\r\n    //var i = this.deviceService.getDevice()\r\n    logmsg.data = JSON.stringify(deviceData);\r\n    this.log.info(logmsg);\r\n  }\r\n\r\n  setPdaParam(params) {\r\n    var logmsg = <any>{};\r\n    logmsg.type = 'setPdaParam';\r\n    this.pdaParams.setParameter(params, (err) => {\r\n      if (err)\r\n        this.log.error(err);\r\n      this.log.info(logmsg);\r\n    });\r\n  }\r\n\r\n  deleteJobs(params) {\r\n    var logmsg = <any>{};\r\n    logmsg.type = 'deleteJobs';\r\n\r\n    var delfilter = params;\r\n    this.log.info('filter:' + JSON.stringify(delfilter));\r\n\r\n    // must supply where filter\r\n    if (delfilter.where) {\r\n\r\n      this.jobApi.find(delfilter, (err, jobs) => {\r\n        var len = jobs.length;\r\n        this.log.info(\"deleting:\" + len + \" legs\");\r\n\r\n        for (var leg = 0; leg < len; leg++) {\r\n          var job = jobs[leg];\r\n          this.log.info(\"delete leg:\" + leg + \" job:\" + job.mobjobSeq);\r\n          job.delete();\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.log.debug('No where filter provided');\r\n    }\r\n  }\r\n\r\n  deleteOldJobs(params) {\r\n    // REST API params object e.g.  { \"daysback\": 14 }\r\n    var daysback = params.daysback || 7;\t\t// default to 7 days\r\n    this.jobService.deleteOldJobs(daysback);\r\n\r\n  }\r\n\r\n  startWatching() {\r\n\r\n    // PDA commands \r\n    // From REST endpoint /TpmPdaControllers/sendCommandToPDA/{driver}\r\n    this.sharedService.commandToPDA.subscribe(payload => {\r\n\r\n      // $rootScope.$on('commandToPDA', function (event, payload) {\r\n\r\n      this.log.debug('commandToPDA:received:' + JSON.stringify(payload));\r\n      //console.log('commandToPDA:received 1:' + JSON.stringify(payload));\r\n\r\n      switch (payload.command) {\r\n        case 'dumpLocalStorage':\r\n          this.dumpLocalStorage();\r\n          break;\r\n\r\n        case 'clearLocalStorage':\r\n          this.clearLocalStorage();\r\n          break;\r\n\r\n        case 'clearChangeData':\r\n          this.clearChangeData();\r\n          break;\r\n\r\n        case 'setPdaParam':\r\n          this.setPdaParam(payload.params);\r\n          break;\r\n\r\n        case 'deleteJobs':\r\n          this.deleteJobs(payload.params);\r\n          break;\r\n\r\n        case 'deleteOldJobs':\r\n          this.deleteOldJobs(payload.params);\r\n          break;\r\n\r\n        default:\r\n          var logmsg = <any>{};\r\n          logmsg.type = 'commandToPDA';\r\n          this.log.error('unknown command:' + payload.command);\r\n          //console.log('unknown command:' + payload.command);\r\n          break;\r\n      }\r\n\r\n\r\n      // LT - added after cordova/push upgrades - we didn't seem to get immediate updates afterwards\r\n      //$rootScope.$apply();\r\n    });\r\n\r\n    // Message to driver\r\n    //$rootScope.$on('messageToDriver', function (event, payload) {\r\n    this.sharedService.messageToDriver.subscribe(payload => {\r\n\r\n      //console.log('messageToDriver:received 1:' + JSON.stringify(payload));\r\n      // payload.message has the message text\r\n\r\n      //if (payload !== null) {\r\n      if (!this.utilService.isEmpty(payload)) {\r\n        // //console.log('messageToDriver:received 2:' + JSON.stringify(payload));\r\n        this.msgQ.push(payload.message);\r\n        this.newMsgCount++;\r\n      }\r\n      // LT - added after cordova/push upgrades - we didn't seem to get immediate updates afterwards\r\n      //$rootScope.$apply();\r\n    });\r\n\r\n    // more watchers if required\r\n  }\r\n\r\n  getMessages() {\r\n    // get all messages\r\n    return (this.msgQ);\r\n  }\r\n\r\n  getNewMesssageCount() {\r\n    return (this.newMsgCount);\r\n  }\r\n\r\n  resetNewMessageCount() {\r\n    this.newMsgCount = 0;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/message-service/message-service.ts","import { Injectable } from '@angular/core';\r\nimport { Device } from '@ionic-native/device';\r\nimport { Platform } from 'ionic-angular';\r\nimport { Insomnia } from '@ionic-native/insomnia';\r\n\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { BackgroundGeolocationServiceProvider } from '../../providers/background-geolocation-service/background-geolocation-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\n\r\n/*\r\n  Generated class for the PlatformReadyServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n\r\n\r\n@Injectable()\r\nexport class PlatformReadyServiceProvider {\r\n\r\n  logOb;\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'PlatformReadyServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  isready: boolean = false;\r\n\r\n  constructor(private device: Device, private logger: LogServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider, public platform: Platform,\r\n    private insomnia: Insomnia, private backgroundGeolocationService: BackgroundGeolocationServiceProvider,\r\n    private sharedService: SharedServiceProvider) {\r\n    this.log.info('Hello PlatformReadyServiceProvider Provider');\r\n\r\n    this.platform.ready().then((readySource) => {\r\n      this.log.info('Platform ready from :', readySource);\r\n      // Platform now ready, execute any required native code\r\n\r\n      var model = this.device.model;\r\n      var platform = this.device.platform;\r\n      var version = this.device.version;\r\n\r\n      /*  if (platform == 'android') {\r\n         StatusBar.backgroundColorByHexString(\"#333\");\r\n       } */\r\n\r\n      this.isready = true;\r\n      // Keep screen on for our app\r\n      this.insomnia.keepAwake();\r\n\r\n      //this.log.info(\"Device Model:\" + model + \", platform:\" + platform + \", OS ver:\" + version);\r\n\r\n      if (model == 'CipherLab RS30') {\r\n        this.log.debug(\"Device is a CipherLab RS30 \" + model);\r\n      }\r\n      else {\r\n        this.log.debug(\"Device is NOT !!!! a CipherLab RS30 HEAD scanning NOT Available \" + model);\r\n      }\r\n\r\n      this.platform.pause.subscribe((e) => {\r\n        this.log.debug(\"platform.pause: About to call BGGS.start() \");\r\n        this.backgroundGeolocationService.start();\r\n\r\n        //$rootScope.$broadcast('PAUSE');\r\n        this.sharedService.PAUSE.next(true);\r\n      });\r\n\r\n      this.platform.resume.subscribe((e) => {\r\n        this.log.debug(\"platform.resume: About to broadcast: RESUME event\");\r\n        this.backgroundGeolocationService.stop();\r\n\r\n        //$rootScope.$broadcast('RESUME');\r\n        this.sharedService.RESUME.next(true);\r\n      });\r\n\r\n    });\r\n  }//constructor ends;\r\n\r\n\r\n  isPlatformReady() {\r\n    return this.isready;\r\n  }\r\n\r\n\r\n  //document.addEventListener(\"deviceready\", onDeviceReady, false);\r\n\r\n  //function onDeviceReady() {\r\n  // Now safe to use device APIs\r\n\r\n  //log.debug('onDeviceReady');\r\n\r\n  /*\t\t// LT - I don't think we should clear cache/localstorage here on startup as e.g.\r\n      // if a driver completes jobs when offline and starts up next day we need those\r\n      // to sync rather than get a new set of data from the server\r\n  \r\n      // clear webview cache\r\n      var success = function(status) {\r\n        alert('Message: ' + status);\r\n      }\r\n  \r\n      var error = function(status) {\r\n        alert('Error: ' + status);\r\n      }\r\n      localStorage.removeItem('osc-local-db');\r\n      window.cache.clear( success, error );\r\n  */\r\n  //alert(' CordovaIsready = ' + isready);\r\n\r\n  // LT - TODO - set up log writing - gave an error on android device\r\n  /*\r\n      window.resolveLocalFileSystemURL(cordova.file.dataDirectory, function(dir) {\r\n        this.log.info(\"got main dir\",dir);\r\n        dir.getFile(\"log.txt\", {create:true}, function(file) {\r\n          this.log.info(\"got the file\", file);\r\n          logOb = file;\r\n          writeLog(\"App started\");\t\t\t\r\n        });\r\n      });\r\n  */\r\n\r\n  // https://github.com/driftyco/ng-cordova/blob/master/src/plugins/insomnia.js\r\n  // Keep screen on for our app\r\n  // $cordovaInsomnia.keepAwake();\r\n\r\n\r\n  //document.addEventListener(\"pause\", onPause, false);\r\n  //document.addEventListener(\"resume\", onResume, false);\r\n\r\n  /* var model =  $cordovaDevice.getModel();\r\n  var platform =  $cordovaDevice.getPlatform();\r\n  var version = $cordovaDevice.getVersion(); */\r\n\r\n\r\n  //}//End of onDeviceReady() \r\n\r\n  /*  onPause() {\r\n     log.debug('onPause About to call BGGS.start()');\r\n     BackgroundGeolocationService.start();\r\n \r\n     $rootScope.$broadcast('PAUSE');\r\n   }\r\n \r\n   onResume() {\r\n     log.debug('onresume: about to broadcast: RESUME event');\r\n     BackgroundGeolocationService.stop();\r\n \r\n     $rootScope.$broadcast('RESUME');\r\n   }\r\n  */\r\n  /*\r\n   * For future use - maybe write to log file on device that can be send to OSX\r\n   * or maybe viewed on a tab on the device\r\n   \r\n  function writeLog(str) {\r\n    if(!logOb) return;\r\n    var log = str + \" [\" + (new Date()) + \"]\\n\";\r\n    this.log.info(\"going to log \"+log);\r\n    logOb.createWriter(function(fileWriter) {\r\n   \r\n      fileWriter.seek(fileWriter.length);\r\n   \r\n      var blob = new Blob([log], {type:'text/plain'});\r\n      fileWriter.write(blob);\r\n      this.log.info(\"ok, in theory i worked\");\r\n    }, fail);\r\n  }\r\n  */\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/platform-ready-service/platform-ready-service.ts","/* tslint:disable */\r\nexport * from './core/index';\r\nexport * from './custom/index';\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/index.ts","import { Injectable } from '@angular/core';\r\n\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { FixedQueueServiceProvider } from '../fixed-queue-service/fixed-queue-service';\r\n\r\n/*\r\n  Generated class for the GpsAuditServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class GpsAuditServiceProvider {\r\n\r\n  gpsHistory;\r\n  lastGps;\r\n\r\n  constructor(private fixedQueue: FixedQueueServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider,\r\n    private logger: LogServiceProvider) {\r\n    //console.log('Hello GpsAuditServiceProvider Provider');\r\n\r\n    // Store last x no. of gps locations while tracking so we can display for audit purposes\r\n    /* Riyaz: fixedQueue is no longer imported as an npm library.\r\n       It is now rewritten as an angular2 service within our codebase */\r\n    this.gpsHistory = this.fixedQueue.create(1000);\r\n\r\n    this.lastGps = { gps_latitude: 0, gps_longitude: 0 };\r\n  }\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'GpsAuditServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  saveGps(gpsData) {\r\n    // gpsData is an object of gpsHistory\r\n    this.gpsHistory.push(gpsData);\r\n\r\n    //this.lastGps = angular.copy(gpsData);\r\n    this.lastGps = Object.assign({}, gpsData);\r\n  }\r\n\r\n  getHistory() {\r\n    return (this.gpsHistory);\r\n  }\r\n\r\n  getLastGPS() {\r\n    // TODO - maybe have arg for time so only return GPS if within last x secs\r\n    return (this.lastGps);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/gps-audit-service/gps-audit-service.ts","\r\nimport { LoggerService } from '../../../shared/sdk/services/custom/logger.service';\r\nimport { LoopBackConfig } from '../../../shared/sdk/lb.config';\r\n\r\nimport { Http } from '@angular/http';\r\n\r\n\r\nexport class LogServiceInstance {\r\n\r\n    _log;\r\n    log;\r\n    info;\r\n    error;\r\n    seqno = 0;\r\n    context;\r\n    driverId;\r\n    logServerIP;\r\n    logServerPort;\r\n    pdaParams;\r\n    isEnabled = true;\r\n    loggerService;\r\n    http: Http;\r\n\r\n\r\n    constructor(http, context, driverId, logServerIP, logServerPort, pdaParams) {\r\n        this.http = http;\r\n        this.context = context;\r\n        this.driverId = driverId;\r\n        this.logServerIP = logServerIP;\r\n        this.logServerPort = logServerPort;\r\n        this.pdaParams = pdaParams;\r\n        this.loggerService = new LoggerService();\r\n\r\n\r\n        //console.log('Hello LogServiceInstance class');\r\n    }\r\n\r\n    supplant(str, o) {\r\n        return str.replace(\r\n            /\\{([^{}]*)\\}/g,\r\n            function (a, b) {\r\n                var r = o[b];\r\n                return typeof r === 'string' || typeof r === 'number' ? r : a;\r\n            }\r\n        );\r\n    };\r\n\r\n    getFormattedTimestamp(date) {\r\n        return this.supplant('{0}:{1}:{2}:{3}', [\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds()\r\n        ]);\r\n    };\r\n    getLogTimestamp(date) {\r\n        return (date.toISOString());\r\n    };\r\n\r\n    getLocalTimestamp(date) {\r\n        var tzo = -date.getTimezoneOffset();\r\n        var dif = tzo >= 0 ? '+' : '-';\r\n        function pad(num) {\r\n            var norm = Math.abs(Math.floor(num));\r\n            return (norm < 10 ? '0' : '') + norm;\r\n        };\r\n        return date.getFullYear()\r\n            + '-' + pad(date.getMonth() + 1)\r\n            + '-' + pad(date.getDate())\r\n            + 'T' + pad(date.getHours())\r\n            + ':' + pad(date.getMinutes())\r\n            + ':' + pad(date.getSeconds())\r\n            + dif + pad(tzo / 60)\r\n            + ':' + pad(tzo % 60);\r\n    };\r\n\r\n\r\n    debug(arg: string) {\r\n        if (LoopBackConfig.debuggable())\r\n            console.debug(arg);\r\n    }\r\n    warn(arg: string) {\r\n        if (LoopBackConfig.debuggable())\r\n            console.warn(arg);\r\n    }\r\n}//class LogServiceInstance ends here\r\n\r\nLogServiceInstance.prototype._log = function (originalFn, args) {\r\n    if (!this.isEnabled) {\r\n        return;\r\n    }\r\n\r\n    var contentType = 'application/json; charset=UTF-8';\r\n    var now = this.getFormattedTimestamp(new Date());\r\n    var message = '',\r\n        supplantData = [];\r\n    var logstring = '';\r\n\r\n\r\n    // LT - BAD - HACK - check driver id and if zero update context\r\n    // Logger function should not know details of context or what a driver id is!!!!\r\n\r\n    if (this.context.driver == 0 || (typeof this.context.driver == 'undefined'))\r\n        //this.context.driver = this.pdaParamService.getDriverId();\r\n        this.context.driver = this.driverId;\r\n\r\n    this.context.driver = Number(this.context.driver);\r\n\r\n    // LT - for our OSC PDA app context is a JSON object so need to convert to string\r\n    var lcontext = JSON.stringify(this.context);\r\n    switch (args.length) {\r\n        case 1:\r\n            message = this.supplant(\"{0} - {1}: {2}\", [now, lcontext, args[0]]);\r\n            logstring = args[0];\r\n            break;\r\n        case 3:\r\n            supplantData = args[2];\r\n            message = this.supplant(\"{0} - {1}::{2}(\\'{3}\\')\", [now, lcontext, args[0], args[1]]);\r\n            this.logtype = args[0];\r\n            logstring = this.supplant(args[1], supplantData);\r\n            break;\r\n        case 2:\r\n            if (typeof args[1] === 'string') {\r\n                message = this.supplant(\"{0} - {1}::{2}(\\'{3}\\')\", [now, lcontext, args[0], args[1]]);\r\n                this.logtype = args[0];\r\n                logstring = args[1];\r\n            } else {\r\n                supplantData = args[1];\r\n                message = this.supplant(\"{0} - {1}: {2}\", [now, lcontext, args[0]]);\r\n                logstring = this.supplant(args[0], supplantData);\r\n            }\r\n            break;\r\n    }\r\n\r\n\r\n\r\n    //this.loggerService[originalFn].call(null, this.supplant(message, supplantData));\r\n\r\n\r\n    // LT - POST to log server\r\n    /* The angular $http service cannot be used in the $log\r\n     * decorator because it will cause a circular dependecy.\r\n     * To overcome this  a direct ajax call should be made.\r\n     * TODO - maybe use \"request\" https://github.com/request/request/blob/master/README.md instead of jQuery to reduce footprint\r\n     */\r\n    this.seqno++;\r\n    if (this.seqno > 999)\r\n        this.seqno = 1;\r\n    var d = new Date();\r\n\r\n    var OSC_log = {\r\n        time: this.getLogTimestamp(d),\r\n        localtime: this.getLocalTimestamp(d),\r\n        seq: this.seqno,\r\n        logtype: originalFn,\r\n        context: this.context,\r\n        message: logstring\r\n    }\r\n    var url = 'http://' + this.logServerIP + ':' + this.logServerPort;\r\n    var data = JSON.stringify({\r\n        pdalog: OSC_log\r\n    });\r\n\r\n    this.http.post(url, data).subscribe(data => {\r\n        //console.log(\"GPS log test:::\" + data);\r\n    }, error => {\r\n        console.log(\"GPS log test error:::\" + error);\r\n    });\r\n\r\n    //this.http.open()\r\n\r\n\r\n};//LogServiceInstance.prototype._log() ends here\r\n\r\n\r\nLogServiceInstance.prototype.log = function () {\r\n    this._log('log', arguments);\r\n};\r\nLogServiceInstance.prototype.info = function () {\r\n    this._log('info', arguments);\r\n};\r\nLogServiceInstance.prototype.warn = function () {\r\n    this._log('warn', arguments);\r\n\r\n};\r\nLogServiceInstance.prototype.debug = function () {\r\n    this._log('debug', arguments);\r\n};\r\n\r\nLogServiceInstance.prototype.error = function () {\r\n    this._log('error', arguments);\r\n};\r\n\r\nLogServiceInstance.prototype.context = this.context;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/log-service/log-service-instance.ts","import { Component, Input } from '@angular/core';\r\n\r\nimport { ModalController } from 'ionic-angular';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\n\r\nimport { ImageFileServiceProvider } from '../../providers/image-file-service/image-file-service';\r\nimport { ImageServiceProvider } from '../../providers/image-service/image-service';\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\n\r\nimport { ImageTextPage } from '../../pages/image-text/image-text';\r\n\r\n/**\r\n * Generated class for the CameraButtonComponent component.\r\n *\r\n * See https://angular.io/docs/ts/latest/api/core/index/ComponentMetadata-class.html\r\n * for more info on Angular Components.\r\n */\r\n@Component({\r\n  selector: 'camera-button',\r\n  templateUrl: 'camera-button.html'\r\n})\r\nexport class CameraButtonComponent {\r\n  @Input('metadata') metadata: { basejob: '', legid: '', legStatus: '' };\r\n  imageURI;\r\n  legid;\r\n\r\n  constructor(public modalCtrl: ModalController, private imageFileService: ImageFileServiceProvider,\r\n    private imageService: ImageServiceProvider, private configService: ConfigServiceProvider,\r\n    private sharedService: SharedServiceProvider) {\r\n    //console.log('Hello CameraButtonComponent Component');\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n  }\r\n\r\n  // function to open the modal\r\n  openModal = (obj) => {\r\n    let myModal = this.modalCtrl.create(ImageTextPage, obj);\r\n    myModal.present();\r\n  };\r\n\r\n  getNotesForImage = (imageURI, legid, baseFileName, newFileName) => {\r\n    let obj = { imageURI: '', legid: 0, baseFileName: '', newFileName: '' };\r\n    obj.imageURI = imageURI;\r\n    obj.legid = legid;\r\n    obj.baseFileName = baseFileName;\r\n    obj.newFileName = newFileName;\r\n    this.openModal(obj);\r\n  }\r\n\r\n  takephoto = (legid) => {\r\n    console.log(new Date().toISOString() + ': camera.takephoto: starts');\t\t//DEBUG\r\n    this.imageURI = \"Nothing Loaded!!\";\r\n    this.legid = legid;\r\n    this.imageService.takePhoto(this.legid).subscribe((imageURI) => {\r\n      this.imageURI = imageURI;\r\n      this.imageService.storeImageURI(this.legid, this.imageURI, this.metadata).subscribe((fileData) => {\r\n        // image moved to app storage\r\n        this.sharedService.imageSaved.next(fileData);\r\n        var savedImageURI = fileData.savedImageURI;\r\n        var baseFileName = fileData.baseFileName;\r\n        var newFileName = fileData.newFileName;\r\n        this.getNotesForImage(savedImageURI, this.legid, baseFileName, newFileName);\r\n      }, (err) => {\r\n        alert(\"storeImageURI Error\" + JSON.stringify(err));\r\n      });\r\n    });\r\n    // image successfully captured by device\r\n  }//takephoto ends here\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/camera-button/camera-button.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { BehaviorSubject, Subject } from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { Network } from '@ionic-native/network';\r\nimport { Platform } from 'ionic-angular';\r\n\r\nimport { UtilServiceProvider } from '../util-service/util-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\r\nimport { IonicApp } from 'ionic-angular/components/app/app-root';\r\n\r\n/*\r\n  Generated class for the ConnectivityMonitorProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class ConnectivityMonitorProvider {\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'ConnectivityMonitorProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  monitorOnline;\r\n  disconnectSubscription;\r\n  connectSubscription;\r\n \r\n\r\n  //isConnected is the ONLY variable used to interact with the Ionic-native network plugin. \r\n\r\n/*   //while Online is used as a global network variable in the code.\r\n  //Use isOnline() function to read the value of the 'Online' variable */\r\n\r\n  isConnected: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n  networkType: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider,\r\n    private util: UtilServiceProvider,\r\n    private logger: LogServiceProvider,\r\n    private siteConfig: SiteconfigServiceProvider,\r\n    public platform: Platform, private network: Network) {\r\n    //console.log('Hello ConnectivityMonitorProvider Provider');\r\n\r\n    this.monitorOnline = siteConfig.getSiteConfigValue('PDA_MONITOR_ONLINE') == 'Y';\r\n  }\r\n\r\n  /*  isOnline() {\r\n     if (this.platform.is('core')) {\r\n       this.Online = navigator.onLine;\r\n     }\r\n     return this.Online;\r\n   } */\r\n\r\n  startWatching = () => {\r\n\r\n    if (this.platform.is('core')) {\r\n      window.addEventListener(\"online\", (e) => {\r\n        //if (this.monitorOnline)\r\n        this.isConnected.next(true);\r\n        //console.log(\"went online\");\r\n      }, false);\r\n\r\n      window.addEventListener(\"offline\", (e) => {\r\n        //console.log(\"went offline\");\r\n        // if (this.monitorOnline)\r\n        this.isConnected.next(false);\r\n      }, false);\r\n    }\r\n\r\n    else {\r\n      this.connectSubscription = this.network.onConnect().subscribe(() => {\r\n        //console.log('network was Connected :-(');\r\n        setTimeout(() => {\r\n          //if (this.monitorOnline)\r\n          this.isConnected.next(true);\r\n          this.networkType.next(this.network.type);\r\n        }, 2000);\r\n      });\r\n\r\n      this.disconnectSubscription = this.network.onDisconnect().subscribe(() => {\r\n        this.isConnected.next(false);\r\n      });\r\n    }\r\n  }//startWatching ends here\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.disconnectSubscription.unsubscribe();\r\n    this.connectSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/connectivity-monitor/connectivity-monitor.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'keys'})\r\nexport class KeysPipe implements PipeTransform\r\n{\r\n    transform(value:any, args:string[]): any {\r\n        let keys:any[] = [];\r\n        for (let key in value) {\r\n            keys.push({key: key, value: value[key]});\r\n        }\r\n        return keys;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/keys.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'changeDisplayFrom'})\r\nexport class ChangeDisplayFromPipe implements PipeTransform\r\n{\r\n    transform(input:any, job:any): any {\r\n        if (job.displayFrom)\r\n        return job.displayFrom;\r\n    return input;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/change-display-from.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'changeDisplaySvc' })\r\nexport class ChangeDisplaySvcPipe implements PipeTransform {\r\n    transform(input: any, pdaParams: any): any {\r\n        var output = \"(\" + input + \")\";\r\n        if (pdaParams.siteId === 'WADS')\r\n            return \"\";\r\n        return output;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/change-display-svc.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'changeDisplayTo' })\r\nexport class ChangeDisplayToPipe implements PipeTransform {\r\n    transform(input: any, job: any): any {\r\n        if (job.displayTo)\r\n            return job.displayTo;\r\n        return input;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/change-display-to.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'displayStatusDetail'})\r\nexport class DisplayStatusDetailPipe implements PipeTransform\r\n{\r\n    transform(input:any, args:string[]): any {\r\n        input = input || '';\r\n        var out = \"\";\r\n        if (input == \"IP\")\r\n            return \"IN PROGRESS\";\r\n        if (input == \"DN\")\r\n            return \"PICKED UP\";\r\n\r\n        return \"ALLOCATED\";\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/display-status-detail.pipe.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { AlertController } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\n\r\n/*\r\n  Generated class for the ErrorModalServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class ErrorModalServiceProvider {\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider,\r\n    private logger: LogServiceProvider, private alertCtrl: AlertController) {\r\n    //console.log('Hello ErrorModalServiceProvider Provider');\r\n  }\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'ErrorModalServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  showModal(modalOptions) {\r\n    var errortext = \"Status:\" + modalOptions.error.status + \" url:\" + modalOptions.error.config.url;\r\n\r\n    let alert = this.alertCtrl.create({\r\n      title: this.pdaParams.getAppVersion(),\r\n      subTitle: modalOptions.headerText,\r\n      message: errortext,\r\n      buttons: ['Dismiss']\r\n    });\r\n    alert.present();\r\n\r\n    this.log.error('Error:' + JSON.stringify(modalOptions.error));\r\n  };//showModal ends here\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/error-modal-service/error-modal-service.ts","/* tslint:disable */\r\nimport { Injectable } from '@angular/core';\r\nimport { LoopBackConfig } from '../../lb.config';\r\n/**\r\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\r\n* @module LoggerService\r\n* @license MIT\r\n* @description\r\n* Console Log wrapper that can be disabled in production mode\r\n**/\r\n@Injectable()\r\nexport class LoggerService {\r\n\r\n  log(...args: any[]) {\r\n    if (LoopBackConfig.debuggable())\r\n    console.log.apply(console, args);\r\n  }\r\n\r\n  info(...args: any[]) {\r\n    if (LoopBackConfig.debuggable())\r\n    console.info.apply(console, args);\r\n  }\r\n\r\n  error(...args: any[]) {\r\n    if (LoopBackConfig.debuggable())\r\n    console.error.apply(console, args);\r\n  }\r\n\r\n  count(arg: string) {\r\n    if (LoopBackConfig.debuggable())\r\n    console.count(arg);\r\n  }\r\n\r\n  group(arg: string) {\r\n    if (LoopBackConfig.debuggable())\r\n    console.count(arg);\r\n  }\r\n\r\n  groupEnd() {\r\n    if (LoopBackConfig.debuggable())\r\n    console.groupEnd();\r\n  }\r\n\r\n  profile(arg: string) {\r\n    if (LoopBackConfig.debuggable())\r\n    console.count(arg);\r\n  }\r\n\r\n  profileEnd() {\r\n    if (LoopBackConfig.debuggable())\r\n    console.profileEnd();\r\n  }\r\n\r\n  time(arg: string) {\r\n    if (LoopBackConfig.debuggable())\r\n    console.time(arg);\r\n  }\r\n\r\n  timeEnd(arg: string) {\r\n    if (LoopBackConfig.debuggable())\r\n    console.timeEnd(arg);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/logger.service.ts","import { Injectable, OnInit } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\n\r\n/*\r\n  Generated class for the ImageFileServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n\r\n   // see: https://devdactic.com/complete-image-guide-ionic/\r\n*/\r\n@Injectable()\r\nexport class ImageFileServiceProvider {\r\n  logParams: any;\r\n  log: any;\r\n  images = [];\r\n  IMAGE_STORAGE_KEY = 'images';\r\n  storeImage: any;\r\n  removeImage: any;\r\n  set: any;\r\n  get: any;\r\n  image: { name: string, uploaded: boolean, notes: string, readyForUpload: string };\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider, public http: Http,\r\n    private logger: LogServiceProvider) {\r\n    //console.log('Hello ImageFileServiceProvider Provider');\r\n\r\n    this.logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'ImageFileServiceProvider' };\r\n    this.log = this.logger.getInstance(this.logParams);\r\n\r\n    this.storeImage = this.addImage;\r\n    this.removeImage = this.deleteImage;\r\n    this.set = this.setImageProperty;\r\n    this.get = this.getImageProperty;\r\n    this.images = this.getImages();\r\n  }\r\n\r\n  // Gets a list of image names from local storage - not the file system\r\n  getImages() {   \r\n     var img = localStorage.getItem(this.IMAGE_STORAGE_KEY);\r\n      if (img) {\r\n        this.images = JSON.parse(img);\r\n      } else {\r\n        this.images = [];\r\n      }\r\n \r\n    return this.images;\r\n  }\r\n\r\n\r\n  addImage = (imageData) => {\r\n    this.images.push(imageData);   \r\n    localStorage.setItem(this.IMAGE_STORAGE_KEY, JSON.stringify(this.images));\r\n  };\r\n\r\n  deleteImage = (imageId) => {\r\n    this.images = this.getImages();\r\n    var i = this.images.length;\r\n    while (i--) {\r\n      if (this.images[i].name === imageId) {\r\n        this.images.splice(i, 1);       \r\n        localStorage.setItem(this.IMAGE_STORAGE_KEY, JSON.stringify(this.images));\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  setImageProperty = (imageId, key, value) => {\r\n    this.images = this.getImages();\r\n    var i = this.images.length;\r\n    while (i--) {\r\n      if (this.images[i].name === imageId) {\r\n        this.images[i][key] = value;\r\n        localStorage.setItem(this.IMAGE_STORAGE_KEY, JSON.stringify(this.images));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  getImageProperty = (imageId, key) => {\r\n    this.images = this.getImages();\r\n    var i = this.images.length;\r\n    while (i--) {\r\n      if (this.images[i].name === imageId) {\r\n        return (this.images[i][key]);\r\n      }\r\n    }\r\n    return null;\t\t// didn't find what we were looking for\r\n  };\r\n\r\n  getImage = (imageId) => {\r\n    this.images = this.getImages();\r\n    var i = this.images.length;\r\n    while (i--) {\r\n      if (this.images[i].name === imageId) {\r\n        return (this.images[i]);\r\n      }\r\n    }\r\n    return null;\t\t// didn't find what we were looking for\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/image-file-service/image-file-service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { ConfigServiceProvider } from '../config-service/config-service';\r\nimport { WindowRefServiceProvider } from '../window-ref-service/window-ref-service';\r\n\r\n/*\r\n  Generated class for the EventServiceProvider provider.\r\n\r\n  Send a message to the mobile_event REST API.Used for e.g. LOGON, LOGOFF, maybe sending a message etc.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class EventServiceProvider {\r\n\r\n  constructor(public http: Http, private logger: LogServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider,\r\n    private configService: ConfigServiceProvider,\r\n    private windowRef: WindowRefServiceProvider) {\r\n    //console.log('Hello EventServiceProvider Provider');\r\n  }\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'EventServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\nsendMsg=(msgType, msgData?)=> {\r\n    var message = <any>{};\r\n    var data = msgData || '';\r\n\r\n    if (typeof (data) === 'object') {\r\n      message.data = data;\t\t// put object in as is\r\n    }\r\n    else {\r\n      message.data = {\r\n        driverId: this.pdaParams.getDriverId(),\r\n        appVersion: this.pdaParams.getAppVersion(),\r\n        messageText: data,\r\n        deviceHost: this.windowRef.nativeWindow.location.host\t\t\t// NOTE - this works in a browser only\r\n      };\r\n    }\r\n\r\n    message.event = msgType;\r\n    var serverIP = this.configService.getServerIP();\r\n    var serverPort = this.configService.getServerPort();\r\n    // TODO - implement POST method - should be POST as we are creating\r\n    this.http.get('http://' + serverIP + ':' + serverPort + '/api/mobile_event' + '?payload=' + encodeURIComponent(JSON.stringify(message)))\r\n      .map(res => this.log.info('mobile_event:' + JSON.stringify(message)));\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/event-service/event-service.ts","import { Injectable } from '@angular/core';\r\nimport { ConfigServiceProvider } from '../config-service/config-service'\r\nimport { SharedServiceProvider } from '../shared-service/shared-service'\r\n/*\r\n  Generated class for the PdaparamsServiceProvider provider.\r\n\r\n  Get driver ID from local storage\r\n     If no driver ID then this must be first time setup so prompt for it (IMEI as well?)     \r\n     Can then retrieve rest of driver details from tpm_pda_controller table\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class PdaparamsServiceProvider {\r\n\r\n  pda_full_statuses;\r\n  pda_depart_all;\r\n  pda_deliver_all;\r\n  pda_images;\r\n  pda_notes;\r\n  pda_signat_on_pu;\r\n  pda_signat_on_dpu;\r\n  pda_discrete_del_signat;\r\n  pda_client_conflicts;\r\n  pda_mandatory_photos;\r\n  debug;\r\n  driverId;\r\n  imageQuality;\r\n  // TODO - siteId needs to be in a config file somewhere\r\n  localdriver = {\r\n    driverId: 0,\r\n    accessAllowed: false,\r\n    loggedOn: false,\r\n    lastUpdate: 0,\r\n    debugMode: false\r\n  };\r\n  debugMode = this.localdriver.debugMode;\r\n  experimental = true;\t\t// enable any experimental features\r\n  multileg = true;\t\t\t\t// enable separate pods for multileg jobs\r\n  // v2.37 - defaulted to false while we work out best way to sync when multiple jobs updated quickly within local storage\r\n  // which in turn trigger multiple replication processes which caused some changes to be missed\r\n  jobdisplay = false;\t\t\t// jobs tab does a quick display from local storage while sync takes place\r\n  multiSelect = true;\t\t\t// Allow multi job select for Accept; Pickup etc.\r\n  GPSInterval = 60000;\t\t\t// 1 minute default to grab GPS data (milliseconds)\r\n  alwaysGetGPS = false;\r\n  pda_jsea_on = false;\r\n\r\n  jobDetailOneDayOnly;\r\n\r\n  imagePollTime = 60000 * 5;\t\t// 5 minute default\r\n  imageUpload = true;\r\n  syncDL = false\t\t\t\t\t\t// sync DL jobs as well\r\n\r\n\r\n  constructor(private configService: ConfigServiceProvider, private sharedService: SharedServiceProvider) {\r\n    //console.log('Hello PdaparamsServiceProvider Provider');\r\n    this.driverId = this.getDriverId();\r\n    if (this.sharedService.testing)\r\n      this.jobDetailOneDayOnly = false;\r\n    else\r\n      this.jobDetailOneDayOnly = true;\r\n  }//Constructor ends\r\n\r\n  getParams() {\r\n    this.localdriver = JSON.parse(localStorage.getItem('osc-driver-info')) || this.localdriver;\r\n    return this.localdriver;\r\n  };\r\n\r\n  getAppVersion() {\r\n    return this.configService.appConfig.version;\r\n  };\r\n\r\n  getDriverId() {\r\n    this.localdriver = this.getParams();\r\n    this.driverId = this.localdriver.driverId;\r\n    return this.localdriver.driverId;\r\n  };\r\n\r\n  getSiteId() {\r\n    // NOTE - should be in service but got circular dependancy when injecting siteService\r\n    var siteId = localStorage.getItem('clientId');\r\n    return siteId;\r\n  };\r\n\r\n  clearDriverInfo() {\r\n    localStorage.removeItem('osc-driver-info');\r\n  };\r\n\r\n  setDriverInfo(driverId) {\r\n    this.localdriver.driverId = driverId;\r\n    this.driverId = driverId;\r\n    localStorage.setItem('osc-driver-info', JSON.stringify(this.localdriver));\r\n  };\r\n\r\n  setDebugMode(value) {\r\n    this.localdriver.debugMode = value || false;\r\n    localStorage.setItem('osc-driver-info', JSON.stringify(this.localdriver));\r\n  };\r\n\r\n  logonDriver() {\r\n    this.localdriver = this.getParams();\r\n    this.localdriver.loggedOn = true;\r\n    this.localdriver.lastUpdate = Date.now();\r\n    localStorage.setItem('osc-driver-info', JSON.stringify(this.localdriver));\r\n  };\r\n  logoffDriver() {\r\n    this.localdriver = this.getParams();\r\n    this.localdriver.loggedOn = false;\r\n    this.localdriver.lastUpdate = Date.now();\r\n    localStorage.setItem('osc-driver-info', JSON.stringify(this.localdriver));\r\n  };\r\n  isDrvLoggedOff() {\r\n    this.localdriver = this.getParams();\r\n    if (this.localdriver.loggedOn) {\r\n      return false;\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  };\r\n  isDrvLoggedOn() {\r\n    this.localdriver = this.getParams();\r\n    if (this.localdriver.loggedOn) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkDriverStatus() {\r\n    // If device is resumed first time on a date after last login then auto logoff the driver\r\n    // which will ensure he has to login in again before processing any work\r\n    // (so in effect an auto logout overnight)\r\n\r\n    // TODO - need a date check etc.\r\n    //this.logoffDriver();\r\n  };\r\n\r\n  setParameter(params, cb) {\r\n    // params is object of (maybe array) of key/value pair(s) for us to set\r\n    // e.g. { \"experimental\":false}\r\n    for (var key in params) {\r\n      if (this.hasOwnProperty(key)) {\r\n        this[key] = params[key];\r\n      }\r\n    }\r\n    if (cb)\r\n      cb();\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/pdaparams-service/pdaparams-service.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, AlertController, Tabs } from 'ionic-angular';\r\n\r\nimport { LoopBackConfig } from '../../../shared/sdk/index';\r\nimport { JseaDriverQuestionsApi } from '../../../shared/sdk/services/custom/JseaDriverQuestions';\r\n\r\nimport { ConfigServiceProvider } from '../../providers/config-service/config-service';\r\nimport { LogServiceProvider } from '../../providers/log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../../providers/pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../../providers/siteconfig-service/siteconfig-service';\r\nimport { BaseServiceProvider } from '../../providers/base-service/base-service';\r\nimport { SharedServiceProvider } from '../../providers/shared-service/shared-service';\r\nimport { JseaServiceProvider } from '../../providers/jsea-service/jsea-service';\r\n\r\nimport { TabsPage } from '../tabs/tabs';\r\n\r\nimport { LoginPage } from '../login/login';\r\ndeclare const lbclient: any;\r\n\r\n/**\r\n * Generated class for the JseaPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-jsea',\r\n  templateUrl: 'jsea.html',\r\n})\r\nexport class JseaPage {\r\n\r\n  t: Tabs = this.navCtrl.parent;\r\n  username: any;\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'JobDetailsPage' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  pda_jsea_on;\r\n  lpda_jsea_on;\r\n  jseaQuestions = [];\r\n  LocalJseaDriverAnswers = lbclient.models.LocalJseaDriverAnswers;\r\n  jseaAnswers_sync = lbclient.jseaAnswers_sync;\r\n  driverId: number;\r\n  firstlogin;\r\n  loginFlag = this.pdaParams.isDrvLoggedOn();\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, private configService: ConfigServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider, private siteConfig: SiteconfigServiceProvider,\r\n    private logger: LogServiceProvider, private base: BaseServiceProvider, private sharedService: SharedServiceProvider,\r\n    private jseaService: JseaServiceProvider, private alertCtrl: AlertController,\r\n    private jseaDriverQuestionsApi: JseaDriverQuestionsApi) {\r\n    this.username = navParams.data;\r\n    //console.log(\"JseaPage loading...\");\r\n    LoopBackConfig.setBaseURL(configService.apiURL);\r\n    LoopBackConfig.setApiVersion(configService.API_VERSION);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.firstlogin = localStorage.getItem('firstlogin');\r\n    this.driverId = this.pdaParams.getDriverId();\r\n    if (this.sharedService.testing) {\r\n      this.pda_jsea_on = 'Y';\r\n      this.lpda_jsea_on = 'Y';\r\n    }\r\n    else {\r\n      this.pda_jsea_on = this.siteConfig.getSiteConfigValue('PDA_JSEA_ON');\r\n      this.lpda_jsea_on = this.pdaParams.pda_jsea_on ? 'Y' : 'N';\r\n    }\r\n\r\n    if (this.pda_jsea_on != 'Y' && this.lpda_jsea_on != 'Y') {\r\n      let alert = this.alertCtrl.create({\r\n        title: 'Module not installed',\r\n        subTitle: 'This module is not installed.',\r\n        buttons: [{\r\n          text: 'OK',\r\n          handler: () => {\r\n            const navTransition = alert.dismiss();\r\n            //console.log('OK clicked');\r\n            navTransition.then(() => {\r\n              this.t.select(0);\r\n            });\r\n            return false;\r\n          }\r\n        }]\r\n      });\r\n      alert.present();\r\n    }\r\n    else {\r\n      var formType = this.jseaService.getServiceFormType();\r\n      var _allfilter = {\r\n        \"where\": { \"jdqType\": formType },\r\n        \"order\": \"jdqOrder ASC\"\r\n      }\r\n      var filter = Object.assign({}, _allfilter);\r\n      this.jseaDriverQuestionsApi.find(filter).subscribe((questsarr) => {\r\n        // TODO - need to check error and only show jobs if no error\r\n        this.jseaQuestions = questsarr;\r\n      });\r\n    }//End of else\r\n  }//End of ionViewDidEnter()\r\n\r\n\r\n  checkJdqResponse = function (jdqCbox, jdqType, jdqOrder, jdqNewForm, jdqNewFormType) {\r\n    // check response when items are changed in case we need to do\r\n    // any additional work e.g. load some more questions\r\n\r\n    if (jdqCbox) {\t\t\t\t// box has been ticked\r\n      if (jdqNewForm) {\t\t// new form required\r\n        // jdqNewFormType has the type we need\r\n        var filter = {\r\n          \"where\": { \"jdqType\": jdqNewFormType },\r\n          \"order\": \"jdqOrder ASC\"\r\n        };\r\n\r\n        this.jseaDriverQuestionsApi.find(filter)\r\n          .subscribe((questsarr) => {\r\n            var len = questsarr.length;\r\n            for (var i = 0; i < len; i++) {\r\n              this.jseaQuestions.push(questsarr[i]);\r\n            }\r\n          });\r\n      }\r\n    }\r\n    else {\t\t// box unticked - might need to remove additional form data\r\n      if (jdqNewForm) {\t\t// new form required\r\n        for (var i = this.jseaQuestions.length - 1; i >= 0; i--) {\r\n          if (this.jseaQuestions[i].jdqType === jdqNewFormType) {\r\n            this.jseaQuestions.splice(i, 1);\r\n            // break;       //<-- Uncomment  if only the first term has to be removed\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  doSubmitWork = function () {\r\n    var li;\r\n    var llen;\r\n    //They Have Submited a list of Ticks Y/N and we now have to create an array of answers\r\n    // one row for each answer\t\r\n    var ljobnum = this.jseaService.getServiceJobNum();\r\n    var ljobdate = this.jseaService.getServiceJobDate();\r\n    var jobStatusType = this.jseaService.getServiceStatusType();\r\n    var formLeg = this.jseaService.getServiceFormLeg();\r\n    llen = this.jseaQuestions.length;\r\n\r\n    for (li = 0; li < llen; li++) {\r\n      var AnswerSession = new lbclient.models.LocalJseaDriverAnswers();\r\n      AnswerSession.jdaSeqnum = 0;\r\n\r\n\r\n      AnswerSession.jdaJobNum = ljobnum;\r\n      AnswerSession.jdaJobBday = ljobdate;\t\t// is a date object already \r\n      AnswerSession.jdaDriverId = this.pdaParams.getDriverId();\r\n      AnswerSession.jdaFormType = this.jseaQuestions[li].jdqType;\r\n      AnswerSession.jdaFormLeg = formLeg;\r\n      AnswerSession.jdaOrder = this.jseaQuestions[li].jdqOrder;\r\n      AnswerSession.jdaCheckBox = this.jseaQuestions[li].jdqCbox;\r\n      AnswerSession.jdaJobStatusType = jobStatusType;\r\n      AnswerSession.save();\r\n    }\r\n    this.jseaAnswers_sync();\r\n  }\r\n\r\n\r\n  /*========================================*/\r\n  /*      JSEA SUBMIT   */\r\n  /*========================================*/\r\n  jseaSubmit = function () {\r\n    let subconfirmPopup = this.alertCtrl.create({\r\n      title: 'Jsea Session Confirm',\r\n      message: 'Are you sure you want to submit your Answers session to the database ?',\r\n      buttons: [\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            const navTransition = subconfirmPopup.dismiss();\r\n            this.log.debug('User has Submitted the Jsea session');\r\n            this.jseaService.setJseaIsCaptured(\"Y\");\r\n            //Handle Answers\r\n            this.doSubmitWork();\r\n            navTransition.then(() => {\r\n              //this.navCtrl.setRoot(TabsPage);\r\n              this.t.select(0);\r\n            });\r\n            /*  navTransition.then(() => {\r\n               if (this.firstlogin === 'true') {\r\n                 localStorage.setItem('firstlogin', 'false');\r\n                 this.navCtrl.setRoot(TabsPage);\r\n               }\r\n               else\r\n                 this.t.select(0);\r\n \r\n             }); */\r\n            return false;\r\n          }\r\n        },\r\n        {\r\n          text: 'No',\r\n          handler: () => {\r\n            this.log.debug('User has CANCELLED out of a Jsea session SUBMIT Doing nothing');\r\n            return;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    subconfirmPopup.present();\r\n  }\r\n\r\n  /*========================================*/\r\n  /*        SCAN SESSION CANCEL   */\r\n  /*========================================*/\r\n  jseaCancel = function () {\r\n    let confirmPopup = this.alertCtrl.create({\r\n      title: 'CANCEL Jsea Session',\r\n      message: 'Are you sure you want to CANCEL this jsea session (You will lose all data )?',\r\n      buttons: [\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            const navTransition = confirmPopup.dismiss();\r\n            this.log.debug('User has Cancelled the jsea session');\r\n            navTransition.then(() => {\r\n              //this.navCtrl.setRoot(TabsPage);\r\n              this.t.select(0);\r\n            });\r\n            /* navTransition.then(() => {\r\n              if (this.firstlogin === 'true') {\r\n                this.navCtrl.push(LoginPage);\r\n                //return;\r\n              } else {\r\n                this.t.select(0);\r\n              }\r\n            }); */\r\n            return false;\r\n          }\r\n        },\r\n        {\r\n          text: 'No',\r\n          handler: () => {\r\n            this.log.debug('User has CANCELLED out of a Jsea session CANCEL');\r\n            return;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    confirmPopup.present();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/jsea/jsea.ts"],"sourceRoot":""}