{"version":3,"sources":["../../shared/sdk/services/custom/GpsHistory.ts","../../src/providers/message-service/message-service.ts","../../src/providers/sqlite-service/sqlite-service.ts","../../src/providers/jsea-service/jsea-service.ts","../../src/providers/gps-audit-service/gps-audit-service.ts","../../src/providers/connectivity-monitor/connectivity-monitor.ts","../../src/providers/pdaparams-service/pdaparams-service.ts","../../src/providers/background-geolocation-service/background-geolocation-service.ts","../../src/providers/job-service/job-service.ts","../../src/providers/event-service/event-service.ts","../../src/providers/device-diagnostic-service/device-diagnostic-service.ts","../../shared/sdk/lb.config.ts","../../src/providers/log-service/log-service.ts","../../shared/sdk/services/core/auth.service.ts","../../shared/sdk/storage/storage.swaps.ts","../../shared/sdk/models/Job.ts","../../shared/sdk/models/Installation.ts","../../shared/sdk/models/JseaDriverAnswers.ts","../../shared/sdk/models/BarcodeHist.ts","../../shared/sdk/models/DeviceDiagnostics.ts","../../shared/sdk/services/custom/SDKModels.ts","../../shared/sdk/services/custom/DeviceDiagnostics.ts","../../src/providers/customerconn-service/customerconn-service.ts","../../src/providers/fixed-queue-service/fixed-queue-service.ts","../../shared/sdk/services/core/error.service.ts","../../src/providers/base-service/base-service.ts","../../shared/sdk/sockets/socket.connections.ts","../../src/providers/image-service/image-service.ts","../../src/providers/image-file-service/image-file-service.ts","../../src/providers/gps-service/gps-service.ts","../../src/providers/sod-service/sod-service.ts","../../shared/sdk/services/custom/JseaDriverQuestions.ts","../../src/providers/device-service/device-service.ts","../../src/providers/job-replication-service/job-replication-service.ts","../../shared/sdk/services/core/base.service.ts","../../node_modules/@angular/core/esm5 lazy","../../src/providers/shared-service/shared-service.ts","../../src lazy","../../shared/sdk/models/BaseModels.ts","../../shared/sdk/models/JobChange.ts","../../shared/sdk/models/TpmPdaController.ts","../../shared/sdk/models/Application.ts","../../shared/sdk/models/Notification.ts","../../shared/sdk/models/Push.ts","../../shared/sdk/models/Mobile_event.ts","../../shared/sdk/models/SiteConfig.ts","../../shared/sdk/models/DespatchToDriverMessages.ts","../../shared/sdk/models/JseaDriverQuestions.ts","../../shared/sdk/models/JseaDriverAnswersChange.ts","../../shared/sdk/models/Photocontainer.ts","../../shared/sdk/models/Image.ts","../../shared/sdk/models/BarcodeHistChange.ts","../../shared/sdk/storage/cookie.browser.ts","../../shared/sdk/storage/storage.browser.ts","../../shared/sdk/sockets/socket.driver.ts","../../src/providers/siteconfig-service/siteconfig-service.ts","../../shared/sdk/services/core/real.time.ts","../../shared/sdk/models/index.ts","../../shared/sdk/services/custom/Job.ts","../../shared/sdk/services/custom/JobChange.ts","../../shared/sdk/services/custom/TpmPdaController.ts","../../shared/sdk/services/custom/Application.ts","../../shared/sdk/services/custom/Installation.ts","../../shared/sdk/services/custom/Notification.ts","../../shared/sdk/services/custom/Push.ts","../../shared/sdk/services/custom/Mobile_event.ts","../../shared/sdk/services/custom/SiteConfig.ts","../../shared/sdk/services/custom/DespatchToDriverMessages.ts","../../shared/sdk/services/custom/JseaDriverAnswers.ts","../../shared/sdk/services/custom/JseaDriverAnswersChange.ts","../../shared/sdk/services/custom/Photocontainer.ts","../../shared/sdk/services/custom/Image.ts","../../shared/sdk/services/custom/BarcodeHist.ts","../../shared/sdk/services/custom/BarcodeHistChange.ts","../../src/providers/window-ref-service/window-ref-service.ts","../../src/providers/exit-service/exit-service.ts","../../src/providers/push-service/push-service.ts","../../src/providers/navigation-service/navigation-service.ts","../../src/app/app.component.ts","../../src/providers/job-changed-service/job-changed-service.ts","../../src/providers/login-service/login-service.ts","../../src/providers/barcode-replication-service/barcode-replication-service.ts","../../src/providers/sync-service/sync-service.ts","../../src/providers/jobnote-replication-service/jobnote-replication-service.ts","../../src/providers/attach-service/attach-service.ts","../../src/providers/jsea-answers-replication-service/jsea-answers-replication-service.ts","../../src/providers/driver-message-service/driver-message-service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../shared/sdk/sockets/socket.browser.ts","../../ws (ignored)","../../shared/sdk/services/core/io.service.ts","../../shared/sdk/models/FireLoop.ts","../../shared/sdk/models/FireLoopRef.ts","../../shared/sdk/services/core/index.ts","../../src/providers/util-service/util-service.ts","../../shared/sdk/services/custom/index.ts","../../src/providers/config-service/config-service.ts","../../src/providers/platform-ready-service/platform-ready-service.ts","../../src/providers/log-service/log-service-instance.ts","../../shared/sdk/index.ts","../../src/providers/barcode-service/barcode-service.ts","../../shared/sdk/services/index.ts","../../shared/sdk/services/custom/logger.service.ts","../../shared/sdk/models/GpsHistory.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { GpsHistory } from '../../models/GpsHistory';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `GpsHistory` model.\n *\n * **Details**\n *\n * Controlling Pda Device Management\n */\n@Injectable()\nexport class GpsHistoryApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `GpsHistory` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/gpsHistorys\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id gpsHistory id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `GpsHistory` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/gpsHistorys/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `GpsHistory`.\n   */\n  public getModelName() {\n    return \"GpsHistory\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/GpsHistory.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { JobApi } from '../../../shared/sdk/services';\r\n\r\n\r\ndeclare const lbclient: any;\r\n\r\nimport { FixedQueueServiceProvider } from '../fixed-queue-service/fixed-queue-service';\r\nimport { DeviceServiceProvider } from '../device-service/device-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { JobServiceProvider } from '../job-service/job-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { UtilServiceProvider } from '../util-service/util-service';\r\n\r\n/*\r\n  Generated class for the MessageServiceProvider provider.\r\n\r\n  A Service to handle incoming PDA messages \r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n/*   interface payload {\r\n    command:string,\r\n    params:{}\r\n   } */\r\n\r\n@Injectable()\r\nexport class MessageServiceProvider {\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'MessageServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  /* Riyaz: fixedQueue is no longer imported as an npm library.\r\n  It is now rewritten as an angular2 service within our codebase */\r\n  msgQ = this.fixedQueue.create(50);// Store last x no. driver messages  \t\r\n\r\n  //newMsgCount = 0;\t\t\t// keep a count of new messages - will reset once driver has seen them\r\n  deleteJobChangeData = lbclient.deleteJobChangeData;\r\n  deleteJseaChangeData = lbclient.deleteJseaChangeData;\r\n\r\n  constructor(private fixedQueue: FixedQueueServiceProvider,\r\n    private logger: LogServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider,\r\n    private deviceService: DeviceServiceProvider, private jobApi: JobApi,\r\n    private jobService: JobServiceProvider,\r\n    private sharedService: SharedServiceProvider,\r\n    private utilService: UtilServiceProvider) {\r\n    // console.log('Hello MessageServiceProvider Provider');\r\n    this.sharedService.newMsgCount = 0;\r\n  }\r\n\r\n  isJson(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  dumpLocalStorage() {\r\n    this.log.info(\"DUMPING LOCAL STORAGE --STARTS\");\r\n    var logmsg = <any>{};\r\n    var dblist = ['osc-local-db', 'osc-driver-info', 'osc-push-credentials'];\r\n    var len = dblist.length;\r\n\r\n    // dump ALL items, not just out predefined ones\r\n    len = localStorage.length;\r\n    this.log.info(\"Dumping localstorage...\");\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      var key = localStorage.key(i);\r\n      var value = localStorage[key];\r\n\r\n\r\n      if (key != 'jobMetadata') {\r\n        logmsg.type = 'dumpLocalStorage:' + key;\r\n\r\n        if (this.isJson(value))\r\n          logmsg.data = JSON.parse(value);\r\n        else\r\n          logmsg.data = value;\r\n\r\n        this.log.info(logmsg);\r\n      }\r\n    }\r\n\r\n    this.log.info(\"DUMPING LOCAL STORAGE --ENDS\");\r\n  }\r\n\r\n  clearLocalStorage() {\r\n    var logmsg = <any>{};\r\n    logmsg.type = 'clearLocalStorage';\r\n    // clear local storage then log contents - should be empty\r\n    localStorage.removeItem('osc-local-db');\r\n    logmsg.data = JSON.parse(localStorage.getItem('osc-local-db'));\r\n    this.log.info(logmsg);\r\n  }\r\n\r\n\r\n  setLocalStorage(params) {\r\n    var logmsg = <any>{};\r\n\r\n    logmsg.type = 'setLocalStorage';\r\n\r\n    for (var key in params) {\r\n      var value = params[key];\r\n      localStorage.setItem(key, value);\r\n\r\n      logmsg.type = 'setLocalStorage:' + key;\r\n      logmsg.data = localStorage.getItem(key);\r\n      this.log.info(logmsg);\r\n    }\r\n  }\r\n\r\n  clearChangeData() {\r\n    var logmsg = <any>{};\r\n    logmsg.type = 'clearChangeData';\r\n    // clear job-change and checkpoint data from local storage then log contents\r\n    this.deleteJobChangeData = (err, changeData) => {\r\n      if (err)\r\n        this.log.error(err);\r\n      if (changeData)\r\n        this.log.debug(changeData);\r\n      logmsg.data = JSON.parse(localStorage.getItem('osc-local-db'));\r\n      this.log.info(logmsg);\r\n    }\r\n\r\n    // clear jsea change data\r\n    this.deleteJseaChangeData = (err, changeData) => {\r\n      if (err)\r\n        this.log.error(err);\r\n      if (changeData)\r\n        this.log.debug(changeData);\r\n      logmsg.data = JSON.parse(localStorage.getItem('osc-local-db'));\r\n      this.log.info(logmsg);\r\n    }\r\n  }\r\n\r\n  dumpDeviceInfo() {\r\n    var logmsg = <any>{};\r\n    logmsg.type = 'Dumping Device Info..';\r\n\r\n    var deviceData = this.deviceService.getDevice();\r\n    //var i = this.deviceService.getDevice()\r\n    logmsg.data = JSON.stringify(deviceData);\r\n    this.log.info(logmsg);\r\n  }\r\n\r\n  setPdaParam(params) {\r\n    var logmsg = <any>{};\r\n    logmsg.type = 'setPdaParam';\r\n    this.pdaParams.setParameter(params, (err) => {\r\n      if (err)\r\n        this.log.error(err);\r\n      this.log.info(logmsg);\r\n    });\r\n  }\r\n\r\n  deleteJobs(params) {\r\n    var logmsg = <any>{};\r\n    logmsg.type = 'deleteJobs';\r\n\r\n    var delfilter = params;\r\n    this.log.info('filter:' + JSON.stringify(delfilter));\r\n\r\n    // must supply where filter\r\n    if (delfilter.where) {\r\n\r\n      this.jobApi.find(delfilter, (err, jobs) => {\r\n        var len = jobs.length;\r\n        this.log.info(\"deleting:\" + len + \" legs\");\r\n\r\n        for (var leg = 0; leg < len; leg++) {\r\n          var job = jobs[leg];\r\n          this.log.info(\"delete leg:\" + leg + \" job:\" + job.mobjobSeq);\r\n          job.delete();\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.log.debug('No where filter provided');\r\n    }\r\n  }\r\n\r\n  deleteOldJobs(params) {\r\n    // REST API params object e.g.  { \"daysback\": 14 }\r\n    var daysback = params.daysback || 7;\t\t// default to 7 days\r\n    this.jobService.deleteOldJobs(daysback);\r\n\r\n  }\r\n\r\n  deleteJseaStatuses(params) {\r\n    // REST API params object e.g.  { \"jobNum\": 12345 }\r\n    this.jobService.deleteJseaStatuses(params.jobNum);\r\n  }\r\n\r\n  startWatching() {\r\n\r\n    console.log(\"startWatching: MessageServiceProvider\");\r\n    this.log.debug(\"startWatching\");\r\n\r\n    // PDA commands \r\n    // From REST endpoint /TpmPdaControllers/sendCommandToPDA/{driver}\r\n    this.sharedService.commandToPDA.subscribe(payload => {\r\n\r\n      this.log.debug('commandToPDA:received:' + JSON.stringify(payload));\r\n      //console.log('commandToPDA:received 1:' + JSON.stringify(payload));\r\n\r\n      switch (payload.command) {\r\n        case 'dumpLocalStorage':\r\n          this.dumpLocalStorage();\r\n          break;\r\n\r\n        case 'clearLocalStorage':\r\n          this.clearLocalStorage();\r\n          break;\r\n\r\n        case 'setLocalStorage':\r\n          this.setLocalStorage(payload.params);\r\n          break;\r\n\r\n        case 'clearChangeData':\r\n          this.clearChangeData();\r\n          break;\r\n\r\n        case 'setPdaParam':\r\n          this.setPdaParam(payload.params);\r\n          break;\r\n\r\n        case 'deleteJobs':\r\n          this.deleteJobs(payload.params);\r\n          break;\r\n\r\n        case 'deleteOldJobs':\r\n          this.deleteOldJobs(payload.params);\r\n          break;\r\n\r\n        case 'deleteJseaStatuses':\r\n          this.deleteJseaStatuses(payload.params);\r\n          break;\r\n\r\n\r\n        default:\r\n          var logmsg = <any>{};\r\n          logmsg.type = 'commandToPDA';\r\n          this.log.error('unknown command:' + payload.command);\r\n          //console.log('unknown command:' + payload.command);\r\n          break;\r\n      }\r\n\r\n    });\r\n\r\n    // Message to driver\r\n    //$rootScope.$on('messageToDriver', function (event, payload) {\r\n    this.sharedService.messageToDriver.subscribe(payload => {\r\n\r\n      //console.log('messageToDriver:received 1:' + JSON.stringify(payload));\r\n      // payload.message has the message text\r\n\r\n      //if (payload !== null) {\r\n      if (!this.utilService.isEmpty(payload)) {\r\n        //console.log('messageToDriver:received 2:' + JSON.stringify(payload));\r\n        this.msgQ.push(payload.message);\r\n        this.sharedService.newMsgCount++;\r\n      }\r\n\r\n    });\r\n\r\n    // more watchers if required\r\n  }\r\n\r\n  getMessages() {\r\n    // get all messages\r\n    return (this.msgQ);\r\n  }\r\n\r\n  getNewMesssageCount() {\r\n    return (this.sharedService.newMsgCount);\r\n  }\r\n\r\n  resetNewMessageCount() {\r\n    this.sharedService.newMsgCount = 0;\r\n    //this.sharedService.messageToDriver.next({message:''});\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/message-service/message-service.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\nimport { LogServiceProvider } from '../../providers/log-service/log-service';\n\n/*\n  Generated class for the SqliteServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class SqliteServiceProvider {\n\n  private db = null;\n  private dbname = 'tplus.db';\n  // (<any>window).\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'SqliteServiceProvider' };\n  log = this.logger.getInstance(this.logParams);\n\n  constructor(public http: HttpClient, private pdaParams: PdaparamsServiceProvider, private logger: LogServiceProvider) {\n    this.log.info('Hello SqliteServiceProvider Provider');\n    /*  if (!this.isOpen) {\n       document.addEventListener('deviceready', this.opendbOnDeviceReady, false);\n     } */\n  }//constructor ends\n\n  opendbOnDeviceReady = () => {\n    //this.db = (<any>window).sqlitePlugin.openDatabase({ name: 'test.db', location: 'default' });\n    return new Promise((resolve, reject) => {\n      this.db = (<any>window).sqlitePlugin.openDatabase({ name: this.dbname, location: 'default' }, (db) => {\n        // Here, you might create or open the table.\n        db.transaction((tx) => {\n          // ...\n          tx.executeSql('CREATE TABLE IF NOT EXISTS tplusStorage (item,itemvalue)', (tx, res) => {\n            this.log.info(\"tplusStorage table created -- \" + res);\n            resolve(true);\n          });\n        }, (error) => {\n          this.log.error('Create transaction error: ' + error.message);\n          resolve(false);\n        }, () => {\n          this.log.info('Create transaction ok');\n          resolve(true);\n        });\n      }, (error) => {\n        this.log.error('Open database ERROR: ' + JSON.stringify(error));\n        resolve(false);\n      });\n    });\n  }\n\n\n\n  set = (item, itemvalue) => {\n    //  let itemvalue = JSON.stringify(itemval);\n    if (this.db == null || this.db === 'undefined') {\n      this.log.error(\"set: Db is undefined.\");\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      this.db.transaction((tx) => {\n\n        var query = \"INSERT OR REPLACE INTO tplusStorage (item,itemvalue) VALUES (?,?)\";\n\n        tx.executeSql(query, [item, itemvalue], (tx, res) => {\n          // this.log.info(\"Sqlite Storage : Inserted item is :\" + item + \" for itemvalue:\" + itemvalue);\n          //this.log.info(\"insertId: \" + res.insertId + \" -- probably 1\");\n          this.log.info(\"INSERT OR REPLACE rowsAffected: \" + res.rowsAffected + \" -- should be 1\");\n          resolve(true);\n        },\n          (tx, error) => {\n            this.log.error('INSERT | UPDATE error: ' + error.message);\n            resolve(false);\n          });\n      }, (error) => {\n        this.log.error('Insert | update transaction error: ' + error.message);\n        resolve(false);\n      }, () => {\n        this.log.info('Insert | update transaction ok');\n        resolve(true);\n      });\n\n    });\n  }\n\n  get = (item) => {\n    if (this.db == null || this.db === 'undefined') {\n      this.log.error(\"get: Db is undefined.\");\n      return;\n    }\n    var res;\n\n    return new Promise((resolve, reject) => {\n      this.db.transaction((tx) => {\n        var query = \"SELECT itemvalue FROM tplusStorage WHERE item = ?\";\n        tx.executeSql(query, [item], (tx, resultSet) => {\n          this.log.info('Select query item is :' + item);\n          if (resultSet.rows.length > 0 && resultSet.rows.item(0).itemvalue) {\n            res = resultSet.rows.item(0).itemvalue;\n            resolve(res);\n          }\n          else {\n            res = 0;\n            resolve(res);\n          }\n        },\n          (tx, error) => {\n            //reject(error);\n\n            this.log.error('SELECT error: ' + error.message);\n            resolve(0);\n          });\n      }, (error) => {\n        //reject(false);\n        this.log.error('Select transaction error: ' + error.message);\n        resolve(0);\n      }, () => {\n        this.log.info('Select transaction ok');\n        resolve(res);\n      });\n    });\n  }\n\n  getAndSetToLocalStorage = () => {\n    if (this.db == null || this.db === 'undefined') {\n      this.log.error(\"getAndSetToLocalStorage: Db is undefined.\");\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      this.db.transaction((tx) => {\n        var query = \"SELECT item,itemvalue FROM tplusStorage\";\n        tx.executeSql(query, [], (tx, resultSet) => {\n          for (var x = 0; x < resultSet.rows.length; x++) {\n            this.log.info(\"item: \" + resultSet.rows.item(x).item + \", ItemValue: \" + resultSet.rows.item(x).itemvalue);\n            localStorage.setItem(resultSet.rows.item(x).item, resultSet.rows.item(x).itemvalue);\n\n            if (resultSet.rows.item(x).item == 'driverId') {\n              this.pdaParams.setDriverInfo(resultSet.rows.item(x).itemvalue);\n              this.pdaParams.logoffDriver();\n            }\n          }\n          resolve(true);\n        },\n          (tx, error) => {\n            this.log.error('SELECT error: ' + error.message);\n            resolve(false);\n          });\n      }, (error) => {\n        this.log.error('Select transaction error: ' + error.message);\n        resolve(false);\n      }, () => {\n        this.log.info('getAndSetToLocalStorage transaction ok');\n        resolve(true);\n      });\n    });\n  }\n\n\n\n  clear = () => {\n    if (this.db == null || this.db === 'undefined') {\n      this.log.error(\"clear: Db is undefined.\");\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      this.db.transaction((tx) => {\n        var query = \"DELETE FROM tplusStorage\";\n        tx.executeSql(query, [], (tx, res) => {\n          this.log.info(\"rowsAffected: \" + res.rowsAffected);\n          resolve(true);\n        },\n          (tx, error) => {\n            reject(error);\n            this.log.error('DELETE error: ' + error.message);\n          });\n      }, (error) => {\n        resolve(false);\n        this.log.error('Delete transaction error: ' + error.message);\n      }, () => {\n        this.log.info('Delete transaction ok');\n      });\n    });\n  }\n\n\n  printAll = () => {\n    this.db.transaction((tx) => {\n      var query = \"SELECT item, itemvalue FROM tplusStorage\";\n      tx.executeSql(query, [], (tx, resultSet) => {\n        this.log.info(\"----------START PRINTING VALUES---------------\");\n        for (var x = 0; x < resultSet.rows.length; x++) {\n          this.log.info(\"Item: \" + resultSet.rows.item(x).item +\n            \", Value: \" + resultSet.rows.item(x).itemvalue);\n          this.log.info(\"-------------------------\");\n        }\n        this.log.info(\"---------END PRINTING VALUES----------------\");\n      },\n        (tx, error) => {\n          this.log.error('printAll error: ' + error.message);\n        });\n    }, (error) => {\n      //reject(false);\n      this.log.error('PRINTALL transaction error: ' + error.message);\n    }, () => {\n      this.log.info('PRINTALL transaction ok');\n    });\n  }\n\n\n  sqliteStorageList = () => {\n    return new Promise((resolve, reject) => {\n      this.db.transaction((tx) => {\n        var query = \"SELECT item,itemvalue FROM tplusStorage\";\n        tx.executeSql(query, [], (tx, resultSet) => {\n          resolve(resultSet.rows.item);\n        },\n          (tx, error) => {\n            //reject(error);\n            resolve(false);\n            //this.log.info('SELECT error: ' + error.message);\n          });\n      }, (error) => {\n        reject(error);\n        //reject(false);\n        //this.log.info('Select transaction error: ' + error.message);\n      }, () => {\n        this.log.info('getAndSetToLocalStorage transaction ok');\n      });\n    });\n\n  }\n\n  ////////////////////////////////////////////////////////////////////////\n\n  echoTest = () => {\n    document.addEventListener('deviceready', () => {\n      (<any>window).sqlitePlugin.echoTest(() => {\n        this.log.info('ECHO test OK');\n      });\n    });\n  }\n  selfTest = () => {\n    document.addEventListener('deviceready', () => {\n      (<any>window).sqlitePlugin.selfTest(() => {\n        this.log.info('SELF test OK');\n      });\n    });\n  }\n  sqlStringTest = () => {\n    document.addEventListener('deviceready', () => {\n      var db = (<any>window).sqlitePlugin.openDatabase({ name: this.dbname, location: 'default' });\n      db.transaction((tr) => {\n        tr.executeSql(\"SELECT upper('Test string') AS upperString\", [], (tr, rs) => {\n          this.log.info('Got upperString result: ' + rs.rows.item(0).upperString);\n        });\n      });\n\n    });\n  }//sqlStringTest ends\n\n\n  closeDB = () => {\n    this.db.close(() => {\n      this.log.info(\"DB closed!\");\n    }, (error) => {\n      this.log.error(\"Error closing DB:\" + error.message);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sqlite-service/sqlite-service.ts","import { Injectable } from '@angular/core';\r\n\r\ndeclare const lbclient: any;\r\n\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\n/*\r\n  Generated class for the JseaServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class JseaServiceProvider {\r\n\r\n  //STARTOFDAY is for Start of Day agreements, PERJOB is for Job agreements\r\n  jseaServiceTypes = new Array();\r\n  jseaServiceType: any;\r\n  //myConfiguredForJsea: boolean = false;\r\n  SODSERVICE_IS_NEW_DAY: boolean = false;\r\n  SITE_CONFIG_LOADED: boolean = false;\r\n  myDetailJobnum = 0;\r\n  myDetailJobdate;\r\n  myDetailJobJseaCaptured = false;\r\n  myJobStatusType = 'N/A';\r\n  myFormType = 'JSEA';\r\n  myFormLeg = 0;\r\n  mystr;\r\n  deleteJseaChangeData = lbclient.deleteJseaChangeData;\r\n  LocalJseaDriverAnswers = lbclient.models.LocalJseaDriverAnswers;\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'JseaServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider, private logger: LogServiceProvider,\r\n    private siteConfig: SiteconfigServiceProvider, private sharedService: SharedServiceProvider) {\r\n\r\n    // console.log('Hello JseaServiceProvider Provider');\r\n\r\n    //Subscribe to the SODSERVICE_IS_NEW_DAY subject.\r\n    this.sharedService.SODSERVICE_IS_NEW_DAY.subscribe(SODSERVICE_IS_NEW_DAY => {\r\n      this.SODSERVICE_IS_NEW_DAY = SODSERVICE_IS_NEW_DAY;\r\n    });\r\n\r\n    //Subscribe to the SITE_CONFIG_LOADED subject.\r\n    this.sharedService.SITE_CONFIG_LOADED.subscribe(SITE_CONFIG_LOADED => {\r\n      this.SITE_CONFIG_LOADED = SITE_CONFIG_LOADED;\r\n    });\r\n\r\n\r\n    this.jseaServiceTypes[\"SOD\"] = \"STARTOFDAY\";\r\n    this.jseaServiceTypes[\"PJB\"] = \"PERJOB\";\r\n\r\n    this.myDetailJobdate = new Date();\t\t\t\t//Default to current day\r\n    this.myDetailJobdate.setHours(0, 0, 0, 0);\t\t\t//remove time portion\r\n\r\n    if (localStorage.getItem('PDA_JSEA_TYPE')) {\r\n      this.jseaServiceType = localStorage.getItem('PDA_JSEA_TYPE');\r\n    }\r\n    else {\r\n      this.jseaServiceType = this.jseaServiceTypes[\"SOD\"]; //Default\r\n    }\r\n\r\n  }\r\n\r\n  setJseaIsCaptured(val) {\r\n    if (this.jseaServiceType == this.jseaServiceTypes[\"SOD\"]) {\r\n      localStorage.setItem('JSEA_SOD_CAPTURED', val);\r\n    }\r\n    if (this.jseaServiceType == this.jseaServiceTypes[\"PJB\"]) {\r\n      this.myDetailJobJseaCaptured = (val == \"Y\");\r\n    }\r\n  }\r\n\r\n  setJseaType(larg) {\r\n    var match = false;\r\n    //this.log.info('Setting JseaType passed ' + larg);\r\n\r\n    for (var key in this.jseaServiceTypes) {\r\n      var lvalue = this.jseaServiceTypes[key];\r\n      //this.log.info(' lvalue : ' + lvalue);\r\n      if (larg == lvalue) {\r\n        match = true;\r\n        this.jseaServiceType = this.jseaServiceTypes[key];\r\n        this.log.info('Setting JseaType got a match on ' + lvalue + \" To \" + this.jseaServiceTypes[key]);\r\n        //this.myConfiguredForJsea = true;\r\n        this.sharedService.setMyConfiguredForJsea(true);\r\n\r\n      }\r\n    }\r\n\r\n    if (match == false) {\r\n      this.log.info('Setting JseaType NO MATCH on ' + larg + ' Will be Set to default: ' + this.jseaServiceType);\r\n    }\r\n  }\r\n\r\n\r\n  setJseaTypePerJob() {\r\n    this.log.info('Setting JseaType to Per Job');\r\n    this.jseaServiceType = this.jseaServiceTypes[\"PJB\"];\r\n  }\r\n\r\n\r\n  setJseaTypeStartOfDay() {\r\n    this.log.info('Setting JseaType to StartOfDay');\r\n    this.jseaServiceType = this.jseaServiceTypes[\"SOD\"];\r\n  }\r\n\r\n  getJseaType() {\r\n    return this.jseaServiceType;\r\n  }\r\n\r\n  isJseaStartOfDay() {\r\n    return (this.jseaServiceType == this.jseaServiceTypes[\"SOD\"]);\r\n  }\r\n\r\n  getJseaConfig() {\r\n    //this.log.info('Getting JseaIsCaptured');\r\n\r\n    //If we havn't been configured then don't stop the person doing things in the app\r\n    //if (this.myConfiguredForJsea == false) {\r\n    if (this.sharedService.getMyConfiguredForJsea() == false) {\r\n      this.log.info('this.myConfiguredForJsea = ' + this.sharedService.getMyConfiguredForJsea() + ' So will return true');\r\n      return 'NA';\r\n    }\r\n\r\n    if (this.isJseaStartOfDay()) {\r\n      var lstr;\r\n      this.log.info('Getting JseaIsCaptured this.jseaServiceType = ' + this.jseaServiceType + ' From Local storage');\r\n      lstr = localStorage.getItem('JSEA_SOD_CAPTURED');\r\n      if (lstr == 'Y') {\r\n        return 'SOD_YES'\r\n      }\r\n      else {\r\n        return 'SOD_NO'\r\n      }\r\n    }\r\n    else {\r\n      return 'PJB_CHECK';\r\n    }\r\n\r\n  }\r\n\r\n\r\n  startWatching() {\r\n\r\n    console.log(\"startWatching: JseaServiceProvider\");\r\n    this.log.debug(\"startWatching\");\r\n    //\r\n    //if (this.SODSERVICE_IS_NEW_DAY || localStorage.getItem('SODSERVICE_IS_NEW_DAY')) {\r\n    this.sharedService.SODSERVICE_IS_NEW_DAY.subscribe(SODSERVICE_IS_NEW_DAY => {\r\n\r\n      //this.log.info('SODSERVICE_IS_NEW_DAY Event triggered');\r\n      if (this.isJseaStartOfDay()) {\r\n        this.log.info('SODSERVICE_IS_NEW_DAY isJseaStartOfDay is TRUE ');\r\n        //Update the value to be No and then when the guy uses the ctrler this will make it Yes\r\n        localStorage.setItem('JSEA_SOD_CAPTURED', 'N');\r\n      }\r\n      else {\r\n        this.log.info('SODSERVICE_IS_NEW_DAY isJseaStartOfDay is NOT TRUE assume PER JOB');\r\n      }\r\n    });\r\n\r\n    // if (this.SITE_CONFIG_LOADED || localStorage.getItem('SITE_CONFIG_LOADED')) {\r\n    this.sharedService.SITE_CONFIG_LOADED.subscribe(SITE_CONFIG_LOADED => {\r\n\r\n      //console.log(\"Hi from jsea-service.ts\");\r\n      // this.log.info('SITE_CONFIG_LOADED Event triggered');\r\n      if (this.siteConfig.getSiteConfigValue('PDA_JSEA_ON') === 'Y' || this.pdaParams.pda_jsea_on) {\r\n        //Now get the type value\r\n        var lvar = this.siteConfig.getSiteConfigValue('PDA_JSEA_TYPE');\r\n        if (lvar != '') {\r\n          this.mystr = \"getSiteConfig returned  \" + lvar;\r\n          this.log.info(this.mystr);\r\n          //Set the TYpe in the service\r\n          this.setJseaType(lvar);\r\n        }\r\n        else {\r\n          this.mystr = \"getSiteConfig returned nothing !!!!\";\r\n          this.log.info(this.mystr);\r\n        }\r\n      }\r\n    });\r\n\r\n  } //startWatching() ends here\r\n\r\n  setJobJseaDetails(jobnum, jobdate, iscaptured, statusType, formType, formLeg) {\r\n    this.log.info('setJobJseaDetails' + ' Jobnum: ' + jobnum + ' Jobdate ' + jobdate + ' IsCaptured '\r\n      + iscaptured, ' StatusTYpe' + statusType, ' FormType ' + formType, ' FormLeg' + formLeg);\r\n    this.myDetailJobnum = jobnum;\r\n    this.myDetailJobdate = jobdate;\r\n    this.myDetailJobJseaCaptured = (iscaptured == 'Y');\r\n    this.myJobStatusType = statusType;\r\n    this.myFormType = formType;\r\n    this.myFormLeg = formLeg\r\n  }\r\n\r\n  getServiceJobNum() {\r\n    return this.myDetailJobnum;\r\n  }\r\n\r\n  getServiceJobDate() {\r\n    return this.myDetailJobdate;\r\n  }\r\n\r\n  getServiceStatusType() {\r\n    return this.myJobStatusType;\r\n  }\r\n\r\n  getServiceFormType() {\r\n    return this.myFormType;\r\n  }\r\n\r\n  getServiceFormLeg() {\r\n    return this.myFormLeg;\r\n  }\r\n\r\n  checkJobDateJseaCaptured(jobnum, jobdate) {\r\n    this.log.info('checkJobDate' + ' Passed Jobnum: ' + jobnum + ' Passed Jobdate ' + jobdate);\r\n    if (jobnum == this.myDetailJobnum && jobdate == this.myDetailJobdate) {\r\n      this.log.info('updateJobIsCaptured' + ' Svc Jobnum: ' + jobnum + ' Svc Jobdate ' + jobdate);\r\n      return (this.myDetailJobJseaCaptured);\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  deleteOldData = (daysback?) => {\r\n    // delete old data\r\n    // if daysback parameter provided use it otherwise use site config value\r\n    var val = this.siteConfig.getSiteConfigInt('PDA_DEL_DAYSBACK');\r\n    daysback = daysback || val;\r\n\r\n    var queryDate = new Date();\r\n    queryDate.setDate(queryDate.getDate() - daysback);\r\n\r\n    this.log.info(\"deleteOldData: daysback:\" + daysback + \", queryDate:\" + queryDate);\r\n\r\n    if (daysback > 1) {\r\n      var delfilter = { \"where\": { \"jdaJobBday\": { \"lt\": queryDate } } };\r\n      this.log.info(\"deleteOldData: delfilter:\" + JSON.stringify(delfilter));\r\n\r\n      this.LocalJseaDriverAnswers.find(delfilter, (err, answers) => {\r\n        var len = answers.length;\r\n        this.log.info(\"deleteOldData: deleting:\" + len + \" answers\");\r\n\r\n        for (var i = 0; i < len; i++) {\r\n          var answer = answers[i];\r\n          this.log.info(\"deleteOldData: delete answer:\" + i + \" job:\" + answer.jdaJobNum + \" date:\" + answer.jdaJobBday + \" order:\" + answer.jdaOrder);\r\n          answer.delete();\r\n        }\r\n\r\n        // clear jsea change data if we've deleted any old answers\r\n        if (len > 1) {\r\n          this.deleteJseaChangeData((err, changeData) => {\r\n            if (err)\r\n              this.log.error(err);\r\n            if (changeData)\r\n              this.log.info(changeData);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n  }//deleteOldData ends here\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/jsea-service/jsea-service.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { FixedQueueServiceProvider } from '../fixed-queue-service/fixed-queue-service';\r\n\r\n/*\r\n  Generated class for the GpsAuditServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class GpsAuditServiceProvider {\r\n\r\n  gpsHistory;\r\n  lastGps;\r\n\r\n  constructor(private fixedQueue: FixedQueueServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider,\r\n    private logger: LogServiceProvider) {\r\n    //console.log('Hello GpsAuditServiceProvider Provider');\r\n\r\n    // Store last x no. of gps locations while tracking so we can display for audit purposes\r\n    /* Riyaz: fixedQueue is no longer imported as an npm library.\r\n       It is now rewritten as an angular2 service within our codebase */\r\n    this.gpsHistory = this.fixedQueue.create(1000);\r\n    this.lastGps = { gps_latitude: 0, gps_longitude: 0 };\r\n  }\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'GpsAuditServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  saveGps(gpsData) {\r\n    // gpsData is an object of gpsHistory\r\n    this.gpsHistory.push(gpsData);\r\n\r\n    //this.lastGps = angular.copy(gpsData);\r\n    this.lastGps = Object.assign({}, gpsData);\r\n  }\r\n\r\n  getHistory() {\r\n    return (this.gpsHistory.reverse());\r\n  }\r\n\r\n  getLastGPS() {\r\n    // TODO - maybe have arg for time so only return GPS if within last x secs\r\n    return (this.lastGps);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/gps-audit-service/gps-audit-service.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n\r\n\r\nimport { Network } from '@ionic-native/network';\r\nimport { Platform } from 'ionic-angular';\r\n\r\nimport { UtilServiceProvider } from '../util-service/util-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\n\r\n/*\r\n  Generated class for the ConnectivityMonitorProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class ConnectivityMonitorProvider {\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'ConnectivityMonitorProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  monitorOnline;\r\n  disconnectSubscription;\r\n  connectSubscription;\r\n  isConnected: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n  networkType: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider,\r\n    private utilService: UtilServiceProvider, private logger: LogServiceProvider,\r\n    public platform: Platform, private network: Network, private sharedService: SharedServiceProvider) {\r\n    this.log.info('Hello ConnectivityMonitorProvider Provider');\r\n    this.sharedService.networkType = network.type;\r\n\r\n    //this.monitorOnline = siteConfig.getSiteConfigValue('PDA_MONITOR_ONLINE') == 'Y';\r\n    //this.monitorOnline = true;\r\n\r\n  }\r\n\r\n  startWatching = () => {\r\n    console.log(\"startWatching: ConnectivityMonitorProvider\");\r\n    this.log.debug(\"startWatching\");\r\n\r\n    this.disConnectSubscribe();\r\n    this.connectSubscribe();\r\n\r\n  }//startWatching ends here\r\n\r\n\r\n\r\n  disConnectSubscribe() {\r\n    // watch network for a disconnection\r\n    this.disconnectSubscription = this.network.onDisconnect().subscribe(() => {\r\n      this.log.info('network was disconnected :-(');\r\n      var d = new Date();\r\n      localStorage.setItem(\"OfflineTimeStamp\", this.utilService.getLocalTimestamp(d));\r\n      //alert(\"Disconnected!!\");\r\n\r\n      this.sharedService.isOnline = false;\r\n      this.isConnected.next(false);\r\n      this.networkType.next(this.network.type);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  connectSubscribe() {\r\n    // watch network for a connection\r\n    this.connectSubscription = this.network.onConnect().subscribe(() => {\r\n      this.log.info('network connected!');\r\n      //alert(\"Connected!!\");\r\n\r\n      if (localStorage.getItem('OfflineTimeStamp')) {\r\n        this.log.info('Device went offline at :' + localStorage.getItem('OfflineTimeStamp'));\r\n        localStorage.removeItem('OfflineTimeStamp');\r\n      }\r\n\r\n      //Riyaz - iOS Hack: Set the full replication for syncing to true, when the device gets reconnected.\r\n      this.pdaParams.fullReplication = true;\r\n      \r\n      this.sharedService.isOnline = true;\r\n      this.isConnected.next(true);\r\n      // We just got a connection but we need to wait briefly\r\n      // before we determine the connection type. Might need to wait.\r\n      // prior to doing any api requests as well.\r\n      setTimeout(() => {       \r\n        this.sharedService.networkType = this.network.type;      \r\n        this.networkType.next(this.network.type);\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.disconnectSubscription.unsubscribe();\r\n    this.connectSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/connectivity-monitor/connectivity-monitor.ts","import { Injectable } from '@angular/core';\r\nimport { ConfigServiceProvider } from '../config-service/config-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\n\r\n\r\n/*\r\n  Generated class for the PdaparamsServiceProvider provider.\r\n\r\n  Get driver ID from local storage\r\n     If no driver ID then this must be first time setup so prompt for it (IMEI as well?)     \r\n     Can then retrieve rest of driver details from tpm_pda_controller table\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class PdaparamsServiceProvider {\r\n\r\n  pda_full_statuses;\r\n  pda_depart_all;\r\n  pda_deliver_all;\r\n  pda_images;\r\n  pda_notes;\r\n  pda_signat_on_pu;\r\n  pda_signat_on_dpu;\r\n  pda_discrete_del_signat;\r\n  pda_client_conflicts;\r\n  pda_mandatory_photos;\r\n  barcode_supp_bcodeisjobnum;\r\n  pda_barcodes;\r\n  pda_jsea_type;\r\n  pda_pickup_all;\r\n  pda_images_url;\r\n  pda_del_daysback;\r\n  pda_sort_col1;\r\n  pda_display_date;\r\n  pda_signature_pup;\r\n  pda_signature_dpup;\r\n  pda_multidel_note_text;\r\n  pda_display_from;\r\n  pda_display_to;\r\n  pda_row1_font_size;\r\n  pda_monitor_online;\r\n  pda_image_notes = true;\r\n  pda_notify_repeat;\r\n  pda_notify_interval;\r\n  pda_sender_id;\r\n  pda_req_navigation;\r\n  pda_show_client_name;\r\n  pda_jsea_both_yn;\r\n  pda_jsea_no_no;\r\n  pda_mandatory_notes;\r\n  pda_attached_docs;\r\n  debug;\r\n  driverId;\r\n  imageQuality;\r\n  pda_job_routing;\r\n  pda_route_map;\r\n  pda_disable_background_sync;\r\n  pda_disable_device_diagnostics;\r\n  pda_disable_diagnostics_bgps_on_logoff;\r\n  pda_delivery_to_base;\r\n  fullReplication = false;\r\n\r\n\r\n  // TODO - siteId needs to be in a config file somewhere\r\n  localdriver = {\r\n    driverId: 0,\r\n    accessAllowed: false,\r\n    loggedOn: false,\r\n    lastUpdate: 0,\r\n    debugMode: false\r\n  };\r\n  debugMode = this.localdriver.debugMode;\r\n  experimental = true;\t\t// enable any experimental features\r\n  multileg = true;\t\t\t\t// enable separate pods for multileg jobs\r\n  jobdisplay = false;\t\t\t// jobs tab does a quick display from local storage while sync takes place\r\n  multiSelect = true;\t\t\t// Allow multi job select for Accept; Pickup etc.\r\n  GPSInterval = 60000;\t\t\t// 1 minute default to grab GPS data (milliseconds)\r\n  alwaysGetGPS = false;\r\n  pda_jsea_on = false;\r\n  jobDetailOneDayOnly;\r\n  imagePollTime = 60000 * 5;\t\t// 5 minute default\r\n  imageUpload = true;\r\n  syncDL = false\t\t\t\t\t\t// sync DL jobs as well\r\n\r\n  // defaults for background gps\r\n  gps_desiredAccuracy;\r\n  gps_locationProvider;\r\n  gps_stationaryRadius;\r\n  gps_distanceFilter;\r\n  gps_interval;            // use this in milliseconds instead\r\n  gps_activityType;\r\n  gps_stopOnTerminate;\r\n  gps_debug;\r\n  gps_fastestInterval;\r\n  gps_activitiesInterval;\r\n  gps_stopOnStillActivity;\r\n\r\n\r\n  constructor(private configService: ConfigServiceProvider, private sharedService: SharedServiceProvider) {\r\n    //console.log('Hello PdaparamsServiceProvider Provider');\r\n    this.driverId = this.getDriverId();\r\n    if (this.sharedService.testing)\r\n      this.jobDetailOneDayOnly = false;\r\n    else\r\n      this.jobDetailOneDayOnly = true;\r\n\r\n\r\n    //this.pda_disable_diagnostics_bgps_on_logoff = (this.siteConfig.getSiteConfigValue('PDA_DISABLE_DIAGNOSTICS_BGPS_ON_LOGOFF') == 'Y');\r\n  }//Constructor ends\r\n\r\n  getParams() {\r\n    this.localdriver = JSON.parse(localStorage.getItem('osc-driver-info')) || this.localdriver;\r\n    return this.localdriver;\r\n  };\r\n\r\n  getAppVersion() {\r\n    return this.configService.appConfig.version;\r\n  };\r\n\r\n  getAppBuild = function () {\r\n    return this.configService.appConfig.build;\r\n  };\r\n\r\n  getDriverId() {\r\n    this.localdriver = this.getParams();\r\n    this.driverId = this.localdriver.driverId;\r\n    return this.localdriver.driverId;\r\n  };\r\n\r\n  getSiteId() {\r\n    // NOTE - should be in service but got circular dependancy when injecting siteService\r\n    var siteId = localStorage.getItem('clientId');\r\n    return siteId;\r\n  };\r\n\r\n  clearDriverInfo() {\r\n    localStorage.removeItem('osc-driver-info');\r\n  };\r\n\r\n  setDriverInfo(driverId) {\r\n    this.localdriver.driverId = driverId;\r\n    this.driverId = driverId;\r\n    localStorage.setItem('osc-driver-info', JSON.stringify(this.localdriver));\r\n  };\r\n\r\n  setDebugMode(value) {\r\n    this.localdriver.debugMode = value || false;\r\n    localStorage.setItem('osc-driver-info', JSON.stringify(this.localdriver));\r\n  };\r\n\r\n  logonDriver() {\r\n    this.localdriver = this.getParams();\r\n    this.localdriver.loggedOn = true;\r\n    this.localdriver.lastUpdate = Date.now();\r\n    this.sharedService.loginFlag = true;\r\n    localStorage.setItem('osc-driver-info', JSON.stringify(this.localdriver));\r\n\r\n  };\r\n\r\n\r\n  logoffDriver() {\r\n    this.localdriver = this.getParams();\r\n    this.localdriver.loggedOn = false;\r\n    this.localdriver.lastUpdate = Date.now();\r\n    this.sharedService.loginFlag = false;\r\n    localStorage.setItem('osc-driver-info', JSON.stringify(this.localdriver));\r\n\r\n  };\r\n\r\n\r\n  isDrvLoggedOff() {\r\n    this.localdriver = this.getParams();\r\n    if (this.localdriver.loggedOn) {\r\n      return false;\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  isDrvLoggedOn() {\r\n    this.localdriver = this.getParams();\r\n    if (this.localdriver.loggedOn) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkDriverStatus() {\r\n    // If device is resumed first time on a date after last login then auto logoff the driver\r\n    // which will ensure he has to login in again before processing any work\r\n    // (so in effect an auto logout overnight)\r\n\r\n    // TODO - need a date check etc.\r\n    //this.logoffDriver();\r\n  };\r\n\r\n  setParameter(params, cb) {\r\n    // params is object of (maybe array) of key/value pair(s) for us to set\r\n    // e.g. { \"experimental\":false}\r\n    for (var key in params) {\r\n      if (this.hasOwnProperty(key)) {\r\n        this[key] = params[key];\r\n      }\r\n    }\r\n    if (cb)\r\n      cb();\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/pdaparams-service/pdaparams-service.ts","import { Injectable } from '@angular/core';\r\n\r\n\r\n//import { BackgroundGeolocation, BackgroundGeolocationConfig, BackgroundGeolocationResponse } from '@ionic-native/background-geolocation';\r\nimport { Platform } from 'ionic-angular';\r\nimport { LoopBackConfig } from '../../../shared/sdk';\r\nimport { GpsHistory } from '../../../shared/sdk/models/GpsHistory';\r\nimport { GpsHistoryApi } from '../../../shared/sdk/services/custom/GpsHistory';\r\n\r\nimport { GpsAuditServiceProvider } from '../gps-audit-service/gps-audit-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\n\r\nimport { Device } from '@ionic-native/device';\r\n\r\n/*\r\n  Generated class for the BackgroundGeolocationServiceProvider provider.\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n\r\n\r\n@Injectable()\r\nexport class BackgroundGeolocationServiceProvider {\r\n\r\n  // GPS timestamps are in milliseconds since epoch - iOS also has a fractional part\r\n  // e.g. iOS:\t\t1463707063130.011\r\n  // e.g. Android:\t1463707069003\r\n  // Site for millisecond calcs and conversions: http://currentmillis.com/\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'BackgroundGeolocationServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  lastGPSsecs = 0;\t\t// last timestamp in seconds\r\n  thisGPSsecs = 0;\t\t// this timestamp in seconds\r\n  diffGPSsecs = 0;\r\n  threshold = 1;\t\t\t// diff between gps must be greater than this to save\r\n  ltimestamp: Date;\r\n  plt;\r\n  osplatform;\r\n  taskKey: any;\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider, private logger: LogServiceProvider,\r\n    private gpsAudit: GpsAuditServiceProvider, private gpsHistApi: GpsHistoryApi,\r\n    public platform: Platform, private device: Device) {\r\n    this.plt = platform;\r\n\r\n    console.log('Hello BackgroundGeolocationServiceProvider Provider');\r\n    //Configure BackgroundGeolocation and set events\r\n    this.setEvents();\r\n  }//End of constructor\r\n\r\n\r\n  setEvents = () => {\r\n\tthis.log.debug('setEvents called');\r\n\r\n    this.configureBggs();\r\n    this.plt.ready().then((readySource) => {\r\n      this.osplatform = this.device.platform;\r\n\r\n\t\tconsole.log('platform ready, setting BGGS event handlers');\r\n\t\tthis.log.debug('platform ready, setting BGGS event handlers');\r\n\r\n      if (this.osplatform != null) {\r\n\r\n        this.osplatform = this.osplatform.toLowerCase();\r\n\r\n        (<any>window).BackgroundGeolocation.on('location', (location) => {\r\n          // handle your locations here \r\n          // to perform long running operation on iOS\r\n          // you need to create background task\r\n\r\n          if (this.osplatform.localeCompare('ios') == 0) {\r\n            (<any>window).BackgroundGeolocation.startTask((taskKey) => {\r\n              // execute long running task\r\n              //this.log.info('Calling saveGpsToDb: location:' + JSON.stringify(location));\r\n              this.saveGpsToDb(this.pdaParams.getDriverId(), location);\r\n              // eg. ajax post location\r\n              // IMPORTANT: task has to be ended by endTask\r\n              (<any>window).BackgroundGeolocation.endTask(taskKey);\r\n            });\r\n          }\r\n          else {\r\n            //this.log.info('Calling saveGpsToDb: location:' + JSON.stringify(location));\r\n            this.log.info(\"BGGS: Calling saveGpsToDb.\");\r\n            this.saveGpsToDb(this.pdaParams.getDriverId(), location);\r\n          }\r\n        });\r\n\r\n        (<any>window).BackgroundGeolocation.on('stationary', (stationaryLocation) => {\r\n          // handle stationary locations here\r\n          this.log.info('  BackgroundGeolocation location is stationary.');\r\n        });\r\n\r\n        (<any>window).BackgroundGeolocation.on('error', (error) => {\r\n          this.log.debug('  BackgroundGeolocation error:' + error.code + \" ,error message:\" + error.message);\r\n        });\r\n\r\n        (<any>window).BackgroundGeolocation.on('start', () => {\r\n          this.log.info('  BackgroundGeolocation service has been started');\r\n        });\r\n\r\n        (<any>window).BackgroundGeolocation.on('stop', () => {\r\n          this.log.info('  BackgroundGeolocation service has been stopped');\r\n        });\r\n\r\n\r\n        (<any>window).BackgroundGeolocation.on('background', () => {\r\n          this.log.info('  App is in background');\r\n          // you can also reconfigure service (changes will be applied immediately)\r\n          //  (<any>window).BackgroundGeolocation.configure({ debug: true });\r\n        });\r\n\r\n        (<any>window).BackgroundGeolocation.on('foreground', () => {\r\n          this.log.info('  App is in foreground');\r\n          // (<any>window).BackgroundGeolocation.configure({ debug: false });\r\n        });\r\n      }\r\n    });//End of platformReady fn  \r\n  }//setEvents() ends\r\n\r\n\r\n  configureBggs = () => {\r\n    // defaults for background gps   \r\n    this.pdaParams.gps_stopOnTerminate = true;\r\n    this.pdaParams.gps_debug = false;\r\n    this.pdaParams.gps_desiredAccuracy = 10;\r\n    this.pdaParams.gps_stationaryRadius = 20;\r\n    this.pdaParams.gps_activityType = 'AutomotiveNavigation';\r\n    this.pdaParams.gps_distanceFilter = 30;\r\n\r\n    this.pdaParams.gps_interval = 60000;            // use this in milliseconds instead   \r\n    this.pdaParams.gps_fastestInterval = 30000;\r\n    this.pdaParams.gps_activitiesInterval = 60000;\r\n    this.pdaParams.gps_stopOnStillActivity = false;\r\n\r\n\r\n    this.plt.ready().then((readySource) => {\r\n\r\n      this.osplatform = this.device.platform;\r\n\r\n      if (this.osplatform != null) {\r\n\r\n        this.osplatform = this.osplatform.toLowerCase();\r\n\r\n        if (this.osplatform.localeCompare('ios') == 0) {\r\n          (<any>window).BackgroundGeolocation.configure({\r\n            locationProvider: (<any>window).BackgroundGeolocation.DISTANCE_FILTER_PROVIDER,\r\n            desiredAccuracy: this.pdaParams.gps_desiredAccuracy,\r\n            distanceFilter: this.pdaParams.gps_distanceFilter,\r\n            stationaryRadius: this.pdaParams.gps_stationaryRadius,\r\n            activityType: this.pdaParams.gps_activityType,\t\t\t// iOS hint\r\n            debug: this.pdaParams.gps_debug,\r\n            stopOnTerminate: this.pdaParams.gps_stopOnTerminate\t\t\t// <-- enable this to clear background location settings when the app terminates\r\n\r\n          });\r\n        }\r\n        else {\r\n          (<any>window).BackgroundGeolocation.configure({\r\n            locationProvider: (<any>window).BackgroundGeolocation.ACTIVITY_PROVIDER,\r\n            desiredAccuracy: this.pdaParams.gps_desiredAccuracy,\r\n            stationaryRadius: this.pdaParams.gps_stationaryRadius,\r\n            distanceFilter: this.pdaParams.gps_distanceFilter,\r\n            interval: this.pdaParams.gps_interval,// Android - The minimum time interval between location updates in milliseconds \t\t\r\n            debug: this.pdaParams.gps_debug,\t\t\t\t\t// <-- enable this hear sounds for background-geolocation life-cycle\r\n            stopOnTerminate: this.pdaParams.gps_stopOnTerminate,\t\t\t// <-- enable this to clear background location settings when the app terminates\r\n            fastestInterval: this.pdaParams.gps_fastestInterval,   //ANDROID ONLY--Fastest rate in milliseconds at which your app can handle location updates\r\n            activitiesInterval: this.pdaParams.gps_activitiesInterval, //ANDROID ONLY--Rate in milliseconds at which activity recognition occurs. Larger values will result in fewer activity detections while improving battery life.\r\n            stopOnStillActivity: this.pdaParams.gps_stopOnStillActivity //ANDROID ONLY--stop() is forced, when the STILL activity is detected (default is true)\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  saveGpsToDb = (drvid, location) => {\r\n    //GpsHistory() is a call to the GpsHistory model\r\n    var lgps = new GpsHistory();\r\n    lgps.gps_driver_id = drvid;\r\n    //var platform = $cordovaDevice.getPlatform();\r\n\r\n    //this.log.info(\"BGGS platform:\" + this.device_platform + \", location:\" + JSON.stringify(location));\r\n    // LT - 06/07/2016 - with 2.52 release iOS devices do not appear to have a location.timestamp property\r\n    // but do have the location.time property - check for both\r\n    if (this.osplatform.localeCompare('ios') == 0) {\r\n      if (location.timestamp) {\r\n        lgps.gps_timestamp = location.timestamp;\r\n      }\r\n      else if (location.time) {\r\n        lgps.gps_timestamp = location.time;\r\n      }\r\n      else {\r\n        // lgps.gps_timestamp = Date.now();\r\n        lgps.gps_timestamp = new Date();\r\n        this.log.error(\"BGGS: no time provided so use now:\" + lgps.gps_timestamp);\r\n      }\r\n      lgps.gps_heading = 0; // IOS Has a heading if u want to use it later\r\n    }\r\n    else {\r\n      lgps.gps_timestamp = location.time;\r\n      lgps.gps_heading = 0; // Android has a bearing if u want to use it later\r\n    }\r\n\r\n    //this.log.info(\"lgps.gps_timestamp:: \" + lgps.gps_timestamp);\r\n    this.ltimestamp = new Date(lgps.gps_timestamp);\r\n    //this.log.info(\"this.ltimestamp:: \" + this.ltimestamp);\r\n\r\n    // check last GPS and only update if diff is greater than x seconds\r\n    this.thisGPSsecs = this.ltimestamp.getTime() / 1000;\t\t\t\t// current GPS time in seconds\r\n    this.diffGPSsecs = this.thisGPSsecs - this.lastGPSsecs;\r\n    this.lastGPSsecs = this.ltimestamp.getTime() / 1000;\r\n\r\n    // lgps.gps_timestamp is UTC at this point\r\n    //var ldate = new Date(lgps.gps_timestamp);\r\n    //var oset = ldate.getTimezoneOffset();\r\n\r\n    // lgps.gps_timestamp converted to local time - no timezone now\r\n    //var temp: any = this.ltimestamp.getTime() + (oset * -1) * 60 * 1000;\r\n    //this.log.info(\"temp:::\" + temp);\r\n    //this.log.info(\"temp with offset::\" + this.ltimestamp.getTime() + (oset * -1) * 60 * 1000);\r\n\r\n    if (location.speed !== null && location.speed !== undefined)\r\n      lgps.gps_speed = location.speed;\r\n    else\r\n      lgps.gps_speed = 0;\r\n    lgps.gps_timestamp = this.ltimestamp;\r\n    lgps.gps_latitude = location.latitude;\r\n    lgps.gps_longitude = location.longitude;\r\n    lgps.gps_quality = location.accuracy;\r\n    lgps.gps_time = 0;//location.time;\r\n\r\n    // TODO - need to NOT rely on log - need our own access to this function\r\n    var loggedOn = this.log.pdaParams.isDrvLoggedOn();\r\n    //this.log.info(\"BGGS driver:\" + lgps.gps_driver_id + \", loggedOn:\" + loggedOn + \", lgps:\" + JSON.stringify(lgps));\r\n    this.gpsAudit.saveGps(lgps);\r\n\r\n    //Riyaz:Now change the lgps.timestamp to oracle date, before saving it to the oracle DB.\r\n    //lgps.gps_timestamp = new Date(lgps.gps_timestamp.valueOf());\r\n\r\n    // TODO - do we need any more criteria to create history record?  if connected?\r\n    if (lgps.gps_driver_id > 0 && this.diffGPSsecs > this.threshold && loggedOn) {\r\n      // this.log.info(\"About to save BGGS GPS for driver:\" + lgps.gps_driver_id + \", lgps:\" + JSON.stringify(lgps));\r\n      this.gpsHistApi.create(lgps).subscribe(\r\n        obj => {\r\n          this.log.info(\"gpsHistApi.create success for BGGS: obj:\" + JSON.stringify(obj));\r\n        },\r\n        err => {\r\n          this.log.error(\"gpsHistApi.create failed for BGGS: err:\" + JSON.stringify(err));\r\n        }\r\n      );\r\n    }\r\n  }//saveGpsToDb() ends here\r\n\r\n\r\n  /*=====================================================*/\r\n  /*             START METHOD                            */\r\n  /*=====================================================*/\r\n  start = () => {\r\n    this.configureBggs();\r\n\r\n    // start recording location\r\n    this.log.info(\"BGGS about to start...\");\r\n    (<any>window).BackgroundGeolocation.start();\r\n  }\r\n\r\n  /*=====================================================*/\r\n  /*             STOP METHOD                            */\r\n  /*=====================================================*/\r\n  stop = () => {\r\n    // If we wish to turn OFF background-tracking, we can call the #stop method.\r\n    this.log.info('BGGS STOP Method called:');\r\n    (<any>window).BackgroundGeolocation.stop();\r\n  }\r\n\r\n  bggs_print_configuration = () => {\r\n    this.log.info(\"=====================================================================\");\r\n\r\n    this.log.info(\"this.pdaParams.gps_locationProvider::\" + this.pdaParams.gps_locationProvider);\r\n    this.log.info(\"this.pdaParams.gps_activityType::\" + this.pdaParams.gps_activityType);\r\n    this.log.info(\"this.pdaParams.gps_debug::\" + this.pdaParams.gps_debug);\r\n    //this.log.info(\"this.pdaParams.gps_desiredAccuracy::\" + this.pdaParams.gps_desiredAccuracy);\r\n    this.log.info(\"this.pdaParams.gps_distanceFilter::\" + this.pdaParams.gps_distanceFilter);\r\n    this.log.info(\"this.pdaParams.gps_interval::\" + this.pdaParams.gps_interval);\r\n    this.log.info(\"this.pdaParams.gps_stationaryRadius::\" + this.pdaParams.gps_stationaryRadius);\r\n    this.log.info(\"this.pdaParams.gps_stopOnTerminate::\" + this.pdaParams.gps_stopOnTerminate);\r\n    this.log.info(\"=====================================================================\");\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/background-geolocation-service/background-geolocation-service.ts","import { Injectable } from '@angular/core';\r\n\r\ndeclare const lbclient: any;\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\r\n\r\n\r\n/*\r\n  Generated class for the JobServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class JobServiceProvider {\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'JobServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  jobs = [];\r\n  Job = lbclient.models.LocalJob;\r\n  job;\r\n  constructor(private logger: LogServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider,\r\n    private siteConfig: SiteconfigServiceProvider) {\r\n    //console.log('Hello JobServiceProvider Provider');\r\n  }\r\n\r\n  deleteOldJobs(daysback) {\r\n    // delete old jobs\r\n    // if daysback parameter provided use it otherwise use site config value\r\n    var val = this.siteConfig.getSiteConfigInt('PDA_DEL_DAYSBACK');//then(function (val) {\r\n\r\n    daysback = daysback || val;\r\n\r\n    var queryDate = new Date();\r\n    queryDate.setDate(queryDate.getDate() - daysback);\r\n\r\n    this.log.info(\"deleteOldJobs: daysback:\" + daysback + \", queryDate:\" + queryDate);\r\n    //console.log(\"deleteOldJobs: daysback:\" + daysback + \", queryDate:\" + queryDate);\r\n\r\n    if (daysback > 1) {\r\n      var delfilter = { \"where\": { \"mobjobBookingDay\": { \"lt\": queryDate } } };\r\n      this.log.info(\"deleteOldJobs: delfilter:\" + JSON.stringify(delfilter));\r\n      this.Job.find(delfilter, (err, jobs) => {\r\n        this.jobs = jobs;\r\n        var len = this.jobs.length;\r\n        this.log.info(\"deleteOldJobs: deleting:\" + len + \" job legs\");\r\n        //console.log(\"deleteOldJobs: deleting:\" + len + \" job legs\");\r\n\r\n        for (var leg = 0; leg < len; leg++) {\r\n\r\n          this.job = this.jobs[leg];\r\n          this.log.info(\"deleteOldJobs: delete leg:\" + leg + \" job:\" + this.job.mobjobSeq + \" with job number:\" + this.job.mobjobNumber);\r\n\r\n          //Riyaz: Deletes jobs from the local storage. \r\n          this.job.delete();\r\n          this.deleteJseaStatuses(this.job.mobjobNumber);\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  deleteJseaStatuses(jobNumber) {\r\n    // check local storage for PICKUP and DELIVER statuses for this job and delete if found\r\n    var key;\r\n    var statuses = ['PICKUP', 'DELIVER'];\r\n    var len = statuses.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      key = jobNumber + '-' + statuses[i];\r\n      var lstr = localStorage.getItem(key);\r\n      if (lstr) {\r\n        localStorage.removeItem(key);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/job-service/job-service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { ConfigServiceProvider } from '../config-service/config-service';\r\nimport { WindowRefServiceProvider } from '../window-ref-service/window-ref-service';\r\n\r\n/*\r\n  Generated class for the EventServiceProvider provider.\r\n\r\n  Send a message to the mobile_event REST API.Used for e.g. LOGON, LOGOFF, maybe sending a message etc.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class EventServiceProvider {\r\n\r\n  constructor(public http: Http, private logger: LogServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider,\r\n    private configService: ConfigServiceProvider,\r\n    private windowRef: WindowRefServiceProvider) {\r\n    //console.log('Hello EventServiceProvider Provider');\r\n  }\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'EventServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  sendMsg = (msgType, msgData?) => {\r\n    var message = <any>{};\r\n    var data = msgData || '';\r\n\r\n    if (typeof (data) === 'object') {\r\n      message.data = data;\t\t// put object in as is\r\n    }\r\n    else {\r\n      message.data = {\r\n        driverId: this.pdaParams.getDriverId(),\r\n        appVersion: this.pdaParams.getAppVersion(),\r\n        messageText: data,\r\n        deviceHost: this.windowRef.nativeWindow.location.host\t\t\t// NOTE - this works in a browser only\r\n      };\r\n    }\r\n\r\n    message.event = msgType;\r\n    // var serverIP = this.configService.getServerIP();\r\n    //var serverPort = this.configService.getServerPort();\r\n    var apiURL = this.configService.getBaseUrl();\r\n\r\n    this.log.info(JSON.stringify(message));\r\n\r\n    var compURL = apiURL + '/api/mobile_event' + '?payload=' + encodeURIComponent(JSON.stringify(message));\r\n\r\n    this.http.get(compURL).map(res => res.json()).subscribe(data => {\r\n      //console.log(\"Data = \" + data);\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/event-service/event-service.ts","\nimport { Injectable } from '@angular/core';\nimport { Diagnostic } from '@ionic-native/diagnostic';\n\nimport { Platform } from 'ionic-angular';\n\nimport { DeviceDiagnostics } from '../../../shared/sdk/models/DeviceDiagnostics';\nimport { DeviceDiagnosticsApi } from '../../../shared/sdk/services/custom/DeviceDiagnostics';\n\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\nimport { LogServiceProvider } from '../log-service/log-service';\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\nimport { SharedServiceProvider } from '../shared-service/shared-service';\n\nimport { Device } from '@ionic-native/device';\n\n/*\n  Generated class for the DeviceDiagnosticServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class DeviceDiagnosticServiceProvider {\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'DeviceDiagnosticServiceProvider' };\n  log = this.logger.getInstance(this.logParams);\n  driverId: Number = 0;\n  lastPingTimestamp: Date = new Date();\n  isLocationAvailable: boolean = false;\n  isLocationEnabled: boolean = false;\n  isGpsLocationAvailable: boolean = false;\n  isGpsLocationEnabled: boolean = false;\n  isNetworkLocationAvailable: boolean = false;\n  isNetworkLocationEnabled: boolean = false;\n  getLocationMode: string = \"Location off\";\n  isLocationAuthorized: boolean = false;\n  isWifiAvailable: boolean = false;\n  isWifiEnabled: boolean = false;\n  isBluetoothAvailable: boolean = false;\n  intrval;\n  pda_disable_device_diagnostics;\n\n\n  constructor(private pdaParams: PdaparamsServiceProvider, private logger: LogServiceProvider, private diagnostic: Diagnostic,\n    private siteConfig: SiteconfigServiceProvider, private deviceDiagnosticsApi: DeviceDiagnosticsApi, public platform: Platform,\n    private device: Device, private sharedService: SharedServiceProvider) {\n    console.log('Hello DeviceDiagnosticServiceProvider Provider');\n\tthis.log.debug(\"constructor\");\n\n    this.pda_disable_device_diagnostics = (this.pdaParams.pda_disable_device_diagnostics || (this.siteConfig.getSiteConfigValue('PDA_DISABLE_DEVICE_DIAGNOSTICS') == 'Y'));\n\n    if (!this.pda_disable_device_diagnostics)\n      this.runDiagnostics();\n\n  }\n\n  runDiagnostics = () => {\n\tthis.log.debug(\"runDiagnostics\");\n\n    this.platform.ready().then((readySource) => {\n\t\tthis.log.debug(\"runDiagnostics platform is ready, platforms:\"+this.platform.platforms());\n\n      if (this.platform.is('cordova')) {\n        let errorCallback = (diagFn) => this.log.error(diagFn + \" : failed to diagnose from the device.\");\n\n        this.diagnostic.isLocationAvailable().then((val) => { this.isLocationAvailable = val; }, () => { });\n        this.diagnostic.isLocationEnabled().then((val) => { this.isLocationEnabled = val; }, () => { });\n        this.diagnostic.isGpsLocationAvailable().then((val) => { this.isGpsLocationAvailable = val; }, () => { });\n        this.diagnostic.isGpsLocationEnabled().then((val) => { this.isGpsLocationEnabled = val; }, () => { });\n        this.diagnostic.isNetworkLocationAvailable().then((val) => { this.isNetworkLocationAvailable = val; }, () => { });\n        this.diagnostic.isNetworkLocationEnabled().then((val) => { this.isNetworkLocationEnabled = val; }, () => { });\n        this.diagnostic.isLocationAuthorized().then((val) => { this.isLocationAuthorized = val; }, () => { });\n        this.diagnostic.isWifiAvailable().then((val) => { this.isWifiAvailable = val; }, () => { });\n        this.diagnostic.isWifiEnabled().then((val) => { this.isWifiEnabled = val; }, () => { });\n        this.diagnostic.isBluetoothAvailable().then((val) => { this.isBluetoothAvailable = val; }, () => { });\n\n\n        if (!this.platform.is('ios')) {\n          this.diagnostic.getLocationMode()\n            .then((locationMode) => {\n              switch (locationMode) {\n                case this.diagnostic.locationMode.HIGH_ACCURACY:\n                  this.getLocationMode = \"High accuracy\";\n                  // console.log(\"High accuracy\");\n                  break;\n                case this.diagnostic.locationMode.BATTERY_SAVING:\n                  this.getLocationMode = \"Battery saving\";\n                  //console.log(\"Battery saving\");\n                  break;\n                case this.diagnostic.locationMode.DEVICE_ONLY:\n                  this.getLocationMode = \"Device only\";\n                  //console.log(\"Device only\");\n                  break;\n                case this.diagnostic.locationMode.LOCATION_OFF:\n                  this.getLocationMode = \"Location off\";\n                  //console.log(\"Location off\");\n                  break;\n              }\n            }).catch(e => console.error(e));\n        } else\n          this.getLocationMode = \"Not Available\";\n\n      }\n    });\n\n  }\n\n  diagnosticPoller = () => {\n\tconsole.log(\"diagnosticPoller\");\n\tthis.log.debug(\"diagnosticPoller\");\n\n    this.runDiagnostics();\n\n    var dd = new DeviceDiagnostics();\n    dd.driverId = this.pdaParams.getDriverId();\n\n    var lastPingDate = new Date();\n    this.lastPingTimestamp = new Date(lastPingDate.getTime());\n    dd.lastPingTimestamp = this.lastPingTimestamp;\n\n    dd.getLocationMode = this.getLocationMode;\n    dd.isGpsLocationAvailable = this.isGpsLocationAvailable;\n    dd.isGpsLocationEnabled = this.isGpsLocationEnabled;\n    dd.isLocationAuthorized = this.isLocationAuthorized;\n    dd.isLocationAvailable = this.isLocationAvailable;\n    dd.isLocationEnabled = this.isLocationEnabled;\n    dd.isNetworkLocationAvailable = this.isNetworkLocationAvailable;\n    dd.isNetworkLocationEnabled = this.isNetworkLocationEnabled;\n    dd.isWifiAvailable = this.isWifiAvailable;\n    dd.isWifiEnabled = this.isWifiEnabled;\n\n    this.localStorageUsage();\n\n    this.deviceDiagnosticsApi.upsert(dd).subscribe(\n      obj => {\n        this.log.info(\"deviceDiagnosticsApi.create success : \" + JSON.stringify(obj));\n      },\n      err => {\n        this.log.error(\"deviceDiagnosticsApi.create failed : \" + JSON.stringify(err));\n      }\n    );\n  }\n\n  localStorageUsage() {\n    var x, xLen, usage = 0;\n    for (x in localStorage) {\n      if (!localStorage.hasOwnProperty(x)) { continue; }\n\n      xLen = ((localStorage[x].length * 2 + x.length * 2) / 1024);\n      usage += xLen\n    };\n\n    if (usage > 1024) {\n      this.log.info(\"LocalStorage used by the app is ::\" + (usage / 1024).toFixed(2) + \" MB\");\n    }\n    else {\n      this.log.info(\"LocalStorage used by the app is ::\" + usage.toFixed(2) + \" KB\");\n    };\n\n  }\n\n  stopDiagnostics() {\n    this.log.info(\"Stopping device diagnostics...\");\n    //if (!this.pda_disable_device_diagnostics) {\n    this.sharedService.isDiagnosticsRunning = false;\n    clearInterval(this.intrval);\n    //}\n  }\n\n  startWatching() {\n    //Call the Poller every minute\n    this.pda_disable_device_diagnostics = (this.pdaParams.pda_disable_device_diagnostics || (this.siteConfig.getSiteConfigValue('PDA_DISABLE_DEVICE_DIAGNOSTICS') == 'Y'));\n\tvar running = this.sharedService.isDiagnosticsRunning;\n\n\tconsole.log(\"startWatching: DeviceDiagnosticServiceProvider: disable_device_diagnostics:\"+this.pda_disable_device_diagnostics + ', running:'+running);\n\tthis.log.debug(\"startWatching: disable_device_diagnostics:\"+this.pda_disable_device_diagnostics + ', running:'+running);\n\n    if (!this.pda_disable_device_diagnostics) {\n\t\t\t// only start polling service if not already running\n\t\t\tif(!running) {\n\t\t\t\tthis.sharedService.isDiagnosticsRunning = true;\n\t\t\t\tthis.intrval = setInterval(this.diagnosticPoller, 60000);\n\t\t\t}\n    }\n  }\n\n  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/device-diagnostic-service/device-diagnostic-service.ts","/* tslint:disable */\n/**\n* @module LoopBackConfig\n* @description\n*\n* The LoopBackConfig module help developers to externally \n* configure the base url and api version for loopback.io\n*\n* Example\n*\n* import { LoopBackConfig } from './sdk';\n* \n* @Component() // No metadata needed for this module\n*\n* export class MyApp {\n*   constructor() {\n*     LoopBackConfig.setBaseURL('http://localhost:3000');\n*     LoopBackConfig.setApiVersion('api');\n*   }\n* }\n**/\nexport class LoopBackConfig {\n  private static path: string = '//192.168.160.132:3001';\n  private static version: string | number = 'api';\n  private static authPrefix: string = '';\n  private static debug: boolean = true;\n  private static filterOn: string = 'headers';\n  private static whereOn: string = 'headers';\n  private static secure: boolean = false;\n  private static withCredentials: boolean = false;\n\n  public static setApiVersion(version: string = 'api'): void {\n    LoopBackConfig.version = version;\n  }\n  \n  public static getApiVersion(): string | number {\n    return LoopBackConfig.version;\n  }\n\n  public static setBaseURL(url: string = '/'): void {\n    LoopBackConfig.path = url;\n  }\n  \n  public static getPath(): string {\n    return LoopBackConfig.path;\n  }\n\n  public static setAuthPrefix(authPrefix: string = ''): void {\n    LoopBackConfig.authPrefix = authPrefix;\n  }\n\n  public static getAuthPrefix(): string {\n    return LoopBackConfig.authPrefix;\n  }\n\n  public static setDebugMode(isEnabled: boolean): void {\n    LoopBackConfig.debug = isEnabled;\n  }\n\n  public static debuggable(): boolean {\n    return LoopBackConfig.debug;\n  }\n\n  public static filterOnUrl(): void {\n    LoopBackConfig.filterOn = 'url';\n  }\n\n  public static filterOnHeaders(): void {\n    LoopBackConfig.filterOn = 'headers';\n  }\n\n  public static whereOnUrl(): void {\n    LoopBackConfig.whereOn = 'url';\n  }\n\n  public static whereOnHeaders(): void {\n    LoopBackConfig.whereOn = 'headers';\n  }\n\n  public static isHeadersFilteringSet(): boolean {\n    return (LoopBackConfig.filterOn === 'headers');\n  }\n\n  public static isHeadersWhereSet(): boolean {\n    return (LoopBackConfig.whereOn === 'headers');\n  }\n\n  public static setSecureWebSockets(): void {\n    LoopBackConfig.secure = true;\n  }\n\n  public static unsetSecureWebSockets(): void {\n    LoopBackConfig.secure = false;\n  }\n\n  public static isSecureWebSocketsSet(): boolean {\n    return LoopBackConfig.secure;\n  }\n\n  public static setRequestOptionsCredentials(withCredentials: boolean = false): void {\n    LoopBackConfig.withCredentials = withCredentials;\n  }\n\n  public static getRequestOptionsCredentials(): boolean {\n    return LoopBackConfig.withCredentials;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/lb.config.ts","\r\n//import { Injectable, ReflectiveInjector } from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n//import 'reflect-metadata';\r\nimport { ConfigServiceProvider } from '../config-service/config-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { UtilServiceProvider } from '../util-service/util-service';\r\nimport { LoggerService } from '../../../shared/sdk/services/custom/logger.service';\r\nimport { Platform } from 'ionic-angular';\r\n\r\nimport { LogServiceInstance } from './log-service-instance';\r\n\r\n/*\r\n  Generated class for the LogServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class LogServiceProvider extends LoggerService {\r\n\r\n  /*  private pdaParamService;\r\n   private configService;\r\n   private loggerService;\r\n   //public http; */\r\n\r\n\r\n  constructor(\r\n    private pdaParamService: PdaparamsServiceProvider,\r\n    private configService: ConfigServiceProvider, public http: Http,\r\n    private sharedService: SharedServiceProvider, public platform: Platform,\r\n    public utilService: UtilServiceProvider) {\r\n    super();\r\n  }\r\n\r\n  context;\r\n  pdaParams;\r\n  _log;\r\n\r\n  /*  enabled(_isEnabled) {\r\n     this.isEnabled = !!_isEnabled;\r\n   }; */\r\n\r\n  logInstance(context) {\r\n    //console.log(\"=========The Driver ID in the logService.ts is ::============\" + context.driver);\r\n    context.ver = this.configService.appConfig.version;\r\n    this.context = context;\r\n\r\n    this.pdaParams = this.pdaParamService;\r\n    //context, driverId, logServerIP, logServerPort\r\n    return new LogServiceInstance(this.http, this.context, this.pdaParamService.getDriverId(), this.getlogServerIP(), this.getlogServerPort(), this.pdaParams, this.sharedService, this.platform, this.utilService);\r\n  };\r\n\r\n\r\n  getInstance(context) {\r\n    //return new Logger(context);\r\n    return this.logInstance(context);\r\n  };\r\n\r\n  setContext(context) {\r\n    this.context = context;\r\n  }\r\n\r\n  getlogServerIP() {\r\n    return (this.configService.appConfig.logServerIP);\r\n  };\r\n\r\n  getlogServerPort() {\r\n    return (this.configService.appConfig.logServerPort);\r\n  };\r\n  /*\r\n    debug(arg: string) {\r\n      if (LoopBackConfig.debuggable())\r\n        console.debug(arg);\r\n    }\r\n    warn(arg: string) {\r\n      if (LoopBackConfig.debuggable())\r\n        console.warn(arg);\r\n    } */\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/log-service/log-service.ts","/* tslint:disable */\ndeclare var Object: any;\nimport { Injectable, Inject } from '@angular/core';\nimport { InternalStorage } from '../../storage/storage.swaps';\nimport { SDKToken } from '../../models/BaseModels';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class LoopBackAuth {\n  /**\n   * @type {SDKToken}\n   **/\n  private token: SDKToken = new SDKToken();\n  /**\n   * @type {string}\n   **/\n  protected prefix: string = '$LoopBackSDK$';\n  /**\n   * @method constructor\n   * @param {InternalStorage} storage Internal Storage Driver\n   * @description\n   * The constructor will initialize the token loading data from storage\n   **/\n  constructor(@Inject(InternalStorage) protected storage: InternalStorage) {\n    this.token.id = this.load('id');\n    this.token.user = this.load('user');\n    this.token.userId = this.load('userId');\n    this.token.created = this.load('created');\n    this.token.ttl = this.load('ttl');\n    this.token.rememberMe = this.load('rememberMe');\n  }\n  /**\n   * @method setRememberMe\n   * @param {boolean} value Flag to remember credentials\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setRememberMe(value: boolean): void {\n    this.token.rememberMe = value;\n  }\n  /**\n   * @method setUser\n   * @param {any} user Any type of user model\n   * @return {void}\n   * @description\n   * This method will update the user information and persist it if the\n   * rememberMe flag is set.\n   **/\n  public setUser(user: any) {\n    this.token.user = user;\n    this.save();\n  }\n  /**\n   * @method setToken\n   * @param {SDKToken} token SDKToken or casted AccessToken instance\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setToken(token: SDKToken): void {\n    this.token = Object.assign({}, this.token, token);\n    this.save();\n  }\n  /**\n   * @method getToken\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials.\n   **/\n  public getToken(): SDKToken {\n    return <SDKToken>this.token;\n  }\n  /**\n   * @method getAccessTokenId\n   * @return {string}\n   * @description\n   * This method will return the actual token string, not the object instance.\n   **/\n  public getAccessTokenId(): string {\n    return this.token.id;\n  }\n  /**\n   * @method getCurrentUserId\n   * @return {any}\n   * @description\n   * This method will return the current user id, it can be number or string.\n   **/\n  public getCurrentUserId(): any {\n    return this.token.userId;\n  }\n  /**\n   * @method getCurrentUserData\n   * @return {any}\n   * @description\n   * This method will return the current user instance.\n   **/\n  public getCurrentUserData(): any {\n    return (typeof this.token.user === 'string') ? JSON.parse(this.token.user) : this.token.user;\n  }\n  /**\n   * @method save\n   * @return {boolean} Whether or not the information was saved\n   * @description\n   * This method will save in either local storage or cookies the current credentials.\n   * But only if rememberMe is enabled.\n   **/\n  public save(): boolean {\n      let today = new Date();\n      let expires = new Date(today.getTime() + (this.token.ttl * 1000));\n      this.persist('id', this.token.id, expires);\n      this.persist('user', this.token.user, expires);\n      this.persist('userId', this.token.userId, expires);\n      this.persist('created', this.token.created, expires);\n      this.persist('ttl', this.token.ttl, expires);\n      this.persist('rememberMe', this.token.rememberMe, expires);\n      return true;\n  };\n  /**\n   * @method load\n   * @param {string} prop Property name\n   * @return {any} Any information persisted in storage\n   * @description\n   * This method will load either from local storage or cookies the provided property.\n   **/\n  protected load(prop: string): any {\n    return this.storage.get(`${this.prefix}${prop}`);\n  }\n  /**\n   * @method clear\n   * @return {void}\n   * @description\n   * This method will clear cookies or the local storage.\n   **/\n  public clear(): void {\n    Object.keys(this.token).forEach((prop: string) => this.storage.remove(`${this.prefix}${prop}`));\n    this.token = new SDKToken();\n  }\n  /**\n   * @method persist\n   * @return {void}\n   * @description\n   * This method saves values to storage\n   **/\n  protected persist(prop: string, value: any, expires?: Date): void {\n    try {\n      this.storage.set(\n        `${this.prefix}${prop}`,\n        (typeof value === 'object') ? JSON.stringify(value) : value,\n        this.token.rememberMe?expires:null\n      );\n    }\n    catch (err) {\n      console.error('Cannot access local/session storage:', err);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/core/auth.service.ts","/* tslint:disable */\n/**\n * @module Storage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class BaseStorage {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in storage.\n   **/\n  get(key: string): any {}\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {}\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {}\n}\n/**\n * @module InternalStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n * This is mainly required because Angular Universal integration.\n * It does inject a CookieStorage instead of LocalStorage.\n **/\nexport class InternalStorage extends BaseStorage {}\n/**\n * @module SDKStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SDKStorage class is used for dependency injection swapping.\n * It will be provided using factory method according the right environment.\n * This is created for public usage, to allow persisting custom data\n * Into the local storage API.\n **/\nexport class SDKStorage extends BaseStorage {}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/storage/storage.swaps.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface JobInterface {\n  \"mobjobuid\"?: string;\n  \"mobjobSeq\"?: number;\n  \"mobjobNumber\": number;\n  \"mobjobBookingDay\": Date;\n  \"mobjobBasejobNum\": number;\n  \"mobjobLegNumber\": number;\n  \"mobjobTotalLegs\"?: number;\n  \"mobjobStatus\"?: string;\n  \"mobjobServiceCode\"?: string;\n  \"mobjobReturnCode\"?: boolean;\n  \"mobjobWhichCompany\"?: string;\n  \"mobjobClientCode\": string;\n  \"mobjobClientName\"?: string;\n  \"mobjobClientRef\"?: string;\n  \"mobjobClientRef2\"?: string;\n  \"mobjobCallersName\"?: string;\n  \"mobjobExtraPhone\"?: string;\n  \"mobjobAddress1\"?: string;\n  \"mobjobAddress2\"?: string;\n  \"mobjobAddress3\"?: string;\n  \"mobjobAddress4\"?: string;\n  \"mobjobAddress5\"?: string;\n  \"mobjobToAddress1\"?: string;\n  \"mobjobToSuburb\"?: string;\n  \"mobjobAddrExtas\"?: string;\n  \"mobjobEtaTime\"?: Date;\n  \"mobjobIsCashJob\"?: boolean;\n  \"mobjobDriver\"?: number;\n  \"mobjobNeededPod\"?: string;\n  \"mobjobPodTime\"?: Date;\n  \"mobjobPodName\"?: string;\n  \"mobjobJobType\"?: number;\n  \"mobjobJobPieces\"?: number;\n  \"mobjobJobDrops\"?: number;\n  \"mobjobWeight\"?: number;\n  \"mobjobSignat\"?: string;\n  \"mobjobTimeAC\"?: Date;\n  \"mobjobTimePU\"?: Date;\n  \"mobjobTimeAp\"?: Date;\n  \"mobjobTimeAd\"?: Date;\n  \"onDeviceTime\": Date;\n  \"gpsLatPU\"?: number;\n  \"gpsLongPU\"?: number;\n  \"gpsLatDL\"?: number;\n  \"gpsLongDL\"?: number;\n  \"isClientUpsert\"?: boolean;\n  \"lastModified\": Date;\n  \"addrLatPU\"?: number;\n  \"addrLongPU\"?: number;\n  \"addrLatDL\"?: number;\n  \"addrLongDL\"?: number;\n  \"photoLinkFname\"?: string;\n  \"JobexInstructions\"?: string;\n  \"JobexSpecialInstructions\"?: string;\n  \"deliveryToBase\"?: string;\n\n}\n\nexport class Job implements JobInterface {\n  \"mobjobuid\": string;\n  \"mobjobSeq\": number;\n  \"mobjobNumber\": number;\n  \"mobjobBookingDay\": Date;\n  \"mobjobBasejobNum\": number;\n  \"mobjobLegNumber\": number;\n  \"mobjobTotalLegs\": number;\n  \"mobjobStatus\": string;\n  \"mobjobServiceCode\": string;\n  \"mobjobReturnCode\": boolean;\n  \"mobjobWhichCompany\": string;\n  \"mobjobClientCode\": string;\n  \"mobjobClientName\": string;\n  \"mobjobClientRef\": string;\n  \"mobjobClientRef2\": string;\n  \"mobjobCallersName\": string;\n  \"mobjobExtraPhone\": string;\n  \"mobjobAddress1\": string;\n  \"mobjobAddress2\": string;\n  \"mobjobAddress3\": string;\n  \"mobjobAddress4\": string;\n  \"mobjobAddress5\": string;\n  \"mobjobToAddress1\": string;\n  \"mobjobToSuburb\": string;\n  \"mobjobAddrExtas\": string;\n  \"mobjobEtaTime\": Date;\n  \"mobjobIsCashJob\": boolean;\n  \"mobjobDriver\": number;\n  \"mobjobNeededPod\": string;\n  \"mobjobPodTime\": Date;\n  \"mobjobPodName\": string;\n  \"mobjobJobType\": number;\n  \"mobjobJobPieces\": number;\n  \"mobjobJobDrops\": number;\n  \"mobjobWeight\": number;\n  \"mobjobSignat\": string;\n  \"mobjobTimeAC\": Date;\n  \"mobjobTimePU\": Date;\n  \"mobjobTimeAp\": Date;\n  \"mobjobTimeAd\": Date;\n  \"onDeviceTime\": Date;\n  \"gpsLatPU\": number;\n  \"gpsLongPU\": number;\n  \"gpsLatDL\": number;\n  \"gpsLongDL\": number;\n  \"isClientUpsert\": boolean;\n  \"lastModified\": Date;\n  \"addrLatPU\": number;\n  \"addrLongPU\": number;\n  \"addrLatDL\": number;\n  \"addrLongDL\": number;\n  \"photoLinkFname\": string;\n  \"JobexInstructions\": string;\n  \"JobexSpecialInstructions\": string;\n  \"deliveryToBase\": string;\n  constructor(data?: JobInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Job`.\n   */\n  public static getModelName() {\n    return \"Job\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Job for dynamic purposes.\n  **/\n  public static factory(data: JobInterface): Job {\n    return new Job(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Job',\n      plural: 'Jobs',\n      path: 'Jobs',\n      idName: 'mobjobuid',\n      properties: {\n        \"mobjobuid\": {\n          name: 'mobjobuid',\n          type: 'string'\n        },\n        \"mobjobSeq\": {\n          name: 'mobjobSeq',\n          type: 'number'\n        },\n        \"mobjobNumber\": {\n          name: 'mobjobNumber',\n          type: 'number'\n        },\n        \"mobjobBookingDay\": {\n          name: 'mobjobBookingDay',\n          type: 'Date'\n        },\n        \"mobjobBasejobNum\": {\n          name: 'mobjobBasejobNum',\n          type: 'number'\n        },\n        \"mobjobLegNumber\": {\n          name: 'mobjobLegNumber',\n          type: 'number'\n        },\n        \"mobjobTotalLegs\": {\n          name: 'mobjobTotalLegs',\n          type: 'number'\n        },\n        \"mobjobStatus\": {\n          name: 'mobjobStatus',\n          type: 'string',\n          default: 'IP'\n        },\n        \"mobjobServiceCode\": {\n          name: 'mobjobServiceCode',\n          type: 'string'\n        },\n        \"mobjobReturnCode\": {\n          name: 'mobjobReturnCode',\n          type: 'boolean'\n        },\n        \"mobjobWhichCompany\": {\n          name: 'mobjobWhichCompany',\n          type: 'string'\n        },\n        \"mobjobClientCode\": {\n          name: 'mobjobClientCode',\n          type: 'string',\n          default: 'A+'\n        },\n        \"mobjobClientName\": {\n          name: 'mobjobClientName',\n          type: 'string'\n        },\n        \"mobjobClientRef\": {\n          name: 'mobjobClientRef',\n          type: 'string'\n        },\n        \"mobjobClientRef2\": {\n          name: 'mobjobClientRef2',\n          type: 'string'\n        },\n        \"mobjobCallersName\": {\n          name: 'mobjobCallersName',\n          type: 'string'\n        },\n        \"mobjobExtraPhone\": {\n          name: 'mobjobExtraPhone',\n          type: 'string'\n        },\n        \"mobjobAddress1\": {\n          name: 'mobjobAddress1',\n          type: 'string'\n        },\n        \"mobjobAddress2\": {\n          name: 'mobjobAddress2',\n          type: 'string'\n        },\n        \"mobjobAddress3\": {\n          name: 'mobjobAddress3',\n          type: 'string'\n        },\n        \"mobjobAddress4\": {\n          name: 'mobjobAddress4',\n          type: 'string'\n        },\n        \"mobjobAddress5\": {\n          name: 'mobjobAddress5',\n          type: 'string'\n        },\n        \"mobjobToAddress1\": {\n          name: 'mobjobToAddress1',\n          type: 'string'\n        },\n        \"mobjobToSuburb\": {\n          name: 'mobjobToSuburb',\n          type: 'string'\n        },\n        \"mobjobAddrExtas\": {\n          name: 'mobjobAddrExtas',\n          type: 'string'\n        },\n        \"mobjobEtaTime\": {\n          name: 'mobjobEtaTime',\n          type: 'Date'\n        },\n        \"mobjobIsCashJob\": {\n          name: 'mobjobIsCashJob',\n          type: 'boolean'\n        },\n        \"mobjobDriver\": {\n          name: 'mobjobDriver',\n          type: 'number'\n        },\n        \"mobjobNeededPod\": {\n          name: 'mobjobNeededPod',\n          type: 'string'\n        },\n        \"mobjobPodTime\": {\n          name: 'mobjobPodTime',\n          type: 'Date'\n        },\n        \"mobjobPodName\": {\n          name: 'mobjobPodName',\n          type: 'string'\n        },\n        \"mobjobJobType\": {\n          name: 'mobjobJobType',\n          type: 'number'\n        },\n        \"mobjobJobPieces\": {\n          name: 'mobjobJobPieces',\n          type: 'number'\n        },\n        \"mobjobJobDrops\": {\n          name: 'mobjobJobDrops',\n          type: 'number'\n        },\n        \"mobjobWeight\": {\n          name: 'mobjobWeight',\n          type: 'number'\n        },\n        \"mobjobSignat\": {\n          name: 'mobjobSignat',\n          type: 'string'\n        },\n        \"mobjobTimeAC\": {\n          name: 'mobjobTimeAC',\n          type: 'Date'\n        },\n        \"mobjobTimePU\": {\n          name: 'mobjobTimePU',\n          type: 'Date'\n        },\n        \"mobjobTimeAp\": {\n          name: 'mobjobTimeAp',\n          type: 'Date'\n        },\n        \"mobjobTimeAd\": {\n          name: 'mobjobTimeAd',\n          type: 'Date'\n        },\n        \"onDeviceTime\": {\n          name: 'onDeviceTime',\n          type: 'Date'\n        },\n        \"gpsLatPU\": {\n          name: 'gpsLatPU',\n          type: 'number'\n        },\n        \"gpsLongPU\": {\n          name: 'gpsLongPU',\n          type: 'number'\n        },\n        \"gpsLatDL\": {\n          name: 'gpsLatDL',\n          type: 'number'\n        },\n        \"gpsLongDL\": {\n          name: 'gpsLongDL',\n          type: 'number'\n        },\n        \"isClientUpsert\": {\n          name: 'isClientUpsert',\n          type: 'boolean',\n          default: false\n        },\n        \"lastModified\": {\n          name: 'lastModified',\n          type: 'Date'\n        },\n        \"addrLatPU\": {\n          name: 'addrLatPU',\n          type: 'number',\n          default: 0\n        },\n        \"addrLongPU\": {\n          name: 'addrLongPU',\n          type: 'number',\n          default: 0\n        },\n        \"addrLatDL\": {\n          name: 'addrLatDL',\n          type: 'number',\n          default: 0\n        },\n        \"addrLongDL\": {\n          name: 'addrLongDL',\n          type: 'number',\n          default: 0\n        },\n        \"photoLinkFname\": {\n          name: 'photoLinkFname',\n          type: 'string',\n          default: '0'\n        },\n        \"JobexInstructions\": {\n          name: 'JobexInstructions',\n          type: 'string',\n          default: '0'\n        },\n        \"JobexSpecialInstructions\": {\n          name: 'JobexSpecialInstructions',\n          type: 'string',\n          default: '0'\n        },\n        \"deliveryToBase\": {\n          name: 'deliveryToBase',\n          type: 'string',\n          default: '0'\n        }\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Job.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface InstallationInterface {\n  \"appId\": string;\n  \"appVersion\"?: string;\n  \"badge\"?: number;\n  \"created\"?: Date;\n  \"deviceToken\": string;\n  \"deviceType\": string;\n  \"modified\"?: Date;\n  \"status\"?: string;\n  \"subscriptions\"?: Array<any>;\n  \"timeZone\"?: string;\n  \"userId\"?: string;\n  \"id\"?: any;\n}\n\nexport class Installation implements InstallationInterface {\n  \"appId\": string;\n  \"appVersion\": string;\n  \"badge\": number;\n  \"created\": Date;\n  \"deviceToken\": string;\n  \"deviceType\": string;\n  \"modified\": Date;\n  \"status\": string;\n  \"subscriptions\": Array<any>;\n  \"timeZone\": string;\n  \"userId\": string;\n  \"id\": any;\n  constructor(data?: InstallationInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Installation`.\n   */\n  public static getModelName() {\n    return \"Installation\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Installation for dynamic purposes.\n  **/\n  public static factory(data: InstallationInterface): Installation{\n    return new Installation(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Installation',\n      plural: 'Installations',\n      path: 'Installations',\n      idName: 'id',\n      properties: {\n        \"appId\": {\n          name: 'appId',\n          type: 'string'\n        },\n        \"appVersion\": {\n          name: 'appVersion',\n          type: 'string'\n        },\n        \"badge\": {\n          name: 'badge',\n          type: 'number'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"deviceToken\": {\n          name: 'deviceToken',\n          type: 'string'\n        },\n        \"deviceType\": {\n          name: 'deviceType',\n          type: 'string'\n        },\n        \"modified\": {\n          name: 'modified',\n          type: 'Date'\n        },\n        \"status\": {\n          name: 'status',\n          type: 'string'\n        },\n        \"subscriptions\": {\n          name: 'subscriptions',\n          type: 'Array&lt;any&gt;'\n        },\n        \"timeZone\": {\n          name: 'timeZone',\n          type: 'string'\n        },\n        \"userId\": {\n          name: 'userId',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Installation.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface JseaDriverAnswersInterface {\n  \"jdauid\"?: string;\n  \"jdaSeqnum\"?: number;\n  \"jdaJobNum\": number;\n  \"jdaJobBday\": Date;\n  \"jdaDriverId\": number;\n  \"jdaFormType\"?: string;\n  \"jdaFormLeg\"?: number;\n  \"jdaOrder\"?: number;\n  \"jdaCheckBox\"?: boolean;\n  \"jdaJobStatusType\"?: string;\n}\n\nexport class JseaDriverAnswers implements JseaDriverAnswersInterface {\n  \"jdauid\": string;\n  \"jdaSeqnum\": number;\n  \"jdaJobNum\": number;\n  \"jdaJobBday\": Date;\n  \"jdaDriverId\": number;\n  \"jdaFormType\": string;\n  \"jdaFormLeg\": number;\n  \"jdaOrder\": number;\n  \"jdaCheckBox\": boolean;\n  \"jdaJobStatusType\": string;\n  constructor(data?: JseaDriverAnswersInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `JseaDriverAnswers`.\n   */\n  public static getModelName() {\n    return \"JseaDriverAnswers\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of JseaDriverAnswers for dynamic purposes.\n  **/\n  public static factory(data: JseaDriverAnswersInterface): JseaDriverAnswers{\n    return new JseaDriverAnswers(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'JseaDriverAnswers',\n      plural: 'JseaDriverAnswers',\n      path: 'JseaDriverAnswers',\n      idName: 'jdauid',\n      properties: {\n        \"jdauid\": {\n          name: 'jdauid',\n          type: 'string'\n        },\n        \"jdaSeqnum\": {\n          name: 'jdaSeqnum',\n          type: 'number'\n        },\n        \"jdaJobNum\": {\n          name: 'jdaJobNum',\n          type: 'number'\n        },\n        \"jdaJobBday\": {\n          name: 'jdaJobBday',\n          type: 'Date'\n        },\n        \"jdaDriverId\": {\n          name: 'jdaDriverId',\n          type: 'number'\n        },\n        \"jdaFormType\": {\n          name: 'jdaFormType',\n          type: 'string'\n        },\n        \"jdaFormLeg\": {\n          name: 'jdaFormLeg',\n          type: 'number'\n        },\n        \"jdaOrder\": {\n          name: 'jdaOrder',\n          type: 'number'\n        },\n        \"jdaCheckBox\": {\n          name: 'jdaCheckBox',\n          type: 'boolean'\n        },\n        \"jdaJobStatusType\": {\n          name: 'jdaJobStatusType',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/JseaDriverAnswers.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface BarcodeHistInterface {\n  \"bchuid\"?: string;\n  \"bchSeq\": number;\n  \"bchBarcode\": string;\n  \"bchTimestamp\": string;\n  \"bchJobno\"?: number;\n  \"bchJobdate\"?: Date;\n  \"bchDriver\"?: number;\n  \"bchEvent\"?: string;\n  \"bchEventSubtype\"?: string;\n}\n\nexport class BarcodeHist implements BarcodeHistInterface {\n  \"bchuid\": string;\n  \"bchSeq\": number;\n  \"bchBarcode\": string;\n  \"bchTimestamp\": string;\n  \"bchJobno\": number;\n  \"bchJobdate\": Date;\n  \"bchDriver\": number;\n  \"bchEvent\": string;\n  \"bchEventSubtype\": string;\n  constructor(data?: BarcodeHistInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `BarcodeHist`.\n   */\n  public static getModelName() {\n    return \"BarcodeHist\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of BarcodeHist for dynamic purposes.\n  **/\n  public static factory(data: BarcodeHistInterface): BarcodeHist{\n    return new BarcodeHist(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'BarcodeHist',\n      plural: 'BarcodeHists',\n      path: 'BarcodeHists',\n      idName: 'bchuid',\n      properties: {\n        \"bchuid\": {\n          name: 'bchuid',\n          type: 'string'\n        },\n        \"bchSeq\": {\n          name: 'bchSeq',\n          type: 'number'\n        },\n        \"bchBarcode\": {\n          name: 'bchBarcode',\n          type: 'string'\n        },\n        \"bchTimestamp\": {\n          name: 'bchTimestamp',\n          type: 'string'\n        },\n        \"bchJobno\": {\n          name: 'bchJobno',\n          type: 'number'\n        },\n        \"bchJobdate\": {\n          name: 'bchJobdate',\n          type: 'Date'\n        },\n        \"bchDriver\": {\n          name: 'bchDriver',\n          type: 'number'\n        },\n        \"bchEvent\": {\n          name: 'bchEvent',\n          type: 'string'\n        },\n        \"bchEventSubtype\": {\n          name: 'bchEventSubtype',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/BarcodeHist.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface DeviceDiagnosticsInterface {\n  \"driverId\": number;\n  \"lastPingTimestamp\"?: Date;\n  \"isLocationAvailable\"?: boolean;\n  \"isLocationEnabled\"?: boolean;\n  \"isGpsLocationAvailable\"?: boolean;\n  \"isGpsLocationEnabled\"?: boolean;\n  \"isNetworkLocationAvailable\"?: boolean;\n  \"isNetworkLocationEnabled\"?: boolean;\n  \"getLocationMode\"?: string;\n  \"isLocationAuthorized\"?: boolean;\n  \"isWifiAvailable\"?: boolean;\n  \"isWifiEnabled\"?: boolean;\n  \n}\n\nexport class DeviceDiagnostics implements DeviceDiagnosticsInterface {\n  \"driverId\": number;\n  \"lastPingTimestamp\": Date;\n  \"isLocationAvailable\": boolean;\n  \"isLocationEnabled\": boolean;\n  \"isGpsLocationAvailable\": boolean;\n  \"isGpsLocationEnabled\": boolean;\n  \"isNetworkLocationAvailable\": boolean;\n  \"isNetworkLocationEnabled\": boolean;\n  \"getLocationMode\": string;\n  \"isLocationAuthorized\": boolean;\n  \"isWifiAvailable\": boolean;\n  \"isWifiEnabled\": boolean;  \n  constructor(data?: DeviceDiagnosticsInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DeviceDiagnostics`.\n   */\n  public static getModelName() {\n    return \"DeviceDiagnostics\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DeviceDiagnostics for dynamic purposes.\n  **/\n  public static factory(data: DeviceDiagnosticsInterface): DeviceDiagnostics{\n    return new DeviceDiagnostics(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DeviceDiagnostics',\n      plural: 'DeviceDiagnostics',\n      path: 'DeviceDiagnostics',\n      idName: 'driverId',\n      properties: {\n        \"driverId\": {\n          name: 'driverId',\n          type: 'number'\n        },\n        \"lastPingTimestamp\": {\n          name: 'lastPingTimestamp',\n          type: 'Date'\n        },\n        \"isLocationAvailable\": {\n          name: 'isLocationAvailable',\n          type: 'boolean'\n        },\n        \"isLocationEnabled\": {\n          name: 'isLocationEnabled',\n          type: 'boolean'\n        },\n        \"isGpsLocationAvailable\": {\n          name: 'isGpsLocationAvailable',\n          type: 'boolean'\n        },\n        \"isGpsLocationEnabled\": {\n          name: 'isGpsLocationEnabled',\n          type: 'boolean'\n        },\n        \"isNetworkLocationAvailable\": {\n          name: 'isNetworkLocationAvailable',\n          type: 'boolean'\n        },\n        \"isNetworkLocationEnabled\": {\n          name: 'isNetworkLocationEnabled',\n          type: 'boolean'\n        },\n        \"getLocationMode\": {\n          name: 'getLocationMode',\n          type: 'string'\n        },\n        \"isLocationAuthorized\": {\n          name: 'isLocationAuthorized',\n          type: 'boolean'\n        },\n        \"isWifiAvailable\": {\n          name: 'isWifiAvailable',\n          type: 'boolean'\n        },\n        \"isWifiEnabled\": {\n          name: 'isWifiEnabled',\n          type: 'boolean'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/DeviceDiagnostics.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { Job } from '../../models/Job';\nimport { JobChange } from '../../models/JobChange';\nimport { TpmPdaController } from '../../models/TpmPdaController';\nimport { GpsHistory } from '../../models/GpsHistory';\nimport { Application } from '../../models/Application';\nimport { Installation } from '../../models/Installation';\nimport { Notification } from '../../models/Notification';\nimport { Push } from '../../models/Push';\nimport { Mobile_event } from '../../models/Mobile_event';\nimport { SiteConfig } from '../../models/SiteConfig';\nimport { DespatchToDriverMessages } from '../../models/DespatchToDriverMessages';\nimport { JseaDriverQuestions } from '../../models/JseaDriverQuestions';\nimport { JseaDriverAnswers } from '../../models/JseaDriverAnswers';\nimport { JseaDriverAnswersChange } from '../../models/JseaDriverAnswersChange';\nimport { Photocontainer } from '../../models/Photocontainer';\nimport { Image } from '../../models/Image';\nimport { BarcodeHist } from '../../models/BarcodeHist';\nimport { BarcodeHistChange } from '../../models/BarcodeHistChange';\nimport { DeviceDiagnostics } from '../../models/DeviceDiagnostics';\n\nexport interface Models { [name: string]: any }\n\n@Injectable()\nexport class SDKModels {\n\n  private models: Models = {\n    Job: Job,\n    JobChange: JobChange,\n    TpmPdaController: TpmPdaController,\n    GpsHistory: GpsHistory,\n    Application: Application,\n    Installation: Installation,\n    Notification: Notification,\n    Push: Push,\n    Mobile_event: Mobile_event,\n    SiteConfig: SiteConfig,\n    DespatchToDriverMessages: DespatchToDriverMessages,\n    JseaDriverQuestions: JseaDriverQuestions,\n    JseaDriverAnswers: JseaDriverAnswers,\n    JseaDriverAnswersChange: JseaDriverAnswersChange,\n    Photocontainer: Photocontainer,\n    Image: Image,\n    BarcodeHist: BarcodeHist,\n    BarcodeHistChange: BarcodeHistChange,\n    DeviceDiagnostics: DeviceDiagnostics,\n    \n  };\n\n  public get(modelName: string): any {\n    return this.models[modelName];\n  }\n\n  public getAll(): Models {\n    return this.models;\n  }\n\n  public getModelNames(): string[] {\n    return Object.keys(this.models);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/SDKModels.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { DeviceDiagnostics } from '../../models/DeviceDiagnostics';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `DeviceDiagnostics` model.\n */\n@Injectable()\nexport class DeviceDiagnosticsApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DeviceDiagnostics` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DeviceDiagnostics\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id DeviceDiagnostics id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DeviceDiagnostics` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DeviceDiagnostics/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DeviceDiagnostics`.\n   */\n  public getModelName() {\n    return \"DeviceDiagnostics\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/DeviceDiagnostics.ts","import { Injectable } from '@angular/core';\r\n\r\n//import 'reflect-metadata';\r\n\r\n/*\r\n  Generated class for the CustomerconnServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n\r\n\r\n@Injectable()\r\nexport class CustomerconnServiceProvider {\r\n\r\n  constructor() {\r\n    //console.log('Hello CustomerconnServiceProvider Provider');\r\n  }\r\n\r\n\r\n  customerConns = {\r\n    \"remote\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\"\r\n    },\r\n    \"local\": {\r\n      \"connector\": \"memory\",\r\n      \"debug\": \"true\",\r\n      \"localStorage\": \"osc-local-db\"\r\n    },\r\n    \"scope\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"SCOPE\",\r\n      \"serverIP\": \"scope.opensyscon.com.au\",\r\n      \"serverPort\": 3112,\r\n      \"url\": \"http://scope.opensyscon.com.au:3112\"\r\n    },\r\n    \"swift1\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"SWIFT1\",\r\n      \"serverIP\": \"booking.swifttransport.com.au\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://booking.swifttransport.com.au:3001\"\r\n    },\r\n    \"oscvtest\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"OSCVTEST\",\r\n      \"serverIP\": \"opensyscon.com.au\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://opensyscon.com.au:3000\"\r\n    },\r\n    \"wpe\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"WPE\",\r\n      \"serverIP\": \"remote.wpedubbo.com.au\",\r\n      \"serverPort\": 3115,\r\n      \"url\": \"http://remote.wpedubbo.com.au:3115\"\r\n    },\r\n    \"aptold\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"APT\",\r\n      \"serverIP\": \"allpur2.lnk.telstra.net\",\r\n      \"serverPort\": 3000,\r\n      \"url\": \"http://allpur2.lnk.telstra.net:3000\"\r\n    },\r\n    \"apt\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"APT\",\r\n      \"serverIP\": \"tplus.allpurpose.com.au\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://tplus.allpurpose.com.au:3001\"\r\n    },\r\n    \"ces\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"CES\",\r\n      \"serverIP\": \"couriers-express.com.au\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://couriers-express.com.au:3001\"\r\n    },\r\n    \"itd\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"ITD\",\r\n      \"serverIP\": \"carry.intime-distribution.com.au\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://carry.intime-distribution.com.au:3001\"\r\n    },\r\n    \"glc\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"GLC\",\r\n      \"serverIP\": \"glcouriers.com.au\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://glcouriers.com.au:3001\"\r\n    },\r\n    \"ace\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"ACE\",\r\n      \"serverIP\": \"acecouriers.com.au\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://acecouriers.com.au:3001\"\r\n    },\r\n    \"pam\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"PAM\",\r\n      \"serverIP\": \"logist14.lnk.telstra.net\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://logist14.lnk.telstra.net:3001\"\r\n    },\r\n    \"flg\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"FLG\",\r\n      \"serverIP\": \"opensyscon.com.au\",\r\n      \"serverPort\": 3133,\r\n      \"url\": \"http://opensyscon.com.au:3133\"\r\n    },\r\n    \"cct\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"CITYCRANE\",\r\n      \"serverIP\": \"remote.citycranetrucks.com.au\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://remote.citycranetrucks.com.au:3001\"\r\n    },\r\n    \"swift2\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"SWIFT2\",\r\n      \"serverIP\": \"roy1220545.lnk.telstra.net\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://roy1220545.lnk.telstra.net:3001\"\r\n    },\r\n    \"wads\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"WADS\",\r\n      \"serverIP\": \"wads.opensyscon.com.au\",\r\n      \"serverPort\": 3161,\r\n      \"url\": \"http://wads.opensyscon.com.au:3161\"\r\n    },\r\n    \"univ\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"UNIVERSAL\",\r\n      \"serverIP\": \"universal.opensyscon.com.au\",\r\n      \"serverPort\": 3162,\r\n      \"url\": \"http://universal.opensyscon.com.au:3162\"\r\n    },\r\n    \"gempost\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"GEMPOST\",\r\n      \"serverIP\": \"gempost.opensyscon.com.au\",\r\n      \"serverPort\": 3002,\r\n      \"url\": \"https://gempost.opensyscon.com.au:3002\"\r\n    },\r\n    \"rback1\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"REDBACK\",\r\n      \"serverIP\": \"103.25.182.105\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://103.25.182.105:3001\"\r\n    },\r\n    \"adlx\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"ADLX\",\r\n      \"serverIP\": \"adlx.opensyscon.com.au\",\r\n      \"serverPort\": 3174,\r\n      \"url\": \"http://adlx.opensyscon.com.au:3174\"\r\n    },\r\n    \"transit\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"TRANSIT\",\r\n      \"serverIP\": \"transit.opensyscon.com.au\",\r\n      \"serverPort\": 3172,\r\n      \"url\": \"http://transit.opensyscon.com.au:3172\"\r\n    },\r\n    \"sgs\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"SGS\",\r\n      \"serverIP\": \"sgs.opensyscon.com.au\",\r\n      \"serverPort\": 3171,\r\n      \"url\": \"http://sgs.opensyscon.com.au:3171\"\r\n    },\r\n    \"rawroad\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"RAWROAD\",\r\n      \"serverIP\": \"rawroad.opensyscon.com.au\",\r\n      \"serverPort\": 3182,\r\n      \"url\": \"http://rawroad.opensyscon.com.au:3182\"\r\n    },\r\n    \"capmel\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"CAPMEL\",\r\n      \"serverIP\": \"tplusmobile-mel.capitaltransport.com.au\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://tplusmobile-mel.capitaltransport.com.au:3001\"\r\n    },\r\n    \"capsyd\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"CAPSYD\",\r\n      \"serverIP\": \"tplusmobile-syd.capitaltransport.com.au\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://tplusmobile-syd.capitaltransport.com.au:3001\"\r\n    },\r\n    \"capper\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"CAPPER\",\r\n      \"serverIP\": \"tplusmobile-per.capitaltransport.com.au\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://tplusmobile-per.capitaltransport.com.au:3001\"\r\n    },\r\n    \"capadl\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"CAPADL\",\r\n      \"serverIP\": \"tplusmobile-adl.capitaltransport.com.au\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://tplusmobile-adl.capitaltransport.com.au:3001\"\r\n    },\r\n    \"capbne\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"CAPBNE\",\r\n      \"serverIP\": \"tplusmobile-bne.capitaltransport.com.au\",\r\n      \"serverPort\": 3001,\r\n      \"url\": \"http://tplusmobile-bne.capitaltransport.com.au:3001\"\r\n    },    \r\n    \"lfr\": {\r\n      \"connector\": \"remote\",\r\n      \"debug\": \"true\",\r\n      \"clientId\": \"LFR\",\r\n      \"serverIP\": \"lf.opensyscon.com.au\",\r\n      \"serverPort\": 3176,\r\n      \"url\": \"http://lf.opensyscon.com.au:3176\"\r\n    }\r\n  }\r\n\r\n  getConnectionDetails = (customer) => {\r\n    return this.customerConns[customer];\r\n\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/customerconn-service/customerconn-service.ts","import { Injectable } from '@angular/core';\r\n\r\n/*\r\n  Generated class for the FixedQueueServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class FixedQueueServiceProvider {\r\n  queue;\r\n  length;\r\n  fixedSize;\r\n\r\n  constructor() {\r\n    //console.log('Hello FixedQueueServiceProvider Provider');\r\n\r\n  }\r\n\r\n  create(size) {\r\n\r\n    var initialValues = (initialValues || []);\r\n    // Create the fixed queue array value.\r\n    this.queue = Array.apply(null, initialValues);\r\n\r\n    // Store the fixed size in the queue.\r\n    this.queue.fixedSize = size;\r\n\r\n    // Add the class methods to the queue. Some of these have\r\n    // to override the native Array methods in order to make\r\n    // sure the queue length is maintained.\r\n    this.queue.push = this.push;\r\n    this.queue.splice = this.splice;\r\n    this.queue.unshift = this.unshift;\r\n\r\n    // Trim any initial excess from the queue.\r\n    if (this.queue != \"\")\r\n      this.trimTail.call(this.queue);\r\n\r\n    // Return the new queue.\r\n    return this.queue;\r\n  }\r\n\r\n\r\n\r\n  // Trims the queue down to the appropriate size, removing\r\n  // items from the beginning of the internal array.\r\n  trimHead() {\r\n    if (this.length <= this.fixedSize) {\r\n      return;\r\n    }\r\n    Array.prototype.splice.call(this, 0, (this.length - this.fixedSize));\r\n  }\r\n\r\n  // Trims the queue down to the appropriate size, removing\r\n  // items from the end of the internal array.\r\n  trimTail() {\r\n    if (this.length <= this.fixedSize) {\r\n      return;\r\n    }\r\n    Array.prototype.splice.call(this, this.fixedSize, (this.length - this.fixedSize));\r\n  }\r\n\r\n  // Calls the native Array methods followed by a trimming method.\r\n  wrapMethod(methodName, trimMethod) {\r\n    // Create a wrapper that calls the given method.\r\n    function wrapper() {\r\n      // Get the native Array method.\r\n      var method = Array.prototype[methodName];\r\n\r\n      // Call the native method first.\r\n      var result = method.apply(this, arguments);\r\n      // Trim the queue now that it's been augmented.\r\n      trimMethod.call(this);\r\n      // Return the original value.\r\n      return result;\r\n    }\r\n    // Return the wrapper method.\r\n    return wrapper;\r\n  }\r\n\r\n  push = this.wrapMethod(\"push\", this.trimHead);\r\n  splice = this.wrapMethod(\"splice\", this.trimTail);\r\n  unshift = this.wrapMethod('unshift', this.trimTail);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/fixed-queue-service/fixed-queue-service.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n//import { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport 'rxjs/add/observable/throw';\n/**\n * Default error handler\n */\n@Injectable()\nexport class ErrorHandler {\n  // ErrorObservable when rxjs version < rc.5\n  // ErrorObservable<string> when rxjs version = rc.5\n  // I'm leaving any for now to avoid breaking apps using both versions\n  public handleError(errorResponse: HttpErrorResponse): any {\n    return Observable.throw(errorResponse.error.error || 'Server error');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/core/error.service.ts","import { Injectable } from '@angular/core';\r\nimport { AlertController, ActionSheetController } from 'ionic-angular';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { UtilServiceProvider } from '../util-service/util-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\n\r\n\r\n\r\n/*\r\n  Generated class for the BaseServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\ninterface LooseObject {\r\n  [key: string]: any\r\n}\r\n\r\n@Injectable()\r\nexport class BaseServiceProvider {\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'BaseServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  mystr;\r\n  errorMessages = [];\r\n  errorObj = <any>{};\r\n  bNewItem: boolean = false;\r\n  results;\r\n  addProp: LooseObject;\r\n  base = {\r\n    \"bDataChanged\": false,\r\n    // For Edit Forms, this could be used to display/hide a \"Save\" Button\r\n    \"currentItem\": null,\t\t// Set by derived Class\r\n    \"currentData\": null \t\t// Set by derived Class\r\n  };\r\n  bDataChanged = false;\r\n  // For Edit Forms, this could be used to display/hide a \"Save\" Button\r\n  currentItem = null;\t\t// Set by derived Class\r\n  currentData = null;\t\t// Set by derived Class\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider,\r\n    private utilService: UtilServiceProvider,\r\n    private logger: LogServiceProvider, private alertCtrl: AlertController,\r\n    private sharedService: SharedServiceProvider,\r\n    public actionSheetCtrl: ActionSheetController) {\r\n    console.log('Hello BaseServiceProvider Provider');\r\n    this.bNewItem = this.sharedService.getBNewItem();\r\n    this.sharedService.setDesktopBrowserScrolling(true);\r\n\r\n  }\r\n\r\n  //\tThe Forms in this App are controlled by extra Attributes defined\r\n  //\twithin the LoopBack Data Model Properties and control the display\r\n  //\tof these Properties within their Display and Edit Forms  \r\n  getModelMetadata = (model, rootScopeProperty) => {\r\n\r\n    if (rootScopeProperty === \"jobMetadata\" && this.sharedService.getJobMetaData() != null) {\r\n      this.sharedService.jobMetaDataLoadedSubject.next(true);\r\n      return this.sharedService.getJobMetaData();\r\n    }\r\n    else if (rootScopeProperty === \"historyMetadata\" && !this.sharedService.getHistoryMetadata() === undefined) {\r\n      return this.sharedService.getHistoryMetadata();\r\n    }\r\n    if (model.metadata)\r\n      model.metadata((dummy, results) => {\r\n        this.results = results;\r\n        // \"index\" will be used for Property Display Order\r\n        for (var property in this.results.properties) {\r\n          this.results.properties[property].index =\r\n            this.results.properties[property].index || 1000000000;\t\t// sets index if currently no value\r\n        }//end of for\r\n        // Sort the Properties by \"index\"\r\n        this.results.properties.sort(sortByindex);\r\n        function sortByindex(a, b) {\r\n          return a.index - b.index;\r\n        }\r\n        if (rootScopeProperty === \"jobMetadata\") {\r\n          this.sharedService.setJobMetaData(this.results);\r\n        }\r\n        else if (rootScopeProperty === \"historyMetadata\")\r\n          this.sharedService.setHistoryMetaData(this.results);\r\n        this.sharedService.jobMetaDataLoadedSubject.next(true);\r\n      },\r\n        error => { this.log.debug(error) });\r\n\r\n  }//getModelMetadata(model, rootScopeProperty, cb) ends here.\r\n\r\n\r\n  // If some Properties within the Model have \"includeInHeader\" attributes,\r\n  // the Labels and Values will be concatanated into a meaningful description\r\n  // of the Entity...\r\n  generateHeaderForModelInstance = (item, metadata, bLabels) => {\r\n    if (!metadata || !item) {\r\n      return '';\r\n    }\r\n    var header = '';\r\n    if (Object.keys(metadata.properties).length > 0) {\r\n      header = (metadata.properties[0].label || '') + ' : ' +//PROBLEM HERE\r\n        item[metadata.properties[0].name];\r\n    }\r\n    var headerProperties = this.utilService.findArrayItemsByKey(metadata.properties, \"includeInHeader\", true);\r\n    if (headerProperties.length > 0) {\r\n      header = '';\r\n      for (var i = 0; i < headerProperties.length; i++) {\r\n        if (i > 0) {\r\n          header += ' ';\r\n        }\r\n        if (bLabels !== false) {\r\n          header += (headerProperties[i].label || '') + ':' + item[headerProperties[i].name];\r\n        }\r\n        else {\r\n          header += item[headerProperties[i].name];\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      var headerProperty = this.utilService.findArrayItemByKey(metadata.properties, \"defaultHeader\", true);\r\n      if (headerProperty) {\r\n        header = (headerProperty.label || '') + ' : ' + item[headerProperty.name];\r\n      }\r\n    }\r\n    return header;\r\n  }//End of generateHeaderForModelInstance()\r\n\r\n  // The \"item\" argument represents the Raw Data Values for the Entity\r\n  // The \"metadata\" argument represents the Rules of how to Render the Values\r\n  // The \"bNew\" argument directs us to created a new Default Entity\r\n  combineValuesAndLabels = (item, metadata: any, bNew) => {\r\n    var data = [];\r\n    var mystr = 'combineValuesAndLabels';\r\n\r\n    //Will register if not already registered\r\n    this.convertDates(item, metadata);\r\n    var curProp;\r\n    for (var iac = 0; iac < item.length; iac++)    //LEG LOOP EACH JOB LEG\r\n    {\r\n      var interimitem = item[iac];  //Just Get one of the Jobs/Leg\r\n\r\n      for (var i = 0; i < Object.keys(metadata.properties).length; i++) {\t //Metadata LOOP loops thru each column\r\n\r\n        if (i === 0) {\r\n          metadata.properties[i].index = 1;\r\n          // Give the First Property a predictable Index Value\r\n        }\r\n        curProp = metadata.properties[i];\r\n\r\n        //Riyaz:We do NOT go ahead if this property is not to be shown on the job details page.\r\n        if (curProp.omitFromForm)\r\n          continue;\r\n\r\n        var property = interimitem[curProp.name];\r\n        if (property !== undefined) {\r\n          // These properties are referenced in the jobDetail template as e.g. property.legid\r\n          this.addProp = {\r\n            label: (curProp.label || curProp.name),\r\n            value: property,\r\n            id: curProp.id,\r\n            index: curProp.index,\r\n            linkPattern: curProp.linkPattern,\r\n            required: curProp.required,\r\n            property: curProp.name,\r\n            centered: curProp.centered || false,\r\n            strong: curProp.strong || false,\r\n            type: (curProp.inputType || ''),\r\n            numlegs: interimitem.mobjobTotalLegs,\r\n            legid: interimitem.mobjobSeq,\r\n            legStatus: interimitem.mobjobStatus,\r\n            basejob: interimitem.mobjobBasejobNum\r\n          }\r\n          // Ionic / Angular now have Data and Metadata combined for rendering...\r\n          if (curProp.generateNewID) {\r\n            this.addProp.generateNewID = curProp.generateNewID;\r\n            // Some Database Tables may not be set up to auto-generate\r\n            // new Primary Keys, so this will do it for them.\r\n            // NOTE:  THIS IS A HACK THAT USING THE CURRENT Date/Time...\r\n          }\r\n\r\n          if (curProp.omitFromForm) {\r\n            this.addProp.omitFromForm = curProp.omitFromForm;\r\n            // This can be used to leave a Property off specific forms\r\n            // based on Logic within the Template\r\n          }\r\n\r\n          if (curProp.lastModified) {\r\n            this.addProp.lastModified = curProp.lastModified;\r\n            // To make sure we update the lastModified on upsert...\r\n          }\r\n\r\n          if (curProp.inputType === 'enum') {\r\n            //console.log(\"curProp.inputType is enum for curProp::\" + JSON.stringify(curProp));\r\n            this.addProp.enum = curProp.enum;\r\n            var currentEnumValue = this.utilService.findArrayItemByKey(this.addProp.enum, \"value\", property);\r\n            if (!currentEnumValue) {\r\n              currentEnumValue = this.addProp.enum[0];\r\n            }\r\n            this.addProp.enumValue = currentEnumValue;\r\n            this.addProp.enumValue = Object.assign({}, currentEnumValue);\r\n          }\r\n          data.push(this.addProp);\r\n        }\r\n\r\n      }   // Metadata End FOR\r\n\r\n\r\n    } //Item/Job END FOR   \r\n\r\n    return data;\r\n  }//combineValuesAndLabels ends here\r\n\r\n  // Generate a Primary Key for the new Entity Instance if necessary\r\n  // and then create a new Instance with Default Values if provided.\r\n  createNewItem = (item, metadata) => {\r\n    var idProperty = this.utilService.findArrayItemByKey(metadata.properties, \"id\", true);\r\n    if (idProperty && (idProperty.generateNewID)) {\r\n      var newID = new Date().getTime().toString();\r\n      newID = (new Date().getTime() % 2) + newID.substr(newID.length - 8) + (new Date().getTime() % 2);\r\n      item[idProperty.name] = newID;\r\n      // This is a HACK to generate an almost certain Unique Key...\r\n    }\r\n    else {\r\n      item[idProperty.name] = 'New';\r\n    }\r\n    var data = this.combineValuesAndLabels(item, metadata, true);\r\n    return data;\r\n  }//createNewItem() ends here\r\n\r\n  // Ionic Date Input will ONLY take the \"YYYY-MM-DD\"\r\n  convertDates = (item, metadata) => {\r\n    for (var property in item) {\r\n      var metaProperty = this.utilService.findArrayItemByKey(metadata.properties, \"name\", property);\r\n      if ((item[property]) && (metaProperty) && (metaProperty.type === 'Date')) {\r\n        item[property] = this.convertDate(item[property]);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Assume an ISO Date Format is passed in...\r\n  convertDate = (dateTime) => {\r\n    //console.log(\"Start date:\"+dateTime);\r\n    var dateTimeString = dateTime.toString();\r\n    var tnum = dateTimeString.indexOf('T');\r\n    if (tnum > 0) {\r\n      dateTime = dateTimeString.substring(0, tnum + 1);\r\n    }\r\n    return dateTime;\r\n  }\r\n\r\n  // Return a Boolean if any Data Item in the Form differs from the\r\n  // Data originally loaded.  This is called from \"onChanged\" Events\r\n  checkIfDataChanged = (item, data) => {\r\n    if (!item || !data) {\r\n      return false;\r\n    }\r\n    for (var property in item) {\r\n      var metaProperty = this.utilService.findArrayItemByKey(data, \"property\", property);\r\n      if (metaProperty && (item[property] !== metaProperty.value)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // If some operation, typically Creates or Updates, fails,\r\n  // This will let the User know what happened.\r\n  // This is CURRENTLY displaying the Raw Error Messages\r\n  // TODO: Map known errors to more User Friendly Messages.\r\n  ErrorPopup = (err, title, data) => {\r\n    var messages = err.data.error.details;\r\n    if (messages) {\r\n      messages = messages.messages;\r\n    }\r\n    else {\r\n      messages = { \"Error\": err.data.error.message };\r\n      if (!messages) {\r\n        messages = { \"Error\": err.data.error };\r\n      }\r\n      else {\r\n        messages = { \"Error\": \"Unknown Failure\" };\r\n      }\r\n    }\r\n\r\n    for (var message in messages) {\r\n      this.errorObj = { name: message, message: messages[message], label: message }\r\n      var metaProperty = this.utilService.findArrayItemByKey(data, \"property\", message);\r\n      if (metaProperty) {\r\n        this.errorObj.label = metaProperty.label || this.errorObj.label;\r\n      }\r\n      this.errorMessages.push(this.errorObj);\r\n    }\r\n    var myPopup = <any>{};\r\n    myPopup = this.alertCtrl.create({});\r\n    myPopup.setTitle(title);\r\n    for (let mesg of this.errorMessages) {\r\n      myPopup.setSubtitle(mesg.label);\r\n      myPopup.message(mesg.message);\r\n      myPopup.addButton(\r\n        {\r\n          text: 'OK'\r\n        });\r\n    }//End of for loop\r\n    myPopup.present();\r\n\r\n  }//ErrorPopup ends here\r\n\r\n  // \"updateItem\" will handle both Inserts and Updates\r\n  updateItem = (item, data, model, cb, bNew) => {\r\n    // If we didn't have to generate a Primary Key for a New Entity,\r\n    // we delete the \"id\" property to ensure the DB Generates it as needed.\r\n    if (bNew) {\r\n      var idProperty = this.utilService.findArrayItemByKey(data, \"id\", true);\r\n      if (idProperty) {\r\n        if (!idProperty.generateNewID) {\r\n          delete item[idProperty.property];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Because the UX displayed the Values controlled with the Metadata,\r\n    // Let's extract the Values back into a Clean Item Object...\r\n    for (var property in item) {\r\n      var metaProperty = this.utilService.findArrayItemByKey(data, \"property\", property);\r\n      if (metaProperty && (item[property] !== metaProperty.value)) {\r\n        item[property] = metaProperty.value;\r\n      }\r\n    }\r\n\r\n    // If there is a \"lastModified\" Property, update it to \"NOW\"...\r\n\r\n    var lastModified = this.utilService.findArrayItemByKey(data, \"lastModified\", true);\r\n    if (lastModified) {\r\n      item[lastModified.property] = new Date().toISOString();\r\n    }\r\n\r\n\r\n    // Insert or Update\r\n    model.upsert(item) // Method generated by the LoopBack Angular SDK\r\n      .$promise\r\n      .then(function (results) {\r\n        cb(results);\r\n        // The Callback will usually do something like refresh the View\r\n      }, function (err) {\r\n        this.ErrorPopup(err, 'Save Error(s)', data);\r\n        // Display the Error(s)\r\n      });\r\n  }//updateItem ends here\r\n\r\n  // Delete an Entity\r\n  deleteItem = (id, model, cb) => {\r\n    model.deleteById({ \"id\": id })  // Method generated by the LoopBack Angular SDK\r\n      .$promise\r\n      .then(function (results) {\r\n        cb(results);\r\n      }, function (err) {\r\n        this.ErrorPopup(err, 'Deletion Error(s)', this.data);\r\n        // Display the Error(s)\r\n      });\r\n  }//deleteItem \r\n\r\n  // Most Views will have to Display some sort of Context Menu and\r\n  // this is the Base Helper Function which uses $ionicActionSheet\r\n  // to reveal this Context Menu from the Bottom of the Screen.\r\n  showActionSheetBase = (label, buttons, cb, bDelete) => {\r\n    // Show the action sheet\r\n    var sheetParams = {\r\n      buttons: buttons,\t\t\t\t\t\t// Different for each View\r\n      destructiveText: 'Delete',\t// Delete the Entity being Displayed\r\n      titleText: label,\t\t\t\t\t\t// Gives some Context to the Menu\r\n      cancelText: 'Hide Menu',\t\t// Click to Hide the Menu\r\n      cancel: function () { },\t\t\t// Do nothing extra on Cancel\r\n      buttonClicked: function (index) {\r\n        var command = buttons[index].command;\r\n        if (cb) {\r\n          cb(command);\t\t\t\t\t\t// Just let the View know the chosen\r\n        }\t\t\t\t\t\t\t\t\t\t\t\t\t// Action to perform...\r\n        return true;\r\n      },\r\n      destructiveButtonClicked: function () {\r\n        if (cb) {\r\n          cb(\"delete\");\t\t\t\t\t\t// \"delete\" is the Action for \"Delete\"\r\n        }\r\n        return true;\r\n      }\r\n    }//End of sheetParams\r\n\r\n    let actionSheet = this.actionSheetCtrl.create(sheetParams);\r\n\r\n    if (bDelete === false) {\r\n      delete sheetParams.destructiveText;\r\n      // if \"delete\" doesn't mean anything in this Context\r\n    }\r\n\r\n    // Let Ionic display the Menu\r\n    actionSheet.present();\r\n\r\n    //$ionicActionSheet.show(sheetParams);\r\n  }//showActionSheetBase ends here\r\n\r\n\r\n\r\n  // Enum Selects need special Handling onChange\r\n  // Since their Label may not be equivalent to the mapped Value\r\n  // and the Enum Array Objects cannot serve as the actual Property Value\r\n  multiSelectChange = (property) => {\r\n    if (this.bNewItem) {\r\n      this.base.bDataChanged = true; // New Entities should always allow \"save\"\r\n      return;\r\n    }\r\n    property.value = property.enumValue.value;\r\n    // Set the Actual Property Value from the Chosen Enum Label...\r\n    this.base.bDataChanged = this.checkIfDataChanged(this.base.currentItem, this.base.currentData);\r\n    // Check if anything has changed from the currentItem...\r\n  }\r\n\r\n  // This is actually done on keyup for standard Input Fields\r\n  // Since onChange only triggers when the New Value differs \r\n  // from the Original Value.\r\n  dataChanged = (evt, property) => {\r\n    if (this.bNewItem) {\r\n      this.base.bDataChanged = true; // New Entities should always allow \"save\"\r\n      return;\r\n    }\r\n\r\n    this.base.bDataChanged = this.checkIfDataChanged(this.base.currentItem, this.base.currentData);\r\n    // Check if anything has changed from the currentItem...\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/base-service/base-service.ts","/* tslint:disable */\nimport { Injectable, Inject, NgZone } from '@angular/core';\nimport { SocketDriver } from './socket.driver';\nimport { AccessToken } from '../models';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { share } from 'rxjs/operators';\nimport { LoopBackConfig } from '../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class SocketConnection {\n  private socket: any;\n  private subjects: {\n    onConnect: Subject<any>,\n    onDisconnect: Subject<any>,\n    onAuthenticated: Subject<any>,\n    onUnAuthorized: Subject<any>\n  } = {\n    onConnect: new Subject(),\n    onDisconnect: new Subject(),\n    onAuthenticated: new Subject(),\n    onUnAuthorized: new Subject()\n  };\n  public sharedObservables: {\n    sharedOnConnect?: Observable<any>,\n    sharedOnDisconnect?: Observable<any>,\n    sharedOnAuthenticated?: Observable<any>,\n    sharedOnUnAuthorized?: Observable<any>\n  } = {};\n  public authenticated: boolean = false;\n  /**\n   * @method constructor\n   * @param {SocketDriver} driver Socket IO Driver\n   * @param {NgZone} zone Angular 2 Zone\n   * @description\n   * The constructor will set references for the shared hot observables from\n   * the class subjects. Then it will subscribe each of these observables\n   * that will create a channel that later will be shared between subscribers.\n   **/\n  constructor(\n    @Inject(SocketDriver) private driver: SocketDriver,\n    @Inject(NgZone) private zone: NgZone\n  ) {\n    this.sharedObservables = {\n      sharedOnConnect: this.subjects.onConnect.asObservable().pipe(share()),\n      sharedOnDisconnect: this.subjects.onDisconnect.asObservable().pipe(share()),\n      sharedOnAuthenticated: this.subjects.onAuthenticated.asObservable().pipe(share()),\n      sharedOnUnAuthorized: this.subjects.onUnAuthorized.asObservable().pipe(share())\n    };\n    // This is needed to create the first channel, subsequents will share the connection\n    // We are using Hot Observables to avoid duplicating connection status events.\n    this.sharedObservables.sharedOnConnect.subscribe();\n    this.sharedObservables.sharedOnDisconnect.subscribe();\n    this.sharedObservables.sharedOnAuthenticated.subscribe();\n    this.sharedObservables.sharedOnUnAuthorized.subscribe();\n  }\n  /**\n   * @method connect\n   * @param {AccessToken} token AccesToken instance\n   * @return {void}\n   * @description\n   * This method will create a new socket connection when not previously established.\n   * If there is a broken connection it will reConnect.\n   **/\n  public connect(token: AccessToken = null): void {\n    if (!this.socket) {\n      console.info('Creating a new connection with: ', LoopBackConfig.getPath());\n      // Create new socket connection\n      this.socket = this.driver.connect(LoopBackConfig.getPath(), {\n        log: false,\n        secure: LoopBackConfig.isSecureWebSocketsSet(),\n        forceNew: true,\n        forceWebsockets: true,\n        transports: ['websocket']\n      });\n      // Listen for connection\n      this.on('connect', () => {\n        this.subjects.onConnect.next('connected');\n        // Authenticate or start heartbeat now    \n        this.emit('authentication', token);\n      });\n      // Listen for authentication\n      this.on('authenticated', () => {\n        this.authenticated = true;\n        this.subjects.onAuthenticated.next();\n        this.heartbeater();\n      })\n      // Listen for authentication\n      this.on('unauthorized', (err: any) => {\n        this.authenticated = false;\n        this.subjects.onUnAuthorized.next(err);\n      })\n      // Listen for disconnections\n      this.on('disconnect', (status: any) => this.subjects.onDisconnect.next(status));\n    } else if (this.socket && !this.socket.connected){\n      if (typeof this.socket.off === 'function') {\n        this.socket.off();\n      }\n      if (typeof this.socket.destroy === 'function') {\n        this.socket.destroy();\n      }\n      delete this.socket;\n      this.connect(token);\n    }\n  }\n  /**\n   * @method isConnected\n   * @return {boolean}\n   * @description\n   * This method will return true or false depending on established connections\n   **/\n  public isConnected(): boolean {\n    return (this.socket && this.socket.connected);\n  }\n  /**\n   * @method on\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method listen for server events from the current WebSocket connection.\n   * This method is a facade that will wrap the original \"on\" method and run it\n   * within the Angular Zone to avoid update issues.\n   **/\n  public on(event: string, handler: Function): void {\n    this.socket.on(event, (data: any) => this.zone.run(() => handler(data)));\n  }\n  /**\n   * @method emit\n   * @param {string} event Event name\n   * @param {any=} data Any type of data\n   * @return {void}\n   * @description\n   * This method will send any type of data to the server according the event set.\n   **/\n  public emit(event: string, data?: any): void {\n    if (data) {\n      this.socket.emit(event, data);\n    } else {\n      this.socket.emit(event);\n    }\n  }\n  /**\n   * @method removeListener\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeListener(event: string, handler: Function): void {\n    if (typeof this.socket.off === 'function') {\n      this.socket.off(event, handler);\n    }\n  }\n  /**\n   * @method removeAllListeners\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeAllListeners(event: string): void {\n    if (typeof this.socket.removeAllListeners === 'function') {\n      this.socket.removeAllListeners(event);\n    }\n  }\n  /**\n   * @method disconnect\n   * @return {void}\n   * @description\n   * This will disconnect the client from the server\n   **/\n  public disconnect(): void {\n    this.socket.disconnect();\n  }\n  /**\n   * @method heartbeater\n   * @return {void}\n   * @description\n   * This will keep the connection as active, even when users are not sending\n   * data, this avoids disconnection because of a connection not being used.\n   **/\n  private heartbeater(): void {\n    let heartbeater: any = setInterval(() => {\n      if (this.isConnected()) {\n        this.socket.emit('lb-ping');\n      } else {\n        this.socket.removeAllListeners('lb-pong');\n        clearInterval(heartbeater);\n      }\n    }, 15000);\n    this.socket.on('lb-pong', (data: any) => console.info('Heartbeat: ', data));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/sockets/socket.connections.ts","import { Observer } from 'rxjs/Observer';\r\nimport { LoadingController, ToastController, AlertController } from 'ionic-angular';\r\n\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { File } from '@ionic-native/file';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer';\r\n\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera';\r\n\r\ndeclare const lbclient: any;\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { ImageFileServiceProvider } from '../image-file-service/image-file-service';\r\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\r\nimport { PlatformReadyServiceProvider } from '../platform-ready-service/platform-ready-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\n\r\n\r\ninterface imgfileInterface {\r\n  nativeURL: '',\r\n  name: '',\r\n  uploaded: false,\r\n  readyForUpload: '',\r\n  metadata: {},\r\n  notes: ''\r\n};\r\n/*\r\n  Generated class for the ImageServiceProvider provider.\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n  // Service to handle image files\r\n*/\r\n@Injectable()\r\nexport class ImageServiceProvider {\r\n  logParams: any;\r\n  log: any;\r\n  fileList;\r\n  calls = 0;\r\n  pollTime: any;\r\n  uploadUrl = \"\";\r\n  SITE_CONFIG_LOADED: boolean = false;\r\n  Job = lbclient.models.LocalJob;\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider, private alertCtrl: AlertController,\r\n    private logger: LogServiceProvider, private imageFileService: ImageFileServiceProvider,\r\n    private siteConfig: SiteconfigServiceProvider, private platformReady: PlatformReadyServiceProvider,\r\n    private file: File, private transfer: FileTransfer, private camera: Camera,\r\n    private sharedService: SharedServiceProvider, public loadingCtrl: LoadingController,\r\n    public toastCtrl: ToastController) {\r\n    //console.log('Hello ImageServiceProvider Provider');\r\n    this.logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'ImageServiceProvider' };\r\n    this.log = this.logger.getInstance(this.logParams);\r\n\r\n    //Subscribe to the SITE_CONFIG_LOADED subject.\r\n    this.sharedService.SITE_CONFIG_LOADED.subscribe(SITE_CONFIG_LOADED => {\r\n      this.SITE_CONFIG_LOADED = SITE_CONFIG_LOADED;\r\n    });\r\n\r\n    this.logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'ImageServiceProvider' };\r\n    this.log = this.logger.getInstance(this.logParams);\r\n\r\n    this.pollTime = this.pdaParams.imagePollTime || (60000 * 5);\t\t\t// 30000 = 30 secs   \r\n  }\r\n\r\n  poller = () => {\r\n    // read through image dir and grab any files\r\n    //console.log(\"Running poller...\")\r\n    this.uploadUrl = localStorage.getItem('apiURL') + \"/api/images/upload\";\r\n    if (this.uploadUrl == \"\") {\r\n      var val = this.siteConfig.getSiteConfigValue('PDA_IMAGES_URL');\r\n      this.uploadUrl = val;\r\n      this.log.debug('this.uploadUrl set to:[' + this.uploadUrl + ']');\r\n    }\r\n    if (this.platformReady.isPlatformReady()) {\r\n      this.uploadAllImages();\r\n      this.deleteObsoleteImages().subscribe(() => {\r\n        this.sharedService.imageRefresh.next(true);\r\n      });\r\n    }\r\n    this.calls++;\r\n    this.pollTime = this.pdaParams.imagePollTime || (60000 * 5);\r\n\r\n    //console.log(\"pollTime is ::\" + this.pollTime);\r\n    // re-read from pda params\r\n    if (this.pollTime < 10000)\r\n      this.pollTime = 10000;\t\t\t\t\t// min allowed 10 seconds\r\n    setTimeout(this.poller, this.pollTime);\r\n  };//poller fn ends here\r\n\r\n\r\n  uploadAllImages = () => {\r\n    this.log.debug('uploadAllImages: checking..');\r\n\r\n    this.getImageList().subscribe((images) => {\r\n      this.log.debug('uploadAllImages: found ' + images.length + ' images, check if ready for upload');\r\n      images.forEach((image) => {\r\n        // if already uploaded don't do it again\r\n        var uploaded = this.imageFileService.getImageProperty(image.name, 'uploaded');\r\n        var readyForUpload = this.imageFileService.getImageProperty(image.name, 'readyForUpload');\r\n\r\n        this.log.debug('uploadAllImages: image:' + image.name + ', readyForUpload:' + readyForUpload + ', uploaded:' + uploaded + ', pdaParams.imageUpload:' + this.pdaParams.imageUpload);\r\n\r\n        // if not ready don't upload - e.g. maybe still adding notes\r\n        if (readyForUpload == null || readyForUpload == 'false')\r\n          return;\t\t\t// stop processing this iteration\r\n\r\n        if (uploaded != null && !uploaded && this.pdaParams.imageUpload) {\r\n          this.uploadImage(image);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n\r\n  uploadImage = (image, callback?) => {\r\n    var imagedata = this.imageFileService.getImage(image.name) || {};\r\n    var cb = callback;\r\n    const fileTransfer: FileTransferObject = this.transfer.create();\r\n    let options: FileUploadOptions = {\r\n      fileKey: \"file\",\r\n      fileName: image.name,\r\n      mimeType: \"image/jpeg\",\r\n      chunkedMode: false,\r\n      params: {\r\n        \"description\": \"Image from PDA\",\r\n        \"notes\": imagedata.notes\r\n      },\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        Connection: \"close\"\r\n      },\r\n      httpMethod: 'POST'\r\n    };\r\n\r\n    // If we have a metadata object retrieve each property and add to options.params\r\n    var metadata = imagedata.metadata || {};\r\n    for (var property in metadata) {\r\n      if (metadata.hasOwnProperty(property)) {\r\n        options.params[property] = metadata[property];\r\n      }\r\n    }\r\n\r\n\r\n    this.uploadUrl = localStorage.getItem('apiURL') + \"/api/images/upload\";\r\n    if (this.uploadUrl != \"\") {\r\n      //Riyaz: https://github.com/justinwoodcock/Loopback-Upload\r\n      fileTransfer.upload(image.nativeURL, this.uploadUrl, options).then((result) => {\r\n        this.imageFileService.setImageProperty(image.name, 'uploaded', true);\t\t// mark as uploaded on success   \r\n        //loader.dismiss();\r\n        this.log.debug(\"Image :: \" + image.nativeURL + \" uploaded successfully.\")\r\n        this.presentToast(\"Image uploaded successfully\");\r\n        if (cb) cb(result);\r\n      }, (err) => {\r\n        //loader.dismiss();\r\n        this.log.error(JSON.stringify(err));\r\n      });\r\n    } else {\r\n      this.log.debug('this.uploadUrl:[' + this.uploadUrl + '], so getSiteConfig');\r\n      var val = this.siteConfig.getSiteConfigValue('PDA_IMAGES_URL');\r\n      this.uploadUrl = val;\r\n    }\r\n\r\n  };\r\n\r\n  getImageList = (imageId?) => {\r\n\r\n    return Observable.create((observer: Observer<string>) => {\r\n      var prefix = imageId || \"\";\t\t\t// optional image name to search for (first x chars no suffix)  \r\n\r\n      if (this.platformReady.isPlatformReady()) {\r\n        this.file.resolveLocalFilesystemUrl(this.file.dataDirectory).then((fileSystem: any) => {\r\n          var directoryReader = fileSystem.createReader();\r\n          directoryReader.readEntries((entries) => {\r\n            var numFilesAndDirs = entries.length;\r\n            this.fileList = [];\r\n\r\n            for (var i = 0; i < numFilesAndDirs; i++) {\r\n              var fileEntry = entries[i];\r\n              if (fileEntry.isFile) {\r\n                var imgfile: imgfileInterface = {\r\n                  nativeURL: '',\r\n                  name: '',\r\n                  uploaded: false,\r\n                  readyForUpload: '',\r\n                  metadata: {},\r\n                  notes: ''\r\n                };\r\n\r\n                var isImage = (/\\.(gif|jpg|jpeg|tiff|png)$/i).test(fileEntry.name);\r\n                var isMatch = true;\t\t// TODO - is this the correct default value?  Maybe false?\r\n                if (prefix) {\r\n                  var re = new RegExp('^' + prefix + '.*_.*$', 'i');\r\n                  isMatch = re.test(fileEntry.name);\r\n                }\r\n\r\n                if (isImage && isMatch) {\r\n                  imgfile.nativeURL = fileEntry.nativeURL;\r\n                  imgfile.name = fileEntry.name;\r\n                  imgfile.uploaded = this.imageFileService.getImageProperty(fileEntry.name, 'uploaded');\r\n                  imgfile.notes = this.imageFileService.getImageProperty(fileEntry.name, 'notes');\r\n                  imgfile.readyForUpload = this.imageFileService.getImageProperty(fileEntry.name, 'readyForUpload');\r\n                  this.fileList.push(imgfile);\r\n                }\r\n              }//End of if\r\n            }//end of for loop\r\n            observer.next(this.fileList);\r\n          }, (error) => {\r\n            this.log.error(error);\r\n            Observable.throw(error);\r\n          });//End of readentries()\r\n        }, (error) => {\r\n          this.log.error(error);\r\n          Observable.throw(error);\r\n        });\r\n\r\n      }\r\n      else {\r\n        observer.next(this.fileList);\t// empty list if no cordova\r\n      }\r\n    }, (error) => {\r\n      this.log.error(error);\r\n      Observable.throw(error);\r\n    });\r\n\r\n  };\r\n\r\n\r\n  takePhoto = (photoId) => {\r\n    var result: any;\r\n    const options: CameraOptions = {\r\n      quality: this.pdaParams.imageQuality || 50,\r\n      destinationType: this.camera.DestinationType.FILE_URI,\r\n      sourceType: this.camera.PictureSourceType.CAMERA,\r\n      encodingType: this.camera.EncodingType.JPEG,\r\n      cameraDirection: 0,\r\n      saveToPhotoAlbum: false\r\n    };\r\n    return Observable.create((observer: Observer<string>) => {\r\n      this.camera.getPicture(options).then((imageURI) => {\r\n        observer.next(imageURI);\r\n      }, (err) => {\r\n        Observable.throw(err);\r\n      });\r\n    });\r\n  };//takePhoto function ends here\r\n\r\n\r\n  dirname(path) {\r\n    return path.replace(/\\/[^\\/]*$/, '');\r\n  }\r\n\r\n\r\n  storeImageURI(photoId, imageURI, metadata) {\r\n    return Observable.create(observer => {\r\n      //Grab the file name of the photo in the temporary directory\r\n      var currentName = imageURI.replace(/^.*[\\\\\\/]/, '');\r\n      //Create a new name for the photo\r\n      var d = new Date(),\r\n        n = d.getTime(),\r\n        baseFileName = photoId + \"_\" + n;\r\n      var newFileName = baseFileName + \".jpg\";\r\n      var currentDirectory = this.dirname(imageURI);\r\n\r\n      // moves file from temp camera area on device to the app's local file system\r\n      this.file.moveFile(currentDirectory, currentName, this.file.dataDirectory, newFileName).then((success) => {\r\n        var data = {\r\n          savedImageURI: this.file.dataDirectory + newFileName,\r\n          baseFileName: baseFileName,\r\n          newFileName: newFileName,\r\n          metadata: metadata\r\n        };\r\n        var imageData = {\r\n          name: newFileName,\r\n          uploaded: false,\r\n          readyForUpload: 'false',\r\n          metadata: metadata,\r\n          notes: ''\r\n        };\r\n\r\n        this.imageFileService.addImage(imageData);\t\t\t// store name/status in local storage           \r\n        observer.next(data);\r\n      }, (error) => {\r\n        Observable.throw(error);\r\n      });\r\n    });\r\n  };// storeImageURI ends here\r\n\r\n\r\n  deleteSingleImage = (imageId) => {\r\n    if (this.platformReady.isPlatformReady()) {\r\n      return Observable.create(observer => {\r\n        if (!imageId) {\r\n          observer.throw(\"imageId must be supplied\");\r\n        }\r\n        var isImage = (/\\.(gif|jpg|jpeg|tiff|png)$/i).test(imageId);\r\n        if (isImage) {\r\n          this.file.removeFile(this.file.dataDirectory, imageId).then((result) => {\r\n            this.imageFileService.deleteImage(imageId);\r\n            this.log.debug('deleteSingleImage:' + JSON.stringify(result));\r\n            observer.next(result);\r\n          });\r\n        }\r\n        else {\r\n          observer.throw('Not an image file:' + imageId);\r\n        }\r\n        //return deferred.promise;\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  deleteObsoleteImages = () => {\r\n    //var promises = [];\t\t\t// array of promises for $q.all\r\n    var observablesArray = [];\t\t\t// array of observables for Observable.forkJoin  \r\n    return Observable.create(deferredAllImages => {\r\n      var result = {\r\n        numImages: 0,\r\n        delImages: 0,\r\n        errImages: 0,\r\n        failed: []\t\t\t// array of filename/errors on error\r\n      };\r\n      this.getImageList().subscribe((images) => {\r\n        result.numImages = images.length;\r\n        this.log.debug('deleteObsoleteImages: images found to check:' + result.numImages);\r\n        //console.log('deleteObsoleteImages: images found to check:' + result.numImages);\r\n        /*\r\n            * For each image file check if there is still a job (jobSeq) for it\r\n            * and if not then delete the image from the file system and any metadata\r\n            * from local storage\r\n            */\r\n        images.forEach((image) => {\r\n          //console.log(\"In foreach of deleteObsoleteImages with image as:\" + image.name);\r\n\r\n          var deferredImage = Observable.create(observer => {\r\n            //console.log(\"Inside deferredImage observable creation!! \");\r\n            var name = image.name;\r\n            var jobSeq = name.substring(0, name.indexOf('_'));\r\n            var filter = { \"where\": { \"mobjobSeq\": jobSeq } };\r\n\r\n            // Check image has been uploaded and that the job no longer exists\r\n            var uploaded = this.imageFileService.getImageProperty(image.name, 'uploaded');\r\n            //image.uploaded;\r\n            this.log.debug('deleteObsoleteImages: check name:' + name + ', uploaded:' + uploaded + ', jobSeq:' + jobSeq);\r\n            //console.log('deleteObsoleteImages: check name:' + name + ', uploaded:' + uploaded + ', jobSeq:' + jobSeq);\r\n\r\n            if (uploaded) {\r\n\r\n              this.Job.find(filter).then(jobs => {\r\n                this.log.debug('deleteObsoleteImages: found:' + jobs.length + ' job legs');\r\n                //console.log('deleteObsoleteImages: found:' + jobs.length + ' job legs');\r\n\r\n                if (jobs.length == 0) {\t\t// no job found\r\n                  this.deleteSingleImage(name).subscribe((success) => {\r\n                    result.delImages += 1;\r\n                    this.log.debug(\"deleteObsoleteImages: deleted:\" + success.fileRemoved.name);\r\n                  }, function (err) {\r\n                    this.log.error('deleteObsoleteImages: failed to delete:' + name + ', err:' + err);\r\n                    result.errImages += 1;\r\n                    var failed = {\r\n                      name: name,\r\n                      err: err\r\n                    };\r\n                    result.failed.push(failed);\r\n                  });\r\n                  observer.next();\r\n                }//jobs.length===0\r\n                else {\r\n                  //console.log(\"deleteObsoleteImages: in the else.\")\r\n                  observer.next();\r\n                }\r\n              });//jobApi.find() ends here\r\n            }//if uploaded check ends here\r\n            else {\r\n              observer.next();\r\n            }// if (uploaded) check ends here\r\n          });\r\n          deferredImage.subscribe();\r\n          //console.log(\"deleteObsoleteImages:Pushing the observables into array\");\r\n          observablesArray.push(deferredImage);\r\n        });//images.forEach closes here       \r\n      });//getImageList() subscription ends here.\r\n      Observable.forkJoin(observablesArray).subscribe((result) => {\r\n        //console.log(\"deleteObsoleteImages:Inside forkjoin\");\r\n        deferredAllImages.next(result);\r\n      });\r\n    });//Observable for deferredAllImages ends here\r\n  }//End of deleteObsoleteImages();\r\n\r\n\r\n  startWatching = () => {\r\n    // Wait for site config to load and then start polling service if required\r\n    var poller_started = false;\r\n    //console.log(\"startWatching:SITE_CONFIG_LOADED value:\" + this.SITE_CONFIG_LOADED);\r\n    console.log(\"startWatching: ImageServiceProvider\");\r\n    this.log.debug(\"startWatching\");\r\n\r\n    if (this.SITE_CONFIG_LOADED || localStorage.getItem('SITE_CONFIG_LOADED')) {\r\n\r\n      var YN = this.siteConfig.getSiteConfigValue('PDA_IMAGES');\r\n      this.log.debug('startWatching: PDA_IMAGES:' + YN + ', poll_started:' + poller_started);\r\n      if (YN === 'Y' && !poller_started) {\r\n        this.log.debug('startWatching: PDA_IMAGES:' + YN + ', calling poller()');\r\n        poller_started = true;\r\n        this.poller();\r\n      }\r\n      else {\r\n        this.log.debug('startWatching: PDA_IMAGES:' + YN + ', NO polling or already started');\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  getCount = () => { return (this.calls) }\r\n\r\n  presentToast(msg) {\r\n    let toast = this.toastCtrl.create({\r\n      message: msg,\r\n      duration: 2000,\r\n      position: 'bottom'\r\n    });\r\n\r\n    toast.onDidDismiss(() => {\r\n      //console.log('Dismissed toast');\r\n    });\r\n\r\n    toast.present();\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/image-service/image-service.ts","import { Injectable, OnInit } from '@angular/core';\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\n\r\n/*\r\n  Generated class for the ImageFileServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n\r\n   // see: https://devdactic.com/complete-image-guide-ionic/\r\n*/\r\n@Injectable()\r\nexport class ImageFileServiceProvider {\r\n  logParams: any;\r\n  log: any;\r\n  images = [];\r\n  IMAGE_STORAGE_KEY = 'images';\r\n  storeImage: any;\r\n  removeImage: any;\r\n  set: any;\r\n  get: any;\r\n  image: { name: string, uploaded: boolean, notes: string, readyForUpload: string };\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider,\r\n    private logger: LogServiceProvider) {\r\n    //console.log('Hello ImageFileServiceProvider Provider');\r\n\r\n    this.logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'ImageFileServiceProvider' };\r\n    this.log = this.logger.getInstance(this.logParams);\r\n\r\n    this.storeImage = this.addImage;\r\n    this.removeImage = this.deleteImage;\r\n    this.set = this.setImageProperty;\r\n    this.get = this.getImageProperty;\r\n    this.images = this.getImages();\r\n  }\r\n\r\n  // Gets a list of image names from local storage - not the file system\r\n  getImages() {\r\n    var img = localStorage.getItem(this.IMAGE_STORAGE_KEY);\r\n    if (img) {\r\n      this.images = JSON.parse(img);\r\n    } else {\r\n      this.images = [];\r\n    }\r\n\r\n    return this.images;\r\n  }\r\n\r\n\r\n  addImage = (imageData) => {\r\n    this.images.push(imageData);\r\n    localStorage.setItem(this.IMAGE_STORAGE_KEY, JSON.stringify(this.images));\r\n  };\r\n\r\n  deleteImage = (imageId) => {\r\n    this.images = this.getImages();\r\n    var i = this.images.length;\r\n    while (i--) {\r\n      if (this.images[i].name === imageId) {\r\n        this.images.splice(i, 1);\r\n        localStorage.setItem(this.IMAGE_STORAGE_KEY, JSON.stringify(this.images));\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  setImageProperty = (imageId, key, value) => {\r\n    this.images = this.getImages();\r\n    var i = this.images.length;\r\n    while (i--) {\r\n      if (this.images[i].name === imageId) {\r\n        this.images[i][key] = value;\r\n        localStorage.setItem(this.IMAGE_STORAGE_KEY, JSON.stringify(this.images));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  getImageProperty = (imageId, key) => {\r\n    this.images = this.getImages();\r\n    var i = this.images.length;\r\n    while (i--) {\r\n      if (this.images[i].name === imageId) {\r\n        return (this.images[i][key]);\r\n      }\r\n    }\r\n    return null;\t\t// didn't find what we were looking for\r\n  };\r\n\r\n  getImage = (imageId) => {\r\n    this.images = this.getImages();\r\n    var i = this.images.length;\r\n    while (i--) {\r\n      if (this.images[i].name === imageId) {\r\n        return (this.images[i]);\r\n      }\r\n    }\r\n    return null;\t\t// didn't find what we were looking for\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/image-file-service/image-file-service.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport { Device } from '@ionic-native/device';\r\n\r\nimport { GpsHistory } from '../../../shared/sdk/models/GpsHistory';\r\n\r\nimport { GpsHistoryApi } from '../../../shared/sdk/services/custom/GpsHistory';\r\nimport { GpsAuditServiceProvider } from '../gps-audit-service/gps-audit-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\n\r\n\r\n/*\r\n  Generated class for the GpsServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n\r\n  Refer: https://ionicframework.com/docs/native/geolocation/  \r\n*/\r\n@Injectable()\r\nexport class GpsServiceProvider {\r\n\r\n  // TODO - set high accuracy with a toggle parameter\r\n  // TODO - set maximumAge to 0?  Apparently Samsung Galaxy phone have issues caching the gps location\r\n  // (see http://stackoverflow.com/questions/16262878/phonegap-geolocation-code-3-timeout-expired-keeps-popping-up-on-some-android)\r\n  // Apparently a reboot can fix Android gps timeouts\r\n\r\n  // example here: http://www.gajotres.net/using-cordova-geoloacation-api-with-google-maps-in-ionic-framework/\r\n\r\n  //HIGH ACCURACY may be problematic\r\n\r\n  //var posOptions = {timeout: 1000, frequency : 1000, enableHighAccuracy: true };\r\n  posOptions = { timeout: 10000, enableHighAccuracy: false };\r\n  gpsIsWorking = false;\r\n  numsaves = 0;\r\n  lastGPSsecs = 0;\t\t// last timestamp in seconds\r\n  thisGPSsecs = 0;\t\t// this timestamp in seconds\r\n  diffGPSsecs = 0;\r\n  getGps = true;\r\n  showGpsAlerts = false;\r\n  sendGps = true;\r\n  gpsData = {};\r\n  ltimestamp: Date;\r\n  threshold = 1;\t\t\t// diff between gps must be greater than this to save\r\n  platform: any;\r\n  logParams = {\r\n    site: this.pdaParams.getSiteId(),\r\n    driver: this.pdaParams.getDriverId(), fn: 'GpsServiceProvider'\r\n  };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider,\r\n    private logger: LogServiceProvider,\r\n    private gpsAudit: GpsAuditServiceProvider,\r\n    private gpsHistApi: GpsHistoryApi,\r\n    private geolocation: Geolocation, private device: Device,\r\n    private sharedService: SharedServiceProvider) {\r\n    this.platform = this.device.platform;\r\n    //console.log('Hello GpsServiceProvider Provider');\r\n\r\n    this.sharedService.RESUME.subscribe(val => {\r\n      // foreground\r\n      this.log.info(\"RESUME event fired: ForeGround GPS about to START.\");\r\n      this.getGps = true;\r\n      this.getPos();\r\n    });\r\n\r\n    this.sharedService.PAUSE.subscribe(val => {\r\n      // background\r\n      this.log.info(\"PAUSE event fired: ForeGround GPS about to STOP.\");\r\n      this.getGps = false;\r\n    });\r\n\r\n\r\n  }//Constructor ends here\r\n\r\n  getPos = () => {\r\n\tconsole.log('getPos: FGGPS getGps:'+this.getGps);\r\n\tthis.log.debug('getPos: FGGPS getGps:'+this.getGps);\r\n    if (this.getGps) {\r\n      if (this.log.context.driver == 0) {\r\n        this.log.context.driver = this.pdaParams.getDriverId();\r\n      }\r\n\r\n      if (!this.pdaParams.alwaysGetGPS) {\r\n        // If driver logged off or app in background don't bother with any of this\r\n        if (this.pdaParams.isDrvLoggedOff()) {\r\n          this.log.info('Driver logged off, no foreground GPS attempted');\r\n          return;\r\n        }\r\n      }\r\n      //Riyaz: Using ionic native's geolocation plugin here\r\n      this.geolocation.getCurrentPosition(this.posOptions).then((position) => {\r\n\r\n        if (this.showGpsAlerts) {\r\n          this.log.debug(' GPSService: Position returned ');\r\n        }\r\n        //this.gpsData = angular.copy(position);\r\n        this.gpsData = Object.assign({}, position);\r\n        this.log.debug(\"position:\" + JSON.stringify(this.gpsData));\r\n        this.saveGpsToDb(this.pdaParams.getDriverId(), position);\r\n        this.gpsIsWorking = true;\r\n      }).catch((err) => {\r\n        if (this.showGpsAlerts) {\r\n          this.log.debug('GPsService Error code: ' + err.code + '\\n' + 'message: ' + err.message + '\\n');\r\n        }\r\n        // error\r\n        this.gpsIsWorking = false;\r\n        var error = this.getGPSErrors(err);\r\n\r\n        this.log.error(\"getCurrentPosition failed with error :\" + error);\r\n      });\r\n    }\r\n\r\n  } //getPos() ends here\r\n\r\n  saveGpsToDb = (drvid, position) => {\r\n    //GpsHistory() is a call to the GpsHistory model\r\n    var lgps = new GpsHistory();\r\n    lgps.gps_driver_id = drvid;\r\n    //lgps.gps_timestamp = new Date(position.timestamp);\r\n    lgps.gps_timestamp = position.timestamp;\r\n\r\n    if (position.speed !== null && position.speed !== undefined)\r\n      lgps.gps_speed = position.speed;\r\n    else\r\n      lgps.gps_speed = 0;\r\n\r\n    lgps.gps_latitude = position.coords.latitude.toFixed(6);\r\n    lgps.gps_longitude = position.coords.longitude.toFixed(6);\r\n    lgps.gps_quality = position.coords.accuracy;\r\n    lgps.gps_heading = 0; // position.coords.heading;   \r\n    lgps.gps_time = 0; //new Date(location.timestamp).getTime();\r\n    //this.log.debug(\"getCurrentPosition OK: sendGps:\" + this.sendGps + \", lgps:\" + JSON.stringify(lgps));\r\n\r\n    this.gpsAudit.saveGps(lgps);\r\n\r\n    //lgps.gps_timestamp = position.timestamp;\r\n\r\n    // TODO - do we need any more criteria to create history record?  if connected?\r\n    if (this.sendGps && lgps.gps_driver_id > 0) {\r\n      this.log.info(\"About to save Foreground GPS\");\r\n\r\n      this.gpsHistApi.create(lgps).subscribe(\r\n        obj => {\r\n          this.log.info(\"gpsHistApi.create success for Foreground GPS: obj:\" + JSON.stringify(lgps));\r\n        },\r\n        err => {\r\n          this.log.error(\"gpsHistApi.create failed for Foreground GPS: err:\" + JSON.stringify(err));\r\n        }\r\n      );\r\n    }\r\n  }//saveGpsToDB(drvid, position) ends here\r\n\r\n  onSuccess(position) {\r\n    this.gpsIsWorking = true;\r\n  }\r\n  onError(error) {\r\n    if (this.showGpsAlerts) {\r\n      this.log.error('GPSservice OnOFFPos  Error code: ' + error.code + '\\n' + 'message: ' + error.message + '\\n');\r\n    }\r\n    this.gpsIsWorking = false;\r\n  }\r\n\r\n  //Every 60 Seconds\r\n  intervalId = setInterval(this.getPos, 60000);\r\n\r\n  getGpsIsWorking() {\r\n    //getOneoFFPos();\r\n    return this.gpsIsWorking;\r\n  }\r\n\r\n  getShowGpsAlerts() {\r\n    //getOneoFFPos();\r\n    return this.showGpsAlerts;\r\n  }\r\n\r\n  getSendGps() {\r\n    //getOneoFFPos();\r\n    return this.sendGps;\r\n  }\r\n\r\n  setShowGpsAlerts(torf) {\r\n    this.showGpsAlerts = torf;\r\n    localStorage.setItem('showGpsAlerts', JSON.stringify(this.showGpsAlerts));\r\n  }\r\n\r\n  setSendGps(torf) {\r\n    this.sendGps = torf;\r\n    localStorage.setItem('sendGps', JSON.stringify(this.sendGps));\r\n    this.log.debug(\"setSendGps now:\" + this.sendGps);\r\n  }\r\n\r\n  toggleShowGpsAlerts() {\r\n    this.showGpsAlerts = !this.showGpsAlerts;\r\n    localStorage.setItem('showGpsAlerts', JSON.stringify(this.showGpsAlerts));\r\n  }\r\n\r\n  // LT - code added for background geolocation processing\r\n\r\n  getCurrentPos(cb) {\r\n    this.geolocation.getCurrentPosition(this.posOptions).then((position) => {\r\n      cb(null, position);\r\n    }).catch((err) => {\r\n      cb(err, null);\r\n    });\r\n  }//getCurrentPos(cb) ends here\r\n\r\n  getGPSErrors(err) {\r\n    var error;\r\n    switch (err.code) {\r\n      case err.PERMISSION_DENIED:\r\n        error = \"Failed to retrieve the location of the device because the application does not have permission to use the Location Service.\"\r\n        break;\r\n      case err.POSITION_UNAVAILABLE:\r\n        error = \"The location of the device could not be determined.\"\r\n        break;\r\n      case err.TIMEOUT:\r\n        error = \"Unable to retrieve the location information within the specified maximum timeout interval.\"\r\n        break;\r\n      case err.UNKNOWN_ERROR:\r\n        error = \"Failed to retrieve the location of the device due to an unknown error.\"\r\n        break;\r\n    }\r\n    return error;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/gps-service/gps-service.ts","import { Injectable } from '@angular/core';\r\nimport { AlertController } from 'ionic-angular';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { JseaServiceProvider } from '../jsea-service/jsea-service';\r\nimport { MessageServiceProvider } from '../message-service/message-service';\r\nimport { EventServiceProvider } from '../event-service/event-service';\r\nimport { JobServiceProvider } from '../job-service/job-service';\r\nimport { BackgroundGeolocationServiceProvider } from '../background-geolocation-service/background-geolocation-service';\r\nimport { PlatformReadyServiceProvider } from '../platform-ready-service/platform-ready-service';\r\nimport { DeviceDiagnosticServiceProvider } from '../device-diagnostic-service/device-diagnostic-service';\r\n\r\n/*\r\n  Generated class for the SodServiceProvider provider.\r\n\r\n  Start of Day Service\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n\r\n@Injectable()\r\nexport class SodServiceProvider {\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'SodServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  d;\r\n  now;\r\n  type;\r\n  //When App starts Get from localstorage\r\n  //Logic is everytime the app resumes we check the resume datetime\r\n  // and if its a new day the update the time in local storage\r\n  // and do a logoff and clear local storage\r\n  today = new Date();\r\n  mycurday = this.today.getDate();\r\n  pda_disable_diagnostics_bgps_on_logoff;\r\n\r\n\r\n  constructor(private jobService: JobServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider, private siteConfig: SiteconfigServiceProvider,\r\n    private logger: LogServiceProvider, private sharedService: SharedServiceProvider,\r\n    private jseaService: JseaServiceProvider, private messageService: MessageServiceProvider,\r\n    private alertCtrl: AlertController, private eventService: EventServiceProvider,\r\n    private platformReady: PlatformReadyServiceProvider, private backgroundGeolocationService: BackgroundGeolocationServiceProvider,\r\n    public deviceDiagnosticServiceProvider: DeviceDiagnosticServiceProvider) {\r\n    //console.log('Hello SodServiceProvider Provider');\r\n    this.sharedService.RESUME.subscribe(val => {\r\n      this.log.debug('RESUME detected');\r\n      this.checkDoSodAction('FIRST_RESUME');\r\n    });\r\n\r\n  }\r\n\r\n  //this.log.debug('Instantiating mycurday = :' + mycurday);\r\n\r\n  checkDoSodAction(type) {\r\n    this.pda_disable_diagnostics_bgps_on_logoff = (this.pdaParams.pda_disable_diagnostics_bgps_on_logoff || (this.siteConfig.getSiteConfigValue('PDA_DISABLE_DIAGNOSTICS_BGPS_ON_LOGOFF') == 'Y'));\r\n\r\n    //Get What is stored from last initial resum on a day in past\r\n    var prevResumeDateStr = localStorage.getItem('FIRST_RESUME_DATE');\r\n\r\n    if (type == 'FIRST_RESUME') {\r\n      this.today = new Date();\r\n      this.mycurday = this.today.getDate();\r\n\r\n      if (prevResumeDateStr) {\r\n        var prevResumeDate = new Date(prevResumeDateStr);\r\n\r\n        var prevResumeDay = prevResumeDate.getDate();\r\n        this.log.debug('On Resume prevResumeDate from localstorage = :' + prevResumeDateStr + ' Str convertTodate = ' + prevResumeDate + ' prevResumeDay = ' + prevResumeDay + ' mycurday = ' + this.mycurday);\r\n\r\n        this.log.debug('pda_disable_diagnostics_bgps_on_logoff:'+this.pda_disable_diagnostics_bgps_on_logoff);\r\n\r\n        //Resume on different day\r\n        //if( prevResumeDay == mycurday )\r\n        if (prevResumeDay != this.mycurday) {\r\n          //Do some shit and store\r\n          this.now = new Date();\r\n          localStorage.setItem('FIRST_RESUME_DATE', this.now);\r\n          this.pdaParams.logoffDriver();\r\n\r\n          if (this.platformReady.isPlatformReady() && this.pda_disable_diagnostics_bgps_on_logoff) {\r\n            this.backgroundGeolocationService.stop();\r\n            this.deviceDiagnosticServiceProvider.stopDiagnostics();\r\n          }\r\n\r\n          this.eventService.sendMsg('LOGOFF', '');\r\n          this.log.debug(\" prevResumeDay != mycurday mycurday = \" + this.mycurday);\r\n\r\n          //Set the routed & map jobs to null\r\n          localStorage.setItem('routedJobs', '');\r\n          localStorage.setItem('mapJobs', '');\r\n\r\n          //$rootScope.$broadcast('SODSERVICE_IS_NEW_DAY');\r\n          this.sharedService.SODSERVICE_IS_NEW_DAY.next(true);\r\n          localStorage.setItem('SODSERVICE_IS_NEW_DAY', 'true');\r\n\r\n          //Dump Device Info\r\n          this.messageService.dumpDeviceInfo();\r\n\r\n          // Get site config parameters from server\r\n          var result$: Observable<string> = this.siteConfig\r\n            .loadAllConfigsFromServer()\r\n            .subscribe((result) => {\r\n              //console.log(\"Site Config Reloaded!\");\r\n              this.log.info(\"Site Config Reloaded for prevResumeDateStr=true from sod-service.ts --> checkDoSodAction()\");\r\n              this.jobService.deleteOldJobs('');\r\n              this.jseaService.deleteOldData();\r\n              // NOTE - should really be done only after we've deleted data\r\n              // so perhaps in a callback wrapper?\r\n              this.messageService.clearChangeData();\r\n              this.messageService.dumpLocalStorage();\r\n            },\r\n              (error) => {\r\n                this.showError(\"Unable to load Site Configs.Please check your connection.\");\r\n                this.messageService.dumpLocalStorage();\r\n                return;\r\n              });\r\n        }\r\n        else {\r\n          this.log.debug('Not new date');\r\n\r\n\t\t\t\t\t// LT - to ensure background mode processes run correctly after app start\r\n\t\t\t\t\t// we need to start the services\r\n\t\t\t\t\tif (this.platformReady.isPlatformReady()) {\r\n\t\t\t\t\t\t\t//this.backgroundGeolocationService.start();\r\n\t\t\t\t\t\t\tif(!this.sharedService.isDiagnosticsRunning)\r\n\t\t\t\t\t\t\t\t\tthis.deviceDiagnosticServiceProvider.startWatching();\r\n\t\t\t\t\t}\r\n\r\n         // this.messageService.dumpLocalStorage();\r\n          //Dump Device Info\r\n          this.messageService.dumpDeviceInfo();\r\n        }\r\n      }\r\n      else //Never Stored \r\n      {\r\n        this.now = new Date();\r\n        localStorage.setItem('FIRST_RESUME_DATE', this.now);\r\n        this.log.debug('On Resume prevResumeDate is NULL date = ' + this.now + ' Will clearChange Data');\r\n\r\n        //Riyaz: No need to logoff the driver, if he logs in for the first time.The config data is loaded dynamically\r\n        //this.pdaParams.logoffDriver();\r\n        //this.eventService.sendMsg('LOGOFF', '');\r\n\r\n        this.messageService.clearChangeData();\r\n\r\n        //Dump Device Info\r\n        this.messageService.dumpDeviceInfo();\r\n\r\n        // Get site config parameters from server\r\n        var result$: Observable<string> = this.siteConfig\r\n          .loadAllConfigsFromServer()\r\n          .subscribe((result) => {\r\n            //console.log(\"Site Config Reloaded!\");\r\n            this.log.info(\"Site Config Reloaded for prevResumeDateStr=false from sod-service.ts --> checkDoSodAction()\");\r\n            this.messageService.dumpLocalStorage();\r\n          },\r\n            (error) => {\r\n              this.showError(\"Unable to load Site Configs.Please check your connection.\");\r\n              this.messageService.dumpLocalStorage();\r\n              return;\r\n            });\r\n      }\r\n\r\n      // TODO - maybe get site config parameters from server here?\r\n    }\r\n    else {\r\n      this.log.error('unknown type:' + type);\r\n    }\r\n  }//checkDoSodAction(type) ends here\r\n\r\n  showError(text) {\r\n    //this.loading.dismiss();\r\n\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Error',\r\n      subTitle: text,\r\n      buttons: ['OK'],\r\n      enableBackdropDismiss: false\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  clearSODDate() {\r\n    // This will force an initial start of day\r\n    localStorage.removeItem('FIRST_RESUME_DATE');\r\n  }\r\n\r\n  setSODDate() {\r\n    // This will force a start of day by setting date to yesterday\r\n    this.d = new Date();\r\n    this.d.setDate(this.d.getDate() - 1);\r\n    localStorage.setItem('FIRST_RESUME_DATE', this.d);\r\n  }\r\n\r\n  //This will happen the first time they resume the app on a day\r\n\r\n  //For testing, however JobsIndexCtrl wont see this as this service is initialised before JObsIndexCtrl is\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sod-service/sod-service.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { JseaDriverQuestions } from '../../models/JseaDriverQuestions';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `JseaDriverQuestions` model.\n */\n@Injectable()\nexport class JseaDriverQuestionsApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JseaDriverQuestions` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverQuestions\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id JseaDriverQuestions id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JseaDriverQuestions` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverQuestions/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `JseaDriverQuestions`.\n   */\n  public getModelName() {\n    return \"JseaDriverQuestions\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/JseaDriverQuestions.ts","import { Injectable } from '@angular/core';\r\n\r\n\r\n\r\nimport { PlatformReadyServiceProvider } from '../platform-ready-service/platform-ready-service';\r\nimport { Device } from '@ionic-native/device';\r\n\r\n/*\r\n  Generated class for the DeviceServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class DeviceServiceProvider {\r\n\r\n  device = <any>{};\r\n\r\n  constructor(private platformReady: PlatformReadyServiceProvider,\r\n    private cdevice: Device) {\r\n    //console.log('Hello DeviceServiceProvider Provider');\r\n  }\r\n\r\n  getDevice() {\r\n    this.device = { \"browser\": true };\t\t\t//TODO - get error in browser // default\r\n    // cordova, model, platform, UUID, and version information\r\n    if (this.platformReady.isPlatformReady()) {\r\n      //this.device.cordova = this.cdevice.cordova;\r\n      this.device.model = this.cdevice.model;\r\n      this.device.platform = this.cdevice.platform;\r\n      this.device.uuid = this.cdevice.uuid;\r\n      this.device.version = this.cdevice.version;\r\n      //this.device.test = this.cdevice.\r\n    }\r\n    return this.device;\r\n  }//getDevice() ends here\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/device-service/device-service.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { ConnectivityMonitorProvider } from '../connectivity-monitor/connectivity-monitor';\r\nimport { UtilServiceProvider } from '../util-service/util-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\n\r\n\r\ndeclare const lbclient: any;\r\ninterface optionsInterface {\r\n  filter: string;\r\n  lastFilter: string;\r\n};\r\ninterface sinceInterface {\r\n  push: number;\r\n  pull: number;\r\n}\r\n/*\r\n  Generated class for the JobReplicationServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class JobReplicationServiceProvider {\r\n\r\n  LocalJob = lbclient.models.LocalJob;\r\n  RemoteJob = lbclient.models.Job;\r\n  models = lbclient.models;\r\n  lastFilter = {};\r\n  d = new Date();\r\n  driverId: number;\r\n  isOnline;\r\n  since: sinceInterface = { push: -1, pull: -1 };\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'JobReplicationServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  constructor(private conMonService: ConnectivityMonitorProvider, private utilService: UtilServiceProvider,\r\n    private logger: LogServiceProvider, private pdaParams: PdaparamsServiceProvider, private sharedService: SharedServiceProvider) {\r\n    this.driverId = this.pdaParams.getDriverId();\r\n    // LT - don't work with our current loopback version - use observe ?  Maybe need filter (and callback?)\r\n    this.LocalJob.on('before save', (ctx, next) => {\r\n      next();\r\n    });\r\n\r\n    // sync local changes if connected\r\n    this.LocalJob.on('after save', function (ctx, next) {\r\n      next();\r\n      this.sync();\r\n    });\r\n    this.LocalJob.on('after delete', function (ctx, next) {\r\n      next();\r\n      this.sync();\r\n    });\r\n\r\n\r\n    this.conMonService.isConnected.subscribe(res => {\r\n      this.sharedService.isOnline = res;\r\n    });\r\n  }\r\n\r\n\r\n  syncstatus = {\r\n    _syncInProgress: false,\r\n    get syncInProgress() {\r\n      //this.log.info('syncInProgress?', this._syncInProgress);\r\n      return this._syncInProgress;\r\n    },\r\n    set syncInProgress(value) {\r\n      this._syncInProgress = value;\r\n    }\r\n  };\r\n\r\n  /*   fullreplication = {\r\n      _fullReplication: false,\r\n      get fullReplication() {\r\n        //this.log.info('syncInProgress?', this._syncInProgress);\r\n        return this._fullReplication;\r\n      },\r\n      set fullReplication(value) {\r\n        this._fullReplication = value;\r\n      }\r\n    };\r\n   */\r\n  conflicts = {\r\n    _resolveConflicts: false,\r\n    get resolveConflictsInClient() {\r\n      //this.log.info('isConnected?', this._isConnected);\r\n      return this._resolveConflicts;\r\n    },\r\n    set resolveConflictsInClient(value) {\r\n      this._resolveConflicts = value;\r\n    }\r\n  };\r\n\r\n  sleep(milliseconds) {\r\n    var start = new Date().getTime();\r\n    for (var i = 0; i < 10000000000; i++) {\r\n      if ((new Date().getTime() - start) > milliseconds) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  sync = (callback, filter) => {\r\n\r\n    var options: optionsInterface = { filter: '', lastFilter: '' };\r\n    var cb = null;\r\n    cb = callback;\r\n    options.filter = filter;\r\n    options.lastFilter = filter;\r\n    this.lastFilter = filter;\r\n    var counter = 0;\r\n    //this.log.info(\"isOnline status before replication:\" + this.sharedService.isOnline);\r\n\r\n    /* var temp = [];\r\n    temp.push('this.sharedService.isOnline:'+this.sharedService.isOnline); */\r\n\r\n    if (this.sharedService.isOnline) {\r\n\r\n\r\n      if (this.pdaParams.fullReplication) {\r\n        this.since = { push: -1, pull: -1 };\r\n        this.log.info('Fullreplication set for the syncing process.');\r\n\r\n      }\r\n      else\r\n        this.log.info('Fullreplication NOT set for the syncing process.');\r\n\r\n      // Remote job first\r\n      //temp.push('Calling: RemoteJob.replicate(), since:' + JSON.stringify(this.since));\r\n      // this.log.info('Calling: RemoteJob.replicate(), since:' + JSON.stringify(this.since));\r\n\r\n      this.RemoteJob.replicate(\r\n        this.since.pull,\r\n        this.LocalJob,\r\n        options,\r\n        (err, conflicts, cps) => {\r\n\r\n          this.log.info(\"RemoteJob Replication completed.\");\r\n          options.filter = \"\";\r\n          this.since.pull = cps;\r\n\r\n          //temp.push('Calling: LocalJob.replicate(), since:' + JSON.stringify(this.since));\r\n          //this.log.info('Calling: LocalJob.replicate(), since:' + JSON.stringify(this.since));\r\n          this.LocalJob.replicate(\r\n            this.since.push,\r\n            this.RemoteJob,\r\n            options,\r\n            (err, conflicts, cps) => {\r\n              this.log.info(\"LocalJob Replication completed.\");\r\n              //temp.push(\"LocalJob Replication completed.\");\r\n              this.since.push = cps;\r\n\r\n\r\n              if (conflicts != undefined) {\r\n                //temp.push(' finished JOB replication, conflicts:' + conflicts.length);\r\n                this.log.info(' finished JOB replication, conflicts:' + conflicts.length);\r\n              }\r\n              else {\r\n                this.log.info(' finished JOB replication, conflicts ARE UNDEFINED');\r\n                //temp.push(' finished JOB replication, conflicts ARE UNDEFINED');\r\n              }\r\n\r\n              if (conflicts != undefined && conflicts.length > 0) {\r\n                //this.log.info(\"The number of conflicts detected:\" + conflicts.length);\r\n                // this.log.info('sync: JOB conflicts:' + JSON.stringify(conflicts));\r\n                conflicts.forEach(function (conflict) {\r\n                  conflict.type(function (err, type) {\r\n                    conflict.type = type;\r\n                    conflict.models(function (err, source, target) {\r\n                      conflict.source = source;\r\n                      conflict.target = target;\r\n                      conflict.manual = new conflict.SourceModel(source || target);\r\n\r\n                    });\r\n                    conflict.changes(function (err, source, target) {\r\n                      conflict.sourceChange = source;\r\n                      conflict.targetChange = target;\r\n\r\n                      var sourceType = conflict.sourceChange.type();\r\n                      var targetType = conflict.targetChange.type();\r\n\r\n                      if (conflicts.resolveConflictsInClient) {\r\n                        // automatically resolve conflicts\r\n                        if (sourceType == 'update' && targetType == 'delete') {\r\n                          conflict.resolveUsingTarget(this.refreshConflicts);\r\n                        }\r\n                        else {\r\n                          conflict.resolveUsingSource(this.refreshConflicts);\r\n                        }\r\n                      }\r\n                    });\r\n                  });\r\n                });\r\n              }\r\n\r\n\r\n              cb && cb(err, conflicts);\r\n\r\n\r\n              this.log.debug(\"============SYNC: FINISHED============\");\r\n              this.sharedService.setSyncInProgress(false);\r\n            });\r\n        });\r\n\r\n      //Set the full replication to false\r\n      this.pdaParams.fullReplication = false;\r\n      this.sharedService.setSyncInProgress(false);\r\n    }\r\n    else {\r\n      // not connected to network\r\n      // if callback supplied call it \r\n      cb && cb();\r\n    }\r\n\r\n    //this.sharedService.temp = [...temp];\r\n\r\n  }\r\n\r\n  callback = (err) => {\r\n    this.log.info('Error returned is :' + err);\r\n  }\r\n\r\n  refreshConflicts = () => {\r\n    this.sync(this.callback, this.lastFilter);\r\n  }\r\n\r\n\r\n  // LT - 22/12/2015 - added per Strongloop support to remove now\r\n  // obsolete job-change and checkpoint records\r\n  // TODO - maybe extend to do all?  Using async?\r\n\r\n  deleteJobChangeData(callback) {\r\n    var Model = this.models.LocalJob;\r\n\r\n    var Change = Model.getChangeModel();\r\n    var Checkpoint = Change.getCheckpointModel();\r\n\r\n    var changeData: { changes: string, checkpoints: string };\r\n\r\n    Change.deleteAll({ rev: null }, function (err, info) {\r\n      if (err) return this.log.error('Cannot delete old changes:', err);\r\n      this.log.info('Deleted %s old changes.', info.count);\r\n      changeData.changes = info;\r\n\r\n      Checkpoint.current(function (err, cp) {\r\n        if (err) return this.log.error('Cannot obtain current checkpoint:', err);\r\n        this.log.info('Current checkpoint:', cp);\r\n\r\n        Checkpoint.deleteAll({ seq: { lt: cp } }, function (err, info) {\r\n          if (err) return this.log.error('Cannot delete old checkpoints:', err);\r\n          this.log.info('Deleted %s old checkpoints', info.count);\r\n\r\n          changeData.checkpoints = info;\r\n\r\n          // The MongoDB connection pool is blocking exit,\r\n          // we need to exit explicitely\r\n          //process.exit(0);\r\n\r\n          callback && callback(err, changeData);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  // Copy of above but for JSEA\r\n  // TODO - this should be refactored to avoid all of this duplicate code\r\n  deleteJseaChangeData(callback) {\r\n    var Model = this.models.LocalJseaDriverAnswers;\r\n\r\n    var Change = Model.getChangeModel();\r\n    var Checkpoint = Change.getCheckpointModel();\r\n\r\n    var changeData: { changes: string, checkpoints: string };\r\n\r\n\r\n    Change.deleteAll({ rev: null }, function (err, info) {\r\n      if (err) return this.log.error('Cannot delete old changes:', err);\r\n      this.log.info('Deleted %s old changes.', info.count);\r\n      changeData.changes = info;\r\n\r\n      Checkpoint.current(function (err, cp) {\r\n        if (err) return this.log.error('Cannot obtain current checkpoint:', err);\r\n        this.log.info('Current checkpoint:', cp);\r\n\r\n\r\n        Checkpoint.deleteAll({ seq: { lt: cp } }, function (err, info) {\r\n          if (err) return this.log.error('Cannot delete old checkpoints:', err);\r\n          this.log.info('Deleted %s old checkpoints', info.count);\r\n\r\n          changeData.checkpoints = info;\r\n\r\n          // The MongoDB connection pool is blocking exit,\r\n          // we need to exit explicitely\r\n          //process.exit(0);\r\n\r\n          callback && callback(err, changeData);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/job-replication-service/job-replication-service.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpParams, HttpResponse, HttpParameterCodec } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ErrorHandler } from './error.service';\nimport { LoopBackAuth } from './auth.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackFilter, AccessToken } from '../../models/BaseModels';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport { catchError, map, filter } from 'rxjs/operators';\nimport { SocketConnection } from '../../sockets/socket.connections';\n// Making Sure EventSource Type is available to avoid compilation issues.\ndeclare var EventSource: any;\nclass CustomQueryEncoderHelper implements HttpParameterCodec {\n  encodeKey(k: string): string {\n      return encodeURIComponent(k);\n  }\n\n  encodeValue(v: string): string {\n      return encodeURIComponent(v);\n  }\n\n  decodeKey(k: string): string {\n      return decodeURIComponent(k);\n  }\n\n  decodeValue(v: string): string {\n      return decodeURIComponent(v);\n  }\n}\n/**\n* @module BaseLoopBackApi\n* @author Jonathan Casarrubias <@johncasarrubias> <github:jonathanCasarrubias>\n* @author Nikolay Matiushenkov <https://github.com/mnvx>\n* @license MIT\n* @description\n* Abstract class that will be implemented in every custom service automatically built\n* by the sdk builder.\n* It provides the core functionallity for every API call, either by HTTP Calls or by\n* WebSockets.\n**/\n@Injectable()\nexport abstract class BaseLoopBackApi {\n\n  protected path: string;\n  protected model: any;\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    this.model = this.models.get(this.getModelName());\n  }\n  /**\n   * @method request\n   * @param {string}  method      Request method (GET, POST, PUT)\n   * @param {string}  url         Request url (my-host/my-url/:id)\n   * @param {any}     routeParams Values of url parameters\n   * @param {any}     urlParams   Parameters for building url (filter and other)\n   * @param {any}     postBody    Request postBody\n   * @return {Observable<any>}\n   * @description\n   * This is a core method, every HTTP Call will be done from here, every API Service will\n   * extend this class and use this method to get RESTful communication.\n   **/\n  public request(\n    method         : string,\n    url            : string,\n    routeParams    : any = {},\n    urlParams      : any = {},\n    postBody       : any = {},\n    pubsub         : boolean = false,\n    customHeaders? : Function\n  ): Observable<any> {\n    // Transpile route variables to the actual request Values\n    Object.keys(routeParams).forEach((key: string) => {\n      url = url.replace(new RegExp(\":\" + key + \"(\\/|$)\", \"g\"), routeParams[key] + \"$1\")\n    });\n    if (pubsub) {\n      if (url.match(/fk/)) {\n        let arr = url.split('/'); arr.pop();\n        url = arr.join('/');\n      }\n      let event: string = (`[${method}]${url}`).replace(/\\?/, '');\n      let subject: Subject<any> = new Subject<any>();\n      this.connection.on(event, (res: any) => subject.next(res));\n      return subject.asObservable();\n    } else {\n      let httpParams = new HttpParams({ encoder: new CustomQueryEncoderHelper() });\n      // Headers to be sent\n      let headers: HttpHeaders = new HttpHeaders();\n      headers = headers.append('Content-Type', 'application/json');\n      // Authenticate request\n      headers = this.authenticate(url, headers);\n      // Body fix for built in remote methods using \"data\", \"options\" or \"credentials\n      // that are the actual body, Custom remote method properties are different and need\n      // to be wrapped into a body object\n      let body: any;\n      let postBodyKeys = typeof postBody === 'object' ? Object.keys(postBody) : []\n      if (postBodyKeys.length === 1) {\n        body = postBody[postBodyKeys.shift()];\n      } else {\n        body = postBody;\n      }\n      \n      let queryString: string = '';\n\n      // Separate filter object from url params and add to search query\n      if (urlParams.filter) {\n        if (LoopBackConfig.isHeadersFilteringSet()) {\n          headers = headers.append('filter', JSON.stringify(urlParams.filter));\n        } else {\n          queryString = `?filter=${encodeURIComponent(JSON.stringify(urlParams.filter))}`;\n        }\n        delete urlParams.filter;\n      }\n\n      // Separate where object from url params and add to search query\n      if (urlParams.where) {\n        if (LoopBackConfig.isHeadersWhereSet()) {\n          /**\n          CODE BELOW WILL GENERATE THE FOLLOWING ISSUES:\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/356\n          - https://github.com/mean-expert-official/loopback-sdk-builder/issues/328 \n          **/\n          headers = headers.append('where', JSON.stringify(urlParams.where));\n        } else {\n          queryString = `?where=${encodeURIComponent(JSON.stringify(urlParams.where))}`;\n        }\n        delete urlParams.where;\n      }\n    \n      if (typeof customHeaders === 'function') {\n        headers = customHeaders(headers);\n      }\n/* enhancement/configure-where-headers\n      this.searchParams.setJSON(urlParams);\n      let request: Request = new Request(\n        new RequestOptions({\n          headers        : headers,\n          method         : method,\n          url            : `${url}${queryString}`,\n          search         : Object.keys(urlParams).length > 0 ? this.searchParams.getURLSearchParams() : null,\n          body           : body ? JSON.stringify(body) : undefined,\n          withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n        })\n      );\nTODO Fix Merge Conflict */\n      Object.keys(urlParams).forEach(paramKey => {\n        let paramValue = urlParams[paramKey];\n        paramValue = typeof paramValue === 'object' ? JSON.stringify(paramValue) : paramValue;\n        httpParams = httpParams.append(paramKey, paramValue);\n      });\n      let request = new HttpRequest(method, `${url}${queryString}`, body, {\n        headers        : headers,\n        params         : httpParams,\n        withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n      });\n      return this.http.request(request).pipe(\n        filter(event => event instanceof HttpResponse),\n        map((res: HttpResponse<any>) => res.body),\n        catchError((e) => this.errorHandler.handleError(e))\n      );\n    }\n  }\n  /**\n   * @method authenticate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {string} url Server URL\n   * @param {Headers} headers HTTP Headers\n   * @return {void}\n   * @description\n   * This method will try to authenticate using either an access_token or basic http auth\n   */\n  public authenticate<T>(url: string, headers: HttpHeaders): HttpHeaders {\n    if (this.auth.getAccessTokenId()) {\n      headers = headers.append(\n        'Authorization',\n        LoopBackConfig.getAuthPrefix() + this.auth.getAccessTokenId()\n      );\n    }\n\n    return headers;\n  }\n  /**\n   * @method create\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic create method\n   */\n  public create<T>(data: T, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub oncreate many method\n   */\n  public onCreate<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method createMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public createMany<T>(data: T[], customHeaders?: Function): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method onCreateMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public onCreateMany<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method findById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {any} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic findById method\n   */\n  public findById<T>(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, _urlParams, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method find\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[+>}\n   * @description\n   * Generic find method\n   */\n  public find<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T[]> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((datum: T[]) => datum.map((data: T) => this.model.factory(data))));\n  }\n  /**\n   * @method exists\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic exists method\n   */\n  public exists<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id/exists'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders);\n  }\n  /**\n   * @method findOne\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic findOne method\n   */\n  public findOne<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'findOne'\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method updateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic updateAll method\n   */\n  public updateAll<T>(where: any = {}, data: T, customHeaders?: Function): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders);\n  }\n  /**\n   * @method onUpdateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub onUpdateAll method\n   */\n  public onUpdateAll<T>(where: any = {}, data: T): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, true);\n  }\n  /**\n   * @method deleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic deleteById method\n   */\n  public deleteById<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onDeleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onDeleteById method\n   */\n  public onDeleteById<T>(id: any): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method count\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<{ count: number }>}\n   * @description\n   * Generic count method\n   */\n  public count(where: any = {}, customHeaders?: Function): Observable<{ count: number }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'count'\n    ].join('/'), undefined, _urlParams, undefined, null, customHeaders);\n  }\n  /**\n   * @method updateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic updateAttributes method\n   */\n  public updateAttributes<T>(id: any, data: T, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpdateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onUpdateAttributes method\n   */\n  public onUpdateAttributes<T>(id: any, data: T): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method\n   */\n  public upsert<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsert method\n   */\n  public onUpsert<T>(data: any = {}): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method using patch http method\n   */\n  public upsertPatch<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertPatch method using patch http method\n   */\n  public onUpsertPatch<T>(data: any = {}): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method upsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsertWithWhere method\n   */\n  public upsertWithWhere<T>(where: any = {}, data: any = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onUpsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertWithWhere method\n   */\n  public onUpsertWithWhere<T>(where: any = {}, data: any = {}): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceOrCreate method\n   */\n  public replaceOrCreate<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onReplaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceOrCreate method\n   */\n  public onReplaceOrCreate<T>(data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method replaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceById method\n   */\n  public replaceById<T>(id: any, data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onReplaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceById method\n   */\n  public onReplaceById<T>(id: any, data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, true)\n    .pipe(map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method createChangeStream\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<any>}\n   * @description\n   * Generic createChangeStream method\n   */\n  public createChangeStream(): Observable<any> {\n    let subject = new Subject();\n    if (typeof EventSource !== 'undefined') {\n      let emit   = (msg: any) => subject.next(JSON.parse(msg.data));\n      var source = new EventSource([\n        LoopBackConfig.getPath(),\n        LoopBackConfig.getApiVersion(),\n        this.model.getModelDefinition().path,\n        'change-stream'\n      ].join('/'));\n      source.addEventListener('data', emit);\n      source.onerror = emit;\n    } else {\n      console.warn('SDK Builder: EventSource is not supported'); \n    }\n    return subject.asObservable();\n  }\n  /**\n   * @method getModelName\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {string}\n   * @description\n   * Abstract getModelName method\n   */\n  abstract getModelName(): string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/core/base.service.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 221;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 221\n// module chunks = 15","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { LoadingController } from 'ionic-angular';\r\n\r\n\r\n/*\r\n  Generated class for the SharedServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n\r\n  Riyaz: Have a look at https://github.com/NamitaMalik/Realtime-Update-in-Angular2\r\n*/\r\n\r\n\r\ninterface Metadata {\r\n  legid: number,\r\n  baseJob: string,\r\n  legStatus: string\r\n}\r\n\r\ninterface fileData {\r\n  savedImageURI: string,\r\n  baseFileName: string,\r\n  newFileName: string,\r\n  metadata: Metadata\r\n}\r\ninterface pdaPayload {\r\n  command: string,\r\n  params: {};\r\n}\r\ninterface driverPayload {\r\n  message: string,\r\n  type: string,\r\n  playsound: boolean,\r\n  platform: string,\r\n  sound: string\r\n}\r\ninterface Payload {\r\n  data: {\r\n    type: string,\r\n    baseJob: string,\r\n    bookingDay: number\r\n  },\r\n  platform: string,\r\n  playsound: boolean,\r\n  payload: Payload,\r\n  type: string,\r\n  sound: string\r\n}\r\ninterface Message {\r\n  type: string,\r\n  baseJob: string,\r\n  bookingDay: number\r\n}\r\n\r\ninterface additionalData {\r\n  payload: Payload,\r\n  message: string\r\n\r\n}\r\n\r\ninterface notification {\r\n  platform: string,\r\n  event: string,\r\n  message: Message,\r\n  title: string,\r\n  count: number,\r\n  image: string,\r\n  additionalData: additionalData,\r\n  payload: Payload,\r\n  alert: string,\r\n  sound: string,\r\n  type: string\r\n}\r\n\r\n@Injectable()\r\nexport class SharedServiceProvider {\r\n\r\n  //Riyaz: Events are implemented using Subjects & BehaviorSubjects\r\n  SITE_CONFIG_LOADED = new Subject<boolean>();\r\n  SODSERVICE_IS_NEW_DAY = new Subject<boolean>();\r\n\r\n  APP_ON_LINE: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  APP_OFF_LINE: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  commandToPDA: Subject<pdaPayload> = new Subject<pdaPayload>();\r\n  messageToDriver: Subject<driverPayload> = new Subject<driverPayload>();\r\n  pushNotificationReceived: Subject<notification> = new Subject<notification>();\r\n\r\n  jobMetaDataLoadedSubject = new Subject<Boolean>();\r\n  tpmPdaCtlsLoadedSubject = new Subject<Boolean>();\r\n  PAUSE = new Subject<Boolean>();\r\n  RESUME = new Subject<Boolean>();\r\n  DESTROY = new Subject<Payload>();\r\n\r\n  NEWJOB = new Subject<Payload>();\r\n  JOBUPDATE = new Subject<Payload>();\r\n  CANCEL = new Subject<Payload>();\r\n  imageSaved = new Subject<fileData>();\r\n  imageRefresh = new Subject<Boolean>();\r\n\r\n  loginFlag;\r\n  testing: boolean = false;\r\n  isOnline: boolean = false;\r\n  isDbOpen : boolean =false;\r\n  desktopTesting:boolean = false;\r\n  deliverToBase:boolean = false;\r\n  seqno = 0;\r\n  tab = \"\";\r\n  isAppinBackground: boolean = false;\r\n  isDiagnosticsRunning: boolean = false;\r\n  newMsgCount = 0;\r\n  temp = [];\r\n  networkType;\r\n  driverId: number;\r\n  tabLoading;\r\n  multidel_phototaken = false;\r\n  localStorageZapped;\r\n  \r\n\r\n  //Riyaz: Global variables are implemented using getter & setter methods\r\n  //See https://ionicallyspeaking.com/2016/03/10/global-variables-in-ionic-2/\r\n\r\n  props = new Map();\r\n\r\n\r\n  constructor(public loadingCtrl: LoadingController) {\r\n    this.setMyConfiguredForJsea(false);\r\n    this.tabLoading = this.loadingCtrl.create({});\r\n    //console.log('Hello SharedServiceProvider Provider');\r\n  }\r\n\r\n  setJobId(value) {\r\n    this.props.set('jobid', value);\r\n  }\r\n\r\n  getJobId() {\r\n    return this.props.get('jobid');\r\n  }\r\n\r\n  setJobMetaData(value) {\r\n    //console.log(\"3.5 Jobmetadata in shared-service.ts set to==\" + value);\r\n    localStorage.setItem('jobMetadata', '');\r\n    localStorage.setItem('jobMetadata', JSON.stringify(value));\r\n    //alert(\"Jobmetadata set!!\");\r\n  }\r\n\r\n  getJobMetaData() {\r\n    return JSON.parse(localStorage.getItem('jobMetadata'));\r\n  }\r\n\r\n  setHistoryMetaData(value) {\r\n\r\n    this.props.set('historyMetadata', value);\r\n  }\r\n\r\n  getHistoryMetadata() {\r\n    return this.props.get('historyMetadata');\r\n  }\r\n\r\n  setBNewItem(value) {\r\n    this.props.set('bNewItem', value);\r\n  }\r\n\r\n  getBNewItem() {\r\n    return this.props.get('bNewItem');\r\n  }\r\n\r\n  setDesktopBrowserScrolling(value) {\r\n    this.props.set('desktopBrowserScrolling', value);\r\n  }\r\n\r\n  getDesktopBrowserScrolling() {\r\n    return this.props.get('desktopBrowserScrolling');\r\n  }\r\n\r\n  setSyncInProgress(value) {\r\n\r\n    this.props.set('syncInProgress', value);\r\n  }\r\n\r\n  getSyncInProgress() {\r\n\r\n    return this.props.get('syncInProgress');\r\n  }\r\n\r\n  setFirstTimeLoad(value) {\r\n    this.props.set('firstTimeLoad', value);\r\n  }\r\n\r\n  getFirstTimeLoad() {\r\n    return this.props.get('firstTimeLoad');\r\n  }\r\n\r\n  setMyConfiguredForJsea(value) {\r\n    this.props.set('myConfiguredForJsea', value);\r\n  }\r\n\r\n  getMyConfiguredForJsea() {\r\n    return this.props.get('myConfiguredForJsea');\r\n  }\r\n\r\n\r\n  setCancelNotif(value) {\r\n    this.props.set('CancelNotif', value);\r\n  }\r\n\r\n  getCancelNotif() {\r\n    return this.props.get('CancelNotif');\r\n  }\r\n\r\n  showSpinner() {\r\n    this.tabLoading = this.loadingCtrl.create({\r\n      cssClass: 'transparent'\r\n    });\r\n\r\n    this.tabLoading.present().then(() => {\r\n      this.tabLoading.dismiss();\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/shared-service/shared-service.ts","var map = {\n\t\"../pages/barcode/barcode.module\": [\n\t\t833,\n\t\t14\n\t],\n\t\"../pages/change/change.module\": [\n\t\t834,\n\t\t13\n\t],\n\t\"../pages/device/device.module\": [\n\t\t835,\n\t\t2\n\t],\n\t\"../pages/gps/gps.module\": [\n\t\t836,\n\t\t1\n\t],\n\t\"../pages/home/home.module\": [\n\t\t837,\n\t\t0\n\t],\n\t\"../pages/image-text/image-text.module\": [\n\t\t838,\n\t\t12\n\t],\n\t\"../pages/images/images.module\": [\n\t\t839,\n\t\t11\n\t],\n\t\"../pages/job-detail-notes/job-detail-notes.module\": [\n\t\t840,\n\t\t10\n\t],\n\t\"../pages/job-details/job-details.module\": [\n\t\t841,\n\t\t4\n\t],\n\t\"../pages/jsea/jsea.module\": [\n\t\t842,\n\t\t9\n\t],\n\t\"../pages/login/login.module\": [\n\t\t843,\n\t\t8\n\t],\n\t\"../pages/msgs/msgs.module\": [\n\t\t844,\n\t\t7\n\t],\n\t\"../pages/pda/pda.module\": [\n\t\t845,\n\t\t6\n\t],\n\t\"../pages/signature/signature.module\": [\n\t\t846,\n\t\t3\n\t],\n\t\"../pages/tabs/tabs.module\": [\n\t\t847,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 265;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 265\n// module chunks = 15","/* tslint:disable */\n\n\n\ndeclare var Object: any;\nexport interface LoopBackFilter {\n  fields?: any;\n  include?: any;\n  limit?: any;\n  order?: any;\n  skip?: any;\n  offset?: any;\n  where?: any;\n}\n\nexport interface AccessTokenInterface {\n  \"id\"?: string;\n  \"ttl\"?: number;\n  \"scopes\"?: [\"string\"];\n  \"created\"?: Date;\n  \"userId\"?: string;\n  \"user\"?: any;\n}\n\nexport class AccessToken implements AccessTokenInterface {\n  \"id\": string;\n  \"ttl\": number;\n  \"scopes\": [\"string\"];\n  \"created\": Date;\n  \"userId\": string;\n  \"user\": any;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `AccessToken`.\n   */\n  public static getModelName() {\n    return \"AccessToken\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of AccessToken for dynamic purposes.\n  **/\n  public static factory(data: AccessTokenInterface): AccessToken{\n    return new AccessToken(data);\n  }  \n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'AccessToken',\n      plural: 'AccessTokens',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"ttl\": {\n          name: 'ttl',\n          type: 'number',\n          default: 1209600\n        },\n        \"scopes\": {\n          name: 'scopes',\n          type: '[\"string\"]'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"userId\": {\n          name: 'userId',\n          type: 'string'\n        },\n      },\n      relations: {\n        user: {\n          name: 'user',\n          type: 'User',\n          model: 'User'\n        },\n      }\n    }\n  }\n}\n\nexport class SDKToken implements AccessTokenInterface {\n  id: any = null;\n  ttl: number = null;\n  scopes: any = null;\n  created: any = null;\n  userId: any = null;\n  user: any = null;\n  rememberMe: boolean = null;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n}\n/**\n* This GeoPoint represents both, LoopBack and MongoDB GeoPoint\n**/\nexport interface GeoPoint  {\n    lat?: number;\n    lng?: number;\n    type?: string;\n    coordinates?: number[];\n}\n\nexport interface StatFilter {\n    range: string,\n    custom?: {\n      start: string,\n      end: string\n    },\n    where?: {},\n    groupBy?: string\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/BaseModels.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface JobChangeInterface {\n  \"id\"?: string;\n  \"rev\"?: string;\n  \"prev\"?: string;\n  \"checkpoint\"?: number;\n  \"modelName\"?: string;\n  \"modelId\"?: string;\n}\n\nexport class JobChange implements JobChangeInterface {\n  \"id\": string;\n  \"rev\": string;\n  \"prev\": string;\n  \"checkpoint\": number;\n  \"modelName\": string;\n  \"modelId\": string;\n  constructor(data?: JobChangeInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `JobChange`.\n   */\n  public static getModelName() {\n    return \"JobChange\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of JobChange for dynamic purposes.\n  **/\n  public static factory(data: JobChangeInterface): JobChange{\n    return new JobChange(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'JobChange',\n      plural: 'JobChanges',\n      path: 'JobChanges',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"rev\": {\n          name: 'rev',\n          type: 'string'\n        },\n        \"prev\": {\n          name: 'prev',\n          type: 'string'\n        },\n        \"checkpoint\": {\n          name: 'checkpoint',\n          type: 'number'\n        },\n        \"modelName\": {\n          name: 'modelName',\n          type: 'string'\n        },\n        \"modelId\": {\n          name: 'modelId',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/JobChange.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface TpmPdaControllerInterface {\n  \"tpmpc_imei_id\"?: string;\n  \"tpmpc_phone_num\": string;\n  \"tpmpc_driver_id\": number;\n  \"tpmpc_driver_name\"?: string;\n  \"tpmpc_access_allowed\"?: string;\n  \"tpmpc_access_registered\"?: string;\n  \"tpmpc_last_update_time\"?: Date;\n  \"tpmpc_driver_home_lat\"?: number;\n  \"tpmpc_driver_home_lng\"?: number;\n}\n\nexport class TpmPdaController implements TpmPdaControllerInterface {\n  \"tpmpc_imei_id\": string;\n  \"tpmpc_phone_num\": string;\n  \"tpmpc_driver_id\": number;\n  \"tpmpc_driver_name\": string;\n  \"tpmpc_access_allowed\": string;\n  \"tpmpc_access_registered\": string;\n  \"tpmpc_last_update_time\": Date;\n  \"tpmpc_driver_home_lat\": number;\n  \"tpmpc_driver_home_lng\": number;\n  constructor(data?: TpmPdaControllerInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `TpmPdaController`.\n   */\n  public static getModelName() {\n    return \"TpmPdaController\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of TpmPdaController for dynamic purposes.\n  **/\n  public static factory(data: TpmPdaControllerInterface): TpmPdaController{\n    return new TpmPdaController(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'TpmPdaController',\n      plural: 'TpmPdaControllers',\n      path: 'TpmPdaControllers',\n      idName: 'tpmpc_imei_id',\n      properties: {\n        \"tpmpc_imei_id\": {\n          name: 'tpmpc_imei_id',\n          type: 'string'\n        },\n        \"tpmpc_phone_num\": {\n          name: 'tpmpc_phone_num',\n          type: 'string'\n        },\n        \"tpmpc_driver_id\": {\n          name: 'tpmpc_driver_id',\n          type: 'number'\n        },\n        \"tpmpc_driver_name\": {\n          name: 'tpmpc_driver_name',\n          type: 'string'\n        },\n        \"tpmpc_access_allowed\": {\n          name: 'tpmpc_access_allowed',\n          type: 'string'\n        },\n        \"tpmpc_access_registered\": {\n          name: 'tpmpc_access_registered',\n          type: 'string'\n        },\n        \"tpmpc_last_update_time\": {\n          name: 'tpmpc_last_update_time',\n          type: 'Date'\n        },\n        \"tpmpc_driver_home_lat\": {\n          name: 'tpmpc_driver_home_lat',\n          type: 'number'\n        },\n        \"tpmpc_driver_home_lng\": {\n          name: 'tpmpc_driver_home_lng',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/TpmPdaController.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface ApplicationInterface {\n  \"id\"?: string;\n  \"realm\"?: string;\n  \"name\": string;\n  \"description\"?: string;\n  \"icon\"?: string;\n  \"owner\"?: string;\n  \"collaborators\"?: Array<any>;\n  \"email\"?: string;\n  \"emailVerified\"?: boolean;\n  \"url\"?: string;\n  \"callbackUrls\"?: Array<any>;\n  \"permissions\"?: Array<any>;\n  \"clientKey\"?: string;\n  \"javaScriptKey\"?: string;\n  \"restApiKey\"?: string;\n  \"windowsKey\"?: string;\n  \"masterKey\"?: string;\n  \"pushSettings\"?: any;\n  \"authenticationEnabled\"?: boolean;\n  \"anonymousAllowed\"?: boolean;\n  \"authenticationSchemes\"?: Array<any>;\n  \"status\"?: string;\n  \"created\"?: Date;\n  \"modified\"?: Date;\n}\n\nexport class Application implements ApplicationInterface {\n  \"id\": string;\n  \"realm\": string;\n  \"name\": string;\n  \"description\": string;\n  \"icon\": string;\n  \"owner\": string;\n  \"collaborators\": Array<any>;\n  \"email\": string;\n  \"emailVerified\": boolean;\n  \"url\": string;\n  \"callbackUrls\": Array<any>;\n  \"permissions\": Array<any>;\n  \"clientKey\": string;\n  \"javaScriptKey\": string;\n  \"restApiKey\": string;\n  \"windowsKey\": string;\n  \"masterKey\": string;\n  \"pushSettings\": any;\n  \"authenticationEnabled\": boolean;\n  \"anonymousAllowed\": boolean;\n  \"authenticationSchemes\": Array<any>;\n  \"status\": string;\n  \"created\": Date;\n  \"modified\": Date;\n  constructor(data?: ApplicationInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Application`.\n   */\n  public static getModelName() {\n    return \"Application\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Application for dynamic purposes.\n  **/\n  public static factory(data: ApplicationInterface): Application{\n    return new Application(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Application',\n      plural: 'Applications',\n      path: 'Applications',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"realm\": {\n          name: 'realm',\n          type: 'string'\n        },\n        \"name\": {\n          name: 'name',\n          type: 'string'\n        },\n        \"description\": {\n          name: 'description',\n          type: 'string'\n        },\n        \"icon\": {\n          name: 'icon',\n          type: 'string'\n        },\n        \"owner\": {\n          name: 'owner',\n          type: 'string'\n        },\n        \"collaborators\": {\n          name: 'collaborators',\n          type: 'Array&lt;any&gt;'\n        },\n        \"email\": {\n          name: 'email',\n          type: 'string'\n        },\n        \"emailVerified\": {\n          name: 'emailVerified',\n          type: 'boolean'\n        },\n        \"url\": {\n          name: 'url',\n          type: 'string'\n        },\n        \"callbackUrls\": {\n          name: 'callbackUrls',\n          type: 'Array&lt;any&gt;'\n        },\n        \"permissions\": {\n          name: 'permissions',\n          type: 'Array&lt;any&gt;'\n        },\n        \"clientKey\": {\n          name: 'clientKey',\n          type: 'string'\n        },\n        \"javaScriptKey\": {\n          name: 'javaScriptKey',\n          type: 'string'\n        },\n        \"restApiKey\": {\n          name: 'restApiKey',\n          type: 'string'\n        },\n        \"windowsKey\": {\n          name: 'windowsKey',\n          type: 'string'\n        },\n        \"masterKey\": {\n          name: 'masterKey',\n          type: 'string'\n        },\n        \"pushSettings\": {\n          name: 'pushSettings',\n          type: 'any'\n        },\n        \"authenticationEnabled\": {\n          name: 'authenticationEnabled',\n          type: 'boolean',\n          default: true\n        },\n        \"anonymousAllowed\": {\n          name: 'anonymousAllowed',\n          type: 'boolean',\n          default: true\n        },\n        \"authenticationSchemes\": {\n          name: 'authenticationSchemes',\n          type: 'Array&lt;any&gt;'\n        },\n        \"status\": {\n          name: 'status',\n          type: 'string',\n          default: 'sandbox'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"modified\": {\n          name: 'modified',\n          type: 'Date'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Application.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface NotificationInterface {\n  \"alert\"?: any;\n  \"badge\"?: number;\n  \"category\"?: string;\n  \"collapseKey\"?: string;\n  \"contentAvailable\"?: boolean;\n  \"created\"?: Date;\n  \"delayWhileIdle\"?: boolean;\n  \"deviceToken\": string;\n  \"deviceType\": string;\n  \"expirationInterval\"?: number;\n  \"expirationTime\"?: Date;\n  \"modified\"?: Date;\n  \"scheduledTime\"?: Date;\n  \"sound\"?: string;\n  \"status\"?: string;\n  \"urlArgs\"?: Array<any>;\n  \"id\"?: any;\n}\n\nexport class Notification implements NotificationInterface {\n  \"alert\": any;\n  \"badge\": number;\n  \"category\": string;\n  \"collapseKey\": string;\n  \"contentAvailable\": boolean;\n  \"created\": Date;\n  \"delayWhileIdle\": boolean;\n  \"deviceToken\": string;\n  \"deviceType\": string;\n  \"expirationInterval\": number;\n  \"expirationTime\": Date;\n  \"modified\": Date;\n  \"scheduledTime\": Date;\n  \"sound\": string;\n  \"status\": string;\n  \"urlArgs\": Array<any>;\n  \"id\": any;\n  constructor(data?: NotificationInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Notification`.\n   */\n  public static getModelName() {\n    return \"Notification\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Notification for dynamic purposes.\n  **/\n  public static factory(data: NotificationInterface): Notification{\n    return new Notification(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Notification',\n      plural: 'Notifications',\n      path: 'Notifications',\n      idName: 'id',\n      properties: {\n        \"alert\": {\n          name: 'alert',\n          type: 'any'\n        },\n        \"badge\": {\n          name: 'badge',\n          type: 'number'\n        },\n        \"category\": {\n          name: 'category',\n          type: 'string'\n        },\n        \"collapseKey\": {\n          name: 'collapseKey',\n          type: 'string'\n        },\n        \"contentAvailable\": {\n          name: 'contentAvailable',\n          type: 'boolean'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"delayWhileIdle\": {\n          name: 'delayWhileIdle',\n          type: 'boolean'\n        },\n        \"deviceToken\": {\n          name: 'deviceToken',\n          type: 'string'\n        },\n        \"deviceType\": {\n          name: 'deviceType',\n          type: 'string'\n        },\n        \"expirationInterval\": {\n          name: 'expirationInterval',\n          type: 'number'\n        },\n        \"expirationTime\": {\n          name: 'expirationTime',\n          type: 'Date'\n        },\n        \"modified\": {\n          name: 'modified',\n          type: 'Date'\n        },\n        \"scheduledTime\": {\n          name: 'scheduledTime',\n          type: 'Date'\n        },\n        \"sound\": {\n          name: 'sound',\n          type: 'string'\n        },\n        \"status\": {\n          name: 'status',\n          type: 'string'\n        },\n        \"urlArgs\": {\n          name: 'urlArgs',\n          type: 'Array&lt;any&gt;'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Notification.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface PushInterface {\n  \"id\"?: number;\n}\n\nexport class Push implements PushInterface {\n  \"id\": number;\n  constructor(data?: PushInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Push`.\n   */\n  public static getModelName() {\n    return \"Push\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Push for dynamic purposes.\n  **/\n  public static factory(data: PushInterface): Push{\n    return new Push(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Push',\n      plural: 'Push',\n      path: 'Push',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Push.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface Mobile_eventInterface {\n  \"id\"?: any;\n}\n\nexport class Mobile_event implements Mobile_eventInterface {\n  \"id\": any;\n  constructor(data?: Mobile_eventInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Mobile_event`.\n   */\n  public static getModelName() {\n    return \"Mobile_event\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Mobile_event for dynamic purposes.\n  **/\n  public static factory(data: Mobile_eventInterface): Mobile_event{\n    return new Mobile_event(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Mobile_event',\n      plural: 'mobile_event',\n      path: 'mobile_event',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Mobile_event.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface SiteConfigInterface {\n  \"confKey\": string;\n  \"confActive\": boolean;\n  \"confValue\"?: string;\n  \"confDesc\"?: string;\n}\n\nexport class SiteConfig implements SiteConfigInterface {\n  \"confKey\": string;\n  \"confActive\": boolean;\n  \"confValue\": string;\n  \"confDesc\": string;\n  constructor(data?: SiteConfigInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiteConfig`.\n   */\n  public static getModelName() {\n    return \"SiteConfig\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of SiteConfig for dynamic purposes.\n  **/\n  public static factory(data: SiteConfigInterface): SiteConfig{\n    return new SiteConfig(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'SiteConfig',\n      plural: 'SiteConfigs',\n      path: 'SiteConfigs',\n      idName: 'confKey',\n      properties: {\n        \"confKey\": {\n          name: 'confKey',\n          type: 'string'\n        },\n        \"confActive\": {\n          name: 'confActive',\n          type: 'boolean'\n        },\n        \"confValue\": {\n          name: 'confValue',\n          type: 'string'\n        },\n        \"confDesc\": {\n          name: 'confDesc',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/SiteConfig.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface DespatchToDriverMessagesInterface {\n  \"drvmSeqid\"?: number;\n  \"drvmDriverId\": number;\n  \"drvmDate\": Date;\n  \"drvmTimestamp\": Date;\n  \"drvmMessage\": string;\n  \"drvmSender\": string;\n  \"drvmRecipient\": string;\n  \"drvmSpare\"?: string;\n}\n\nexport class DespatchToDriverMessages implements DespatchToDriverMessagesInterface {\n  \"drvmSeqid\": number;\n  \"drvmDriverId\": number;\n  \"drvmDate\": Date;\n  \"drvmTimestamp\": Date;\n  \"drvmMessage\": string;\n  \"drvmSender\": string;\n  \"drvmRecipient\": string;\n  \"drvmSpare\": string;\n  constructor(data?: DespatchToDriverMessagesInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DespatchToDriverMessages`.\n   */\n  public static getModelName() {\n    return \"DespatchToDriverMessages\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of DespatchToDriverMessages for dynamic purposes.\n  **/\n  public static factory(data: DespatchToDriverMessagesInterface): DespatchToDriverMessages{\n    return new DespatchToDriverMessages(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'DespatchToDriverMessages',\n      plural: 'DespatchToDriverMessages',\n      path: 'DespatchToDriverMessages',\n      idName: 'drvmSeqid',\n      properties: {\n        \"drvmSeqid\": {\n          name: 'drvmSeqid',\n          type: 'number'\n        },\n        \"drvmDriverId\": {\n          name: 'drvmDriverId',\n          type: 'number'\n        },\n        \"drvmDate\": {\n          name: 'drvmDate',\n          type: 'Date'\n        },\n        \"drvmTimestamp\": {\n          name: 'drvmTimestamp',\n          type: 'Date'\n        },\n        \"drvmMessage\": {\n          name: 'drvmMessage',\n          type: 'string'\n        },\n        \"drvmSender\": {\n          name: 'drvmSender',\n          type: 'string'\n        },\n        \"drvmRecipient\": {\n          name: 'drvmRecipient',\n          type: 'string'\n        },\n        \"drvmSpare\": {\n          name: 'drvmSpare',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/DespatchToDriverMessages.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface JseaDriverQuestionsInterface {\n  \"jdqQuestionText\"?: string;\n  \"jdqType\": string;\n  \"jdqCbox\"?: boolean;\n  \"jdqOrder\": number;\n  \"jdqNewForm\"?: boolean;\n  \"jdqNewFormType\"?: string;\n}\n\nexport class JseaDriverQuestions implements JseaDriverQuestionsInterface {\n  \"jdqQuestionText\": string;\n  \"jdqType\": string;\n  \"jdqCbox\": boolean;\n  \"jdqOrder\": number;\n  \"jdqNewForm\": boolean;\n  \"jdqNewFormType\": string;\n  constructor(data?: JseaDriverQuestionsInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `JseaDriverQuestions`.\n   */\n  public static getModelName() {\n    return \"JseaDriverQuestions\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of JseaDriverQuestions for dynamic purposes.\n  **/\n  public static factory(data: JseaDriverQuestionsInterface): JseaDriverQuestions{\n    return new JseaDriverQuestions(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'JseaDriverQuestions',\n      plural: 'JseaDriverQuestions',\n      path: 'JseaDriverQuestions',\n      idName: 'jdqType',\n      properties: {\n        \"jdqQuestionText\": {\n          name: 'jdqQuestionText',\n          type: 'string'\n        },\n        \"jdqType\": {\n          name: 'jdqType',\n          type: 'string'\n        },\n        \"jdqCbox\": {\n          name: 'jdqCbox',\n          type: 'boolean'\n        },\n        \"jdqOrder\": {\n          name: 'jdqOrder',\n          type: 'number'\n        },\n        \"jdqNewForm\": {\n          name: 'jdqNewForm',\n          type: 'boolean'\n        },\n        \"jdqNewFormType\": {\n          name: 'jdqNewFormType',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/JseaDriverQuestions.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface JseaDriverAnswersChangeInterface {\n  \"id\"?: string;\n  \"rev\"?: string;\n  \"prev\"?: string;\n  \"checkpoint\"?: number;\n  \"modelName\"?: string;\n  \"modelId\"?: string;\n}\n\nexport class JseaDriverAnswersChange implements JseaDriverAnswersChangeInterface {\n  \"id\": string;\n  \"rev\": string;\n  \"prev\": string;\n  \"checkpoint\": number;\n  \"modelName\": string;\n  \"modelId\": string;\n  constructor(data?: JseaDriverAnswersChangeInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `JseaDriverAnswersChange`.\n   */\n  public static getModelName() {\n    return \"JseaDriverAnswersChange\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of JseaDriverAnswersChange for dynamic purposes.\n  **/\n  public static factory(data: JseaDriverAnswersChangeInterface): JseaDriverAnswersChange{\n    return new JseaDriverAnswersChange(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'JseaDriverAnswersChange',\n      plural: 'JseaDriverAnswersChanges',\n      path: 'JseaDriverAnswersChanges',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"rev\": {\n          name: 'rev',\n          type: 'string'\n        },\n        \"prev\": {\n          name: 'prev',\n          type: 'string'\n        },\n        \"checkpoint\": {\n          name: 'checkpoint',\n          type: 'number'\n        },\n        \"modelName\": {\n          name: 'modelName',\n          type: 'string'\n        },\n        \"modelId\": {\n          name: 'modelId',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/JseaDriverAnswersChange.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface PhotocontainerInterface {\n  \"id\"?: number;\n}\n\nexport class Photocontainer implements PhotocontainerInterface {\n  \"id\": number;\n  constructor(data?: PhotocontainerInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Photocontainer`.\n   */\n  public static getModelName() {\n    return \"Photocontainer\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Photocontainer for dynamic purposes.\n  **/\n  public static factory(data: PhotocontainerInterface): Photocontainer{\n    return new Photocontainer(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Photocontainer',\n      plural: 'Photocontainers',\n      path: 'Photocontainers',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'number'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Photocontainer.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface ImageInterface {\n  \"name\"?: string;\n  \"type\"?: string;\n  \"url\": string;\n  \"id\"?: any;\n}\n\nexport class Image implements ImageInterface {\n  \"name\": string;\n  \"type\": string;\n  \"url\": string;\n  \"id\": any;\n  constructor(data?: ImageInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Image`.\n   */\n  public static getModelName() {\n    return \"Image\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Image for dynamic purposes.\n  **/\n  public static factory(data: ImageInterface): Image{\n    return new Image(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Image',\n      plural: 'Images',\n      path: 'Images',\n      idName: 'id',\n      properties: {\n        \"name\": {\n          name: 'name',\n          type: 'string'\n        },\n        \"type\": {\n          name: 'type',\n          type: 'string'\n        },\n        \"url\": {\n          name: 'url',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/Image.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface BarcodeHistChangeInterface {\n  \"id\"?: string;\n  \"rev\"?: string;\n  \"prev\"?: string;\n  \"checkpoint\"?: number;\n  \"modelName\"?: string;\n  \"modelId\"?: string;\n}\n\nexport class BarcodeHistChange implements BarcodeHistChangeInterface {\n  \"id\": string;\n  \"rev\": string;\n  \"prev\": string;\n  \"checkpoint\": number;\n  \"modelName\": string;\n  \"modelId\": string;\n  constructor(data?: BarcodeHistChangeInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `BarcodeHistChange`.\n   */\n  public static getModelName() {\n    return \"BarcodeHistChange\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of BarcodeHistChange for dynamic purposes.\n  **/\n  public static factory(data: BarcodeHistChangeInterface): BarcodeHistChange{\n    return new BarcodeHistChange(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'BarcodeHistChange',\n      plural: 'BarcodeHistChanges',\n      path: 'BarcodeHistChanges',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"rev\": {\n          name: 'rev',\n          type: 'string'\n        },\n        \"prev\": {\n          name: 'prev',\n          type: 'string'\n        },\n        \"checkpoint\": {\n          name: 'checkpoint',\n          type: 'number'\n        },\n        \"modelName\": {\n          name: 'modelName',\n          type: 'string'\n        },\n        \"modelId\": {\n          name: 'modelId',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/BarcodeHistChange.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nexport interface CookieInterface { [key: string]: any }\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module CookieBrowser\n* @license MIT\n* @description\n* This module handle cookies, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class CookieBrowser {\n  /**\n   * @type {CookieInterface}\n   **/\n  private cookies: CookieInterface = {};\n  /**\n   * @method get\n   * @param {string} key Cookie key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in cookies.\n   **/\n  get(key: string): any {\n    if (!this.cookies[key]) {\n      let cookie = window.document\n                         .cookie.split('; ')\n                         .filter((item: any) => item.split('=')[0] === key).pop();\n      if (!cookie) {\n        return null;\n      }\n\n      this.cookies[key] = this.parse(cookie.split('=').slice(1).join('='));\n    }\n\n    return this.cookies[key];\n  }\n  /**\n   * @method set\n   * @param {string} key Cookie key name\n   * @param {any} value Any value\n   * @param {Date=} expires The date of expiration (Optional)\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in cookies.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    this.cookies[key] = value;\n    let cookie = `${key}=${encodeURI(value)}; path=/${expires ? `; expires=${ expires.toUTCString() }` : ''}`;\n    window.document.cookie = cookie;\n  }\n  /**\n   * @method remove\n   * @param {string} key Cookie key name\n   * @return {void}\n   * @description\n   * This method will remove a cookie from the client.\n   **/\n  remove(key: string) {\n    document.cookie = key + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    delete this.cookies[key];\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(decodeURI(value));\n    } catch (e) {\n        return value;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/storage/cookie.browser.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module StorageBrowser\n* @license MIT\n* @description\n* This module handle localStorage, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class StorageBrowser {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in localStorage.\n   **/\n  get(key: string): any {\n    let data: string = localStorage.getItem(key);\n    return this.parse(data);\n  }\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    localStorage.setItem(\n      key,\n      typeof value === 'object' ? JSON.stringify(value) : value\n    );\n  }\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {\n    if (localStorage[key]) {\n      localStorage.removeItem(key);\n    } else {\n      console.log('Trying to remove unexisting key: ', key);\n    }\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/storage/storage.browser.ts","/* tslint:disable */\n/**\n * @module SocketDriver\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SocketDriver class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class SocketDriver {\n  connect(url: any, options: any) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/sockets/socket.driver.ts","import { Observer } from 'rxjs/Observer';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { SiteConfigApi } from '../../../shared/sdk/services';\r\n\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { LoopBackConfig } from '../../../shared/sdk';\r\nimport { CustomerconnServiceProvider } from '../customerconn-service/customerconn-service';\r\n\r\n\r\n/*\r\n  Generated class for the SiteconfigServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class SiteconfigServiceProvider {\r\n\r\n  keylist = [\r\n    'PDA_BARCODE_IS_JOBNUM',\r\n    'PDA_BARCODES',\r\n    'PDA_JSEA_ON',\r\n    'PDA_JSEA_TYPE',\r\n    'PDA_PICKUP_ALL',\r\n    'PDA_DEPART_ALL',\r\n    'PDA_DELIVER_ALL',\r\n    'PDA_FULL_STATUSES',\r\n    'PDA_IMAGES',\r\n    'PDA_IMAGES_URL',\r\n    'PDA_NOTES',\r\n    'PDA_DEL_DAYSBACK',\r\n    'PDA_SORT_COL1',\r\n    'PDA_DISPLAY_DATE',\r\n    'PDA_SIGNATURE_PUP',\r\n    'PDA_SIGNATURE_DPUP',\r\n    'PDA_DISCRETE_DEL_SIGNAT',\r\n    'PDA_MULTIDEL_NOTE_TEXT',\r\n    'PDA_DISPLAY_FROM',\r\n    'PDA_DISPLAY_TO',\r\n    'PDA_ROW1_FONT_SIZE',\r\n    'PDA_MONITOR_ONLINE',\r\n    'PDA_CLIENT_CONFLICTS',\r\n    'PDA_MANDATORY_PHOTOS',\r\n    'PDA_IMAGE_NOTES',\r\n    'PDA_NOTIFY_REPEAT',\r\n    'PDA_NOTIFY_INTERVAL',\r\n    'PDA_SENDER_ID',\r\n    'PDA_REQ_NAVIGATION',\r\n    'PDA_SHOW_CLIENT_NAME',\r\n    'PDA_JSEA_BOTH_YN',\r\n    'PDA_MANDATORY_NOTES',\r\n    'PDA_ATTACHED_DOCS',\r\n    'PDA_JOB_ROUTING',\r\n    'PDA_ROUTE_MAP',\r\n    'PDA_DISABLE_BACKGROUND_SYNC',\r\n    'PDA_DISABLE_DEVICE_DIAGNOSTICS',\r\n    'PDA_DISABLE_DIAGNOSTICS_BGPS_ON_LOGOFF',\r\n    'PDA_JSEA_NO_NO',\r\n    'PDA_DELIVERY_TO_BASE',\r\n\t\t'PDA_BREAK_TIMES'\r\n  ];\r\n\r\n  siteconfigs = null;\r\n  injector;\r\n  userId;\r\n  connDetails;\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'SiteconfigServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider,\r\n    private siteConfigApi: SiteConfigApi,\r\n    private sharedService: SharedServiceProvider,\r\n    private logger: LogServiceProvider, private customerConn: CustomerconnServiceProvider\r\n  ) {\r\n    console.log('Hello SiteconfigServiceProvider Provider');\r\n  }\r\n\r\n\r\n\r\n  loadAllConfigsFromServer() {\r\n    var filter = {\r\n      \"where\":\r\n      {\r\n        and: [{ \"confActive\": true }, { \"confKey\": { \"inq\": this.keylist } }]\r\n      }\r\n    };\r\n\r\n    this.userId = localStorage.getItem('userId');\r\n    this.connDetails = this.customerConn.getConnectionDetails(this.userId.toLowerCase());\r\n    LoopBackConfig.setBaseURL((this.connDetails.url));\r\n    LoopBackConfig.setApiVersion('api');\r\n\r\n    return Observable.create((observer: Observer<string>) => {\r\n      this.siteConfigApi.find(filter).subscribe(siteconfigs => {\r\n        this.log.info(\"Retrieved SiteConfigs from DB:\" + JSON.stringify(siteconfigs));\r\n\r\n        this.siteconfigs = siteconfigs;\r\n        var len = this.siteconfigs.length;\r\n        if (len == 0) {\t\t// not found\r\n          this.log.error(\"No site config values found\");\r\n          //console.log(\"No site config values found\");\r\n        } else {\r\n\r\n          for (var i = 0; i < len; i++) {\r\n            // store in local storage for future use\r\n            // TODO - store in individual keys or as a site_config key for an object with all keys?\r\n            localStorage.setItem(this.siteconfigs[i].confKey, this.siteconfigs[i].confValue);\r\n          }\r\n          try {\r\n            localStorage.setItem('SITE_CONFIG_LOADED', 'true');\r\n          } catch (domException) {\r\n            this.log.error(\"Unable to store items in local storage::\" + JSON.stringify(domException));\r\n          }\r\n          this.sharedService.SITE_CONFIG_LOADED.next(true);\r\n        }\r\n        observer.next(\"success\");\r\n      },\r\n        error => {\r\n          this.log.error(error);\r\n          Observable.throw(error);\r\n        });\r\n    });\r\n  } //End of  getAllConfigsFromServer() \r\n\r\n\r\n\r\n  deleteLocalConfigs() {\r\n    // Remove all config key/value pairs from local storage\r\n    // NOTE this should in general ALWAYS be followed by a getAllConfigsFromServer() call to repopulate\r\n    var len = this.keylist.length;\r\n    for (var i = 0; i < len; i++) {\r\n      if (localStorage.getItem(this.keylist[i]) !== null) {\r\n        localStorage.removeItem(this.keylist[i]);\r\n      }\r\n    }\r\n\r\n    this.sharedService.SITE_CONFIG_LOADED.next(false);\r\n  }\r\n\r\n  // returns a promise as we are using it in app.module.js to resolve routes\r\n  getSiteConfigYN(key) {\r\n    var retval = localStorage.getItem(key);\r\n    if (!retval) {\r\n      retval = 'N';\r\n    }\r\n    return retval;\r\n  }\r\n\r\n\r\n  getSiteConfig(key) {\r\n    var retval = localStorage.getItem(key);\r\n    if (!retval) {\r\n      retval = '';\r\n    }\r\n    return Observable.of(retval);\r\n  }\r\n\r\n  getSiteConfigInt(key) {\r\n    var retval = +localStorage.getItem(key);\t\t// the \"+\" causes a cast to an integer\r\n    if (!retval) {\r\n      retval = 0;\r\n    }\r\n    return retval;\r\n  }\r\n\r\n  // no promise on this one so it can be used in inline synchronous code\r\n  getSiteConfigValue(key) {\r\n    var retval = localStorage.getItem(key);\r\n    if (!retval) {\r\n      retval = '';\r\n    }\r\n    return (retval);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/siteconfig-service/siteconfig-service.ts","/* tslint:disable */\nimport { Injectable, Inject } from '@angular/core';\nimport { IO } from './io.service';\nimport { LoopBackAuth } from './auth.service';\nimport { FireLoop } from '../../models/FireLoop';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable } from 'rxjs/Observable';\nimport { share } from 'rxjs/operators';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module RealTime\n* @license MIT\n* @description\n* This module is a real-time interface for using socket connections, its main purpose\n* is to make sure that when there is a valid connection, it will create instances\n* of the different real-time functionalities like FireLoop, PubSub and IO.\n**/\n@Injectable()\nexport class RealTime {\n  public IO: IO;\n  public FireLoop: FireLoop;\n  private connecting: boolean = false;\n  private onReadySubject: Subject<string> = new Subject<string>();\n  private sharedOnReady: Observable<string> = this.onReadySubject.asObservable().pipe(share());\n  /**\n  * @method constructor\n  * @param {SocketConnection} connection WebSocket connection service\n  * @param {SDKModels} models Model provider service\n  * @param {LoopBackAuth} auth LoopBack authentication service\n  * @description\n  * It will intialize the shared on ready communication channel.\n  **/\n  constructor(\n    @Inject(SocketConnection) public connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth\n  ) {\n    this.sharedOnReady.subscribe();\n  }\n  /**\n  * @method onDisconnect\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is disconnected from server.\n  **/\n  onDisconnect(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnDisconnect;\n  }\n  /**\n  * @method onAuthenticated\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is authenticated with the server.\n  **/\n  onAuthenticated(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnAuthenticated;\n  }\n  /**\n  * @method onUnAuthorized\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is not authorized to connect with the server.\n  **/\n  onUnAuthorized(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnUnAuthorized;\n  }\n  /**\n  * @method onReady\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is Ready for broadcasting.\n  * and will register connection flow events to notify subscribers.\n  **/\n  public onReady(): Observable<any> {\n    // If there is a valid connection, then we just send back to the EventLoop\n    // Or next will be executed before the actual subscription.\n    if (this.connection.isConnected()) {\n      let to = setTimeout(() => {\n        this.onReadySubject.next('sharedConnection');\n        clearTimeout(to);\n      });\n    // Else if there is a current attempt of connection we wait for the prior\n    // process that started the connection flow.\n    } else if (this.connecting) {\n      let ti = setInterval(() => {\n        if (this.connection.isConnected()) {\n          this.onReadySubject.next('sharedConnection');\n          clearInterval(ti);\n        }\n      }, 500);\n    // If there is not valid connection or attempt, then we start the connection flow\n    // and make sure we notify all the onReady subscribers when done.\n    // Also it will listen for desconnections so we unsubscribe and avoid both:\n    // Memory leaks and duplicated triggered events.\n    } else {\n      this.connecting = true;\n      this.connection.connect(this.auth.getToken());\n      this.IO       = new IO(this.connection);\n      this.FireLoop = new FireLoop(this.connection, this.models);\n      // Fire event for those subscribed \n      let s1: Subscription = this.connection.sharedObservables.sharedOnConnect.subscribe(() => {\n        console.log('Real-Time connection has been established');\n        this.connecting = false;\n        this.onReadySubject.next('connected');\n        let s2: Subscription = this.connection.sharedObservables.sharedOnDisconnect.subscribe(() => {\n          s1.unsubscribe();\n          s2.unsubscribe();\n        });\n      });\n    }\n    return this.sharedOnReady;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/core/real.time.ts","/* tslint:disable */\nexport * from './Job';\nexport * from './JobChange';\nexport * from './TpmPdaController';\nexport * from './GpsHistory';\nexport * from './Application';\nexport * from './Installation';\nexport * from './Notification';\nexport * from './Push';\nexport * from './Mobile_event';\nexport * from './SiteConfig';\nexport * from './DespatchToDriverMessages';\nexport * from './JseaDriverQuestions';\nexport * from './JseaDriverAnswers';\nexport * from './JseaDriverAnswersChange';\nexport * from './Photocontainer';\nexport * from './Image';\nexport * from './BarcodeHist';\nexport * from './BarcodeHistChange';\nexport * from './DeviceDiagnostics';\nexport * from './BaseModels';\nexport * from './FireLoopRef';\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/index.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { Job } from '../../models/Job';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Job` model.\n *\n * **Details**\n *\n * Logged Jobs\n */\n@Injectable()\nexport class JobApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Job` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Jobs\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id Job id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Job` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Jobs/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a set of deltas and conflicts since the given checkpoint.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `since` – `{number}` - Find deltas since this checkpoint\n   *\n   *  - `remoteChanges` – `{any}` - an array of change objects\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Job` object.)\n   * </em>\n   */\n  public diff(since: any = {}, remoteChanges: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Jobs/diff\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      remoteChanges: remoteChanges\n    };\n    let _urlParams: any = {};\n    if (typeof since !== 'undefined' && since !== null) _urlParams.since = since;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get the changes to a model since a given checkpoint.Provide a filter object to reduce the number of results returned.\n   *\n   * @param {number} since Only return changes since this checkpoint\n   *\n   * @param {object} filter Only include changes that match this filter\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Job` object.)\n   * </em>\n   */\n  public changes(since: any = {}, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Jobs/changes\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof since !== 'undefined' && since !== null) _urlParams.since = since;\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Create a checkpoint.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Job` object.)\n   * </em>\n   */\n  public checkpoint(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Jobs/checkpoint\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get the current checkpoint.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Job` object.)\n   * </em>\n   */\n  public currentCheckpoint(customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Jobs/checkpoint\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Create an update list from a delta list.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Job` object.)\n   * </em>\n   */\n  public createUpdates(deltas: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Jobs/create-updates\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      deltas: deltas\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Run multiple updates at once. Note: this is not atomic.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `updates` – `{any}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public bulkUpdate(updates: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Jobs/bulk-update\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof updates !== 'undefined' && updates !== null) _urlParams.updates = updates;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get the most recent change record for this instance.\n   *\n   * @param {any} id Model id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Job` object.)\n   * </em>\n   */\n  public findLastChange(id: any, customHeaders?: Function): Observable<Job[]> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Jobs/:id/changes/last\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<Job>) =>\n        instances.map((instance: Job) => new Job(instance))\n    ));\n  }\n\n  /**\n   * Update the properties of the most recent change record kept for this instance.\n   *\n   * @param {any} id Model id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of Change property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Job` object.)\n   * </em>\n   */\n  public updateLastChange(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Jobs/:id/changes/last\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get the Metadata for this Model...\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * For things like auto-generated forms...\n   */\n  public metadata(customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Jobs/metadata\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Job`.\n   */\n  public getModelName() {\n    return \"Job\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Job.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { JobChange } from '../../models/JobChange';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `JobChange` model.\n */\n@Injectable()\nexport class JobChangeApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JobChange` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JobChanges\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id JobChange id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JobChange` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JobChanges/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `JobChange`.\n   */\n  public getModelName() {\n    return \"JobChange\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/JobChange.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { TpmPdaController } from '../../models/TpmPdaController';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `TpmPdaController` model.\n *\n * **Details**\n *\n * Controlling Pda Device Management\n */\n@Injectable()\nexport class TpmPdaControllerApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `TpmPdaController` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/TpmPdaControllers\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id TpmPdaController id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `TpmPdaController` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/TpmPdaControllers/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Sends a command to a PDA\n   *\n   * @param {object} data Request data.\n   *\n   *  - `driver` – `{number}` - driver/PDA number\n   *\n   *  - `command` – `{string}` - the command to send e.g. dumpLocalStorage\n   *\n   *  - `params` – `{object}` - optional parameter object\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public sendCommandToPDA(driver: any, command: any, params: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/TpmPdaControllers/sendCommandToPDA/:driver\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof driver !== 'undefined' && driver !== null) _urlParams.driver = driver;\n    if (typeof command !== 'undefined' && command !== null) _urlParams.command = command;\n    if (typeof params !== 'undefined' && params !== null) _urlParams.params = params;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Sends a message to a driver\n   *\n   * @param {object} data Request data.\n   *\n   *  - `driver` – `{number}` - \n   *\n   *  - `message` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public sendMessageToDriver(driver: any, message: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/TpmPdaControllers/sendMessageToDriver/:driver\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof driver !== 'undefined' && driver !== null) _urlParams.driver = driver;\n    if (typeof message !== 'undefined' && message !== null) _urlParams.message = message;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `TpmPdaController`.\n   */\n  public getModelName() {\n    return \"TpmPdaController\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/TpmPdaController.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { Application } from '../../models/Application';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Application` model.\n */\n@Injectable()\nexport class ApplicationApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Application` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/applications\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id application id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Application` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/applications/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Application`.\n   */\n  public getModelName() {\n    return \"Application\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Application.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { Installation } from '../../models/Installation';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Installation` model.\n */\n@Injectable()\nexport class InstallationApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Find installations by application id\n   *\n   * @param {string} deviceType Device type\n   *\n   * @param {string} appId Application id\n   *\n   * @param {string} appVersion Application version\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Installation` object.)\n   * </em>\n   */\n  public findByApp(deviceType: any = {}, appId: any = {}, appVersion: any = {}, customHeaders?: Function): Observable<Installation> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/installations/byApp\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof deviceType !== 'undefined' && deviceType !== null) _urlParams.deviceType = deviceType;\n    if (typeof appId !== 'undefined' && appId !== null) _urlParams.appId = appId;\n    if (typeof appVersion !== 'undefined' && appVersion !== null) _urlParams.appVersion = appVersion;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instance: Installation) => new Installation(instance)));\n  }\n\n  /**\n   * Find installations by user id\n   *\n   * @param {string} deviceType Device type\n   *\n   * @param {string} userId User id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Installation` object.)\n   * </em>\n   */\n  public findByUser(deviceType: any = {}, userId: any = {}, customHeaders?: Function): Observable<Installation> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/installations/byUser\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof deviceType !== 'undefined' && deviceType !== null) _urlParams.deviceType = deviceType;\n    if (typeof userId !== 'undefined' && userId !== null) _urlParams.userId = userId;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instance: Installation) => new Installation(instance)));\n  }\n\n  /**\n   * Find installations by subscriptions\n   *\n   * @param {string} deviceType Device type\n   *\n   * @param {string} subscriptions Subscriptions\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Installation` object.)\n   * </em>\n   */\n  public findBySubscriptions(deviceType: any = {}, subscriptions: any = {}, customHeaders?: Function): Observable<Installation> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/installations/bySubscriptions\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof deviceType !== 'undefined' && deviceType !== null) _urlParams.deviceType = deviceType;\n    if (typeof subscriptions !== 'undefined' && subscriptions !== null) _urlParams.subscriptions = subscriptions;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instance: Installation) => new Installation(instance)));\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Installation` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/installations\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id installation id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Installation` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/installations/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Installation`.\n   */\n  public getModelName() {\n    return \"Installation\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Installation.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { Notification } from '../../models/Notification';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Notification` model.\n */\n@Injectable()\nexport class NotificationApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Notification` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/notifications\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id notification id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Notification` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/notifications/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Notification`.\n   */\n  public getModelName() {\n    return \"Notification\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Notification.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { Push } from '../../models/Push';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Push` model.\n */\n@Injectable()\nexport class PushApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Send a push notification by installation query\n   *\n   * @param {object} deviceQuery Installation query\n   *\n   * @param {object} data Request data.\n   *\n   *  - `notification` – `{object}` - Notification\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Push` object.)\n   * </em>\n   */\n  public notifyByQuery(deviceQuery: any = {}, notification: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Push\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      notification: notification\n    };\n    let _urlParams: any = {};\n    if (typeof deviceQuery !== 'undefined' && deviceQuery !== null) _urlParams.deviceQuery = deviceQuery;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Push`.\n   */\n  public getModelName() {\n    return \"Push\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Push.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { Mobile_event } from '../../models/Mobile_event';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Mobile_event` model.\n */\n@Injectable()\nexport class Mobile_eventApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n \n  /**\n   * Send a mobile event to the readPDA server process\n   *\n   * @param {object} data Request data.\n   *\n   *  - `payload` – `{object}` - Mobile event payload object\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public sendEvent(payload: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/mobile_event\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof payload !== 'undefined' && payload !== null) _urlParams.payload = payload;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Mobile_event`.\n   */\n  public getModelName() {\n    return \"Mobile_event\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Mobile_event.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { SiteConfig } from '../../models/SiteConfig';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `SiteConfig` model.\n */\n@Injectable()\nexport class SiteConfigApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiteConfig` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiteConfigs\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id SiteConfig id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `SiteConfig` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/SiteConfigs/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `SiteConfig`.\n   */\n  public getModelName() {\n    return \"SiteConfig\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/SiteConfig.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { DespatchToDriverMessages } from '../../models/DespatchToDriverMessages';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `DespatchToDriverMessages` model.\n */\n@Injectable()\nexport class DespatchToDriverMessagesApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DespatchToDriverMessages` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DespatchToDriverMessages\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id DespatchToDriverMessages id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `DespatchToDriverMessages` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/DespatchToDriverMessages/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `DespatchToDriverMessages`.\n   */\n  public getModelName() {\n    return \"DespatchToDriverMessages\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/DespatchToDriverMessages.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { JseaDriverAnswers } from '../../models/JseaDriverAnswers';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `JseaDriverAnswers` model.\n */\n@Injectable()\nexport class JseaDriverAnswersApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JseaDriverAnswers` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverAnswers\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id JseaDriverAnswers id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JseaDriverAnswers` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverAnswers/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a set of deltas and conflicts since the given checkpoint.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `since` – `{number}` - Find deltas since this checkpoint\n   *\n   *  - `remoteChanges` – `{any}` - an array of change objects\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JseaDriverAnswers` object.)\n   * </em>\n   */\n  public diff(since: any = {}, remoteChanges: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverAnswers/diff\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      remoteChanges: remoteChanges\n    };\n    let _urlParams: any = {};\n    if (typeof since !== 'undefined' && since !== null) _urlParams.since = since;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get the changes to a model since a given checkpoint.Provide a filter object to reduce the number of results returned.\n   *\n   * @param {number} since Only return changes since this checkpoint\n   *\n   * @param {object} filter Only include changes that match this filter\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JseaDriverAnswers` object.)\n   * </em>\n   */\n  public changes(since: any = {}, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverAnswers/changes\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof since !== 'undefined' && since !== null) _urlParams.since = since;\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Create a checkpoint.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JseaDriverAnswers` object.)\n   * </em>\n   */\n  public checkpoint(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverAnswers/checkpoint\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get the current checkpoint.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JseaDriverAnswers` object.)\n   * </em>\n   */\n  public currentCheckpoint(customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverAnswers/checkpoint\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Create an update list from a delta list.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JseaDriverAnswers` object.)\n   * </em>\n   */\n  public createUpdates(deltas: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverAnswers/create-updates\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      deltas: deltas\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Run multiple updates at once. Note: this is not atomic.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `updates` – `{any}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public bulkUpdate(updates: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverAnswers/bulk-update\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof updates !== 'undefined' && updates !== null) _urlParams.updates = updates;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get the most recent change record for this instance.\n   *\n   * @param {any} id Model id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JseaDriverAnswers` object.)\n   * </em>\n   */\n  public findLastChange(id: any, customHeaders?: Function): Observable<JseaDriverAnswers[]> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverAnswers/:id/changes/last\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<JseaDriverAnswers>) =>\n        instances.map((instance: JseaDriverAnswers) => new JseaDriverAnswers(instance))\n    ));\n  }\n\n  /**\n   * Update the properties of the most recent change record kept for this instance.\n   *\n   * @param {any} id Model id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of Change property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JseaDriverAnswers` object.)\n   * </em>\n   */\n  public updateLastChange(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverAnswers/:id/changes/last\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `JseaDriverAnswers`.\n   */\n  public getModelName() {\n    return \"JseaDriverAnswers\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/JseaDriverAnswers.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { JseaDriverAnswersChange } from '../../models/JseaDriverAnswersChange';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `JseaDriverAnswersChange` model.\n */\n@Injectable()\nexport class JseaDriverAnswersChangeApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JseaDriverAnswersChange` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverAnswersChanges\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id JseaDriverAnswersChange id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `JseaDriverAnswersChange` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/JseaDriverAnswersChanges/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `JseaDriverAnswersChange`.\n   */\n  public getModelName() {\n    return \"JseaDriverAnswersChange\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/JseaDriverAnswersChange.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { Photocontainer } from '../../models/Photocontainer';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Photocontainer` model.\n */\n@Injectable()\nexport class PhotocontainerApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Photocontainer` object.)\n   * </em>\n   */\n  public getContainers(customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/photocontainers\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Photocontainer` object.)\n   * </em>\n   */\n  public createContainer(options: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/photocontainers\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      options: options\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {string} container \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `` – `{}` - \n   */\n  public destroyContainer(container: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/photocontainers/:container\";\n    let _routeParams: any = {\n      container: container\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {string} container \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Photocontainer` object.)\n   * </em>\n   */\n  public getContainer(container: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/photocontainers/:container\";\n    let _routeParams: any = {\n      container: container\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {string} container \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Photocontainer` object.)\n   * </em>\n   */\n  public getFiles(container: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/photocontainers/:container/files\";\n    let _routeParams: any = {\n      container: container\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {string} container \n   *\n   * @param {string} file \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Photocontainer` object.)\n   * </em>\n   */\n  public getFile(container: any, file: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/photocontainers/:container/files/:file\";\n    let _routeParams: any = {\n      container: container,\n      file: file\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {string} container \n   *\n   * @param {string} file \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `` – `{}` - \n   */\n  public removeFile(container: any, file: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/photocontainers/:container/files/:file\";\n    let _routeParams: any = {\n      container: container,\n      file: file\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {string} container \n   *\n   * @param {object} data Request data.\n   *\n   *  - `req` – `{object}` - \n   *\n   *  - `res` – `{object}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `result` – `{object}` - \n   */\n  public upload(container: any, req: any = {}, res: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/photocontainers/:container/upload\";\n    let _routeParams: any = {\n      container: container\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * <em>\n         * (The remote method definition does not provide any description.)\n         * </em>\n   *\n   * @param {string} container \n   *\n   * @param {string} file \n   *\n   * @param {object} req \n   *\n   * @param {object} res \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public download(container: any, file: any, req: any = {}, res: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/photocontainers/:container/download/:file\";\n    let _routeParams: any = {\n      container: container,\n      file: file\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Photocontainer` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/photocontainers\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id photocontainer id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Photocontainer` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/photocontainers/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Photocontainer`.\n   */\n  public getModelName() {\n    return \"Photocontainer\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Photocontainer.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { Image } from '../../models/Image';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Image` model.\n */\n@Injectable()\nexport class ImageApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Image` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/images\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id image id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Image` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/images/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Image`.\n   */\n  public getModelName() {\n    return \"Image\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/Image.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { BarcodeHist } from '../../models/BarcodeHist';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `BarcodeHist` model.\n */\n@Injectable()\nexport class BarcodeHistApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `BarcodeHist` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/BarcodeHists\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id BarcodeHist id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `BarcodeHist` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/BarcodeHists/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get a set of deltas and conflicts since the given checkpoint.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `since` – `{number}` - Find deltas since this checkpoint\n   *\n   *  - `remoteChanges` – `{any}` - an array of change objects\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `BarcodeHist` object.)\n   * </em>\n   */\n  public diff(since: any = {}, remoteChanges: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/BarcodeHists/diff\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      remoteChanges: remoteChanges\n    };\n    let _urlParams: any = {};\n    if (typeof since !== 'undefined' && since !== null) _urlParams.since = since;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get the changes to a model since a given checkpoint.Provide a filter object to reduce the number of results returned.\n   *\n   * @param {number} since Only return changes since this checkpoint\n   *\n   * @param {object} filter Only include changes that match this filter\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `BarcodeHist` object.)\n   * </em>\n   */\n  public changes(since: any = {}, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/BarcodeHists/changes\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof since !== 'undefined' && since !== null) _urlParams.since = since;\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Create a checkpoint.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `BarcodeHist` object.)\n   * </em>\n   */\n  public checkpoint(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/BarcodeHists/checkpoint\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get the current checkpoint.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `BarcodeHist` object.)\n   * </em>\n   */\n  public currentCheckpoint(customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/BarcodeHists/checkpoint\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Create an update list from a delta list.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `BarcodeHist` object.)\n   * </em>\n   */\n  public createUpdates(deltas: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/BarcodeHists/create-updates\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      deltas: deltas\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Run multiple updates at once. Note: this is not atomic.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `updates` – `{any}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public bulkUpdate(updates: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/BarcodeHists/bulk-update\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof updates !== 'undefined' && updates !== null) _urlParams.updates = updates;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Get the most recent change record for this instance.\n   *\n   * @param {any} id Model id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `BarcodeHist` object.)\n   * </em>\n   */\n  public findLastChange(id: any, customHeaders?: Function): Observable<BarcodeHist[]> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/BarcodeHists/:id/changes/last\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result.pipe(map((instances: Array<BarcodeHist>) =>\n        instances.map((instance: BarcodeHist) => new BarcodeHist(instance))\n    ));\n  }\n\n  /**\n   * Update the properties of the most recent change record kept for this instance.\n   *\n   * @param {any} id Model id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of Change property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `BarcodeHist` object.)\n   * </em>\n   */\n  public updateLastChange(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/BarcodeHists/:id/changes/last\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `BarcodeHist`.\n   */\n  public getModelName() {\n    return \"BarcodeHist\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/BarcodeHist.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { BarcodeHistChange } from '../../models/BarcodeHistChange';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `BarcodeHistChange` model.\n */\n@Injectable()\nexport class BarcodeHistChangeApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(HttpClient) protected http: HttpClient,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `BarcodeHistChange` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/BarcodeHistChanges\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id BarcodeHistChange id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `BarcodeHistChange` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/BarcodeHistChanges/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `BarcodeHistChange`.\n   */\n  public getModelName() {\n    return \"BarcodeHistChange\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/BarcodeHistChange.ts","import { Injectable } from '@angular/core';\r\n/*\r\n  Generated class for the WindowRefServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n\r\n    REf:https://stackoverflow.com/questions/34177221/angular2-how-to-inject-window-into-an-angular2-service\r\n*/\r\n\r\nfunction getWindow(): any {\r\n  return window;\r\n}\r\n@Injectable()\r\nexport class WindowRefServiceProvider {\r\n\r\n  constructor() {\r\n    //console.log('Hello WindowRefServiceProvider Provider');\r\n  }\r\n\r\n  get nativeWindow(): any {\r\n    return getWindow();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/window-ref-service/window-ref-service.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { AlertController, Platform } from 'ionic-angular';\r\n\r\nimport { GpsServiceProvider } from '../gps-service/gps-service';\r\nimport { EventServiceProvider } from '../event-service/event-service';\r\n\r\n\r\n/*\r\n  Generated class for the ExitServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n\r\n    Previously Named : appService\r\n*/\r\n@Injectable()\r\nexport class ExitServiceProvider {\r\n\r\n  constructor(private eventService: EventServiceProvider,\r\n    private gpsService: GpsServiceProvider, public alert: AlertController,\r\n    public platform: Platform) {\r\n    //console.log('Hello ExitServiceProvider Provider');\r\n  }\r\n\r\n  exitTplusMobile() {\r\n    let alert = this.alert.create({\r\n      title: 'Confirm',\r\n      message: 'This will exit the application and stop sending GPS.Do you want to exit?',\r\n      buttons: [{\r\n        text: \"exit?\",\r\n        handler: () => { this.exitApp() }\r\n      }, {\r\n        text: \"Cancel\",\r\n        role: 'cancel'\r\n      }]\r\n    })\r\n    alert.present();\r\n\r\n  };//exitTplusMobile() ends here\r\n\r\n\r\n  exitApp() {\r\n    this.gpsService.setSendGps(false);\r\n    this.eventService.sendMsg('LOGOFF', '');\r\n    // NOTE - it is not possible to programatically exit an iOS app see:\r\n    // http://stackoverflow.com/questions/14422908/iphone-does-not-recognize-phonegaps-navigator-app\r\n    // https://groups.google.com/forum/?fromgroups=#!topic/phonegap/XjTm0ua4uOY\r\n\r\n    // NOTE - another option: ionic.Platform.exitApp()\r\n\r\n    // LT - TODO - NOTE - this does NOT close/exit the app on an android device\r\n    // LT - further note - it puts the app into background which apparently is the\r\n    // appropriate thing to do.  However this means that our GPS etc. updates keep\r\n    // going???.\r\n    this.platform.exitApp();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/exit-service/exit-service.ts","import { Injectable } from '@angular/core';\r\n\r\n\r\n\r\nimport { AlertController } from 'ionic-angular';\r\n\r\nimport { Device } from '@ionic-native/device';\r\nimport { Push, PushObject } from '@ionic-native/push';\r\nimport { MediaObject } from '@ionic-native/media';\r\n\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { PlatformReadyServiceProvider } from '../platform-ready-service/platform-ready-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { UtilServiceProvider } from '../util-service/util-service';\r\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\r\n\r\nimport { InstallationApi } from '../../../shared/sdk/services';///shared/sdk/services';\r\nimport { ExitServiceProvider } from '../exit-service/exit-service';\r\nimport { SqliteServiceProvider } from '../../providers/sqlite-service/sqlite-service';\r\n\r\n/*\r\n  Generated class for the PushServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n\r\n@Injectable()\r\nexport class PushServiceProvider {\r\n  pushObject: PushObject;\r\n\r\n  /* \"senderID\" is \"Project Number\" from Google Developers Console (https://console.firebase.google.com)\r\n    NOTE that there is also a server component involved - see API key in /app/strongloop/OSC-API/server/gcm_config.js */\r\n\r\n  androidConfig = {\r\n    senderID: \"\"\r\n  };\r\n\r\n  iosConfig = {\r\n    badge: true,\r\n    sound: true,\r\n    alert: true\r\n  };\r\n  browserConfig = {\r\n    pushServiceURL: 'http://push.api.phonegap.com/v1/push'\r\n  };\r\n\r\n  winConfig = {};\r\n\r\n  pushOptions: any = {\r\n    android: this.androidConfig,\r\n    ios: this.iosConfig,\r\n    windows: this.winConfig,\r\n    browser: this.browserConfig\r\n  };\r\n\r\n  registered = false;\r\n  already_registered = false;\r\n\r\n  notificationSnd: MediaObject;\r\n  nagPopup;\r\n  nagInterval;\r\n  already_nagging = false;\r\n  lastSoundTime = Math.round(new Date().getTime() / 1000);\t\t// init when service instantiates\r\n  newSoundTime;\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'PushServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n\r\n  constructor(private pdaParams: PdaparamsServiceProvider, public storage: SqliteServiceProvider,\r\n    private logger: LogServiceProvider, private platformReady: PlatformReadyServiceProvider,\r\n    private device: Device, private push: Push, private installationApi: InstallationApi,\r\n    public alertCtrl: AlertController, private sharedService: SharedServiceProvider,\r\n    private utilService: UtilServiceProvider, private siteConfig: SiteconfigServiceProvider) {\r\n    //console.log('Hello PushServiceProvider Provider');\r\n  }\r\n\r\n\r\n  registerForPush() {\r\n    //console.log(\"Register for push called!\");\r\n    var pda_sender_id = this.siteConfig.getSiteConfigValue('PDA_SENDER_ID');\r\n\r\n    if (pda_sender_id) {\r\n      this.pushOptions.android.senderID = pda_sender_id;\r\n    }\r\n\r\n    this.log.debug('registerForPush: isready:' + this.platformReady.isPlatformReady() + ', driverId:' + this.pdaParams.driverId + ', registered:' + this.registered + ', sender id:' + pda_sender_id);\r\n\r\n    //If Device ready , driver > 0 and we are not already registered then do it\r\n    if (this.platformReady.isPlatformReady() && this.pdaParams.driverId > 0 && this.registered == false) {\r\n      // Determine platform e.g. 'Android', 'iOS'\r\n      var platform = this.device.platform;\r\n      if (platform != null) {\r\n        var deviceType = platform.toLowerCase();\t\t\t// lowercase for loopback installations collection\r\n        var mycurrent_drivernum = this.pdaParams.driverId;\r\n        // initialise the push plugin - phonegap-plugin-push\r\n        this.pushObject = this.push.init(this.pushOptions);\r\n\r\n        this.pushObject.on('registration').subscribe((resdata: any) => {\r\n          var token = resdata.registrationId;\r\n          var msg = 'CordovaPushregistered for Driver # : ' + mycurrent_drivernum + ' with token:' + token;\r\n          this.log.info(msg);\r\n          //Init an Object to insert into installation table if our filter below gets empty or filter \r\n          // returns not the same as the current token just got from Google\r\n          var installation_object = {\r\n            \"appId\": \"osc-push-tpm2\",\r\n            \"userId\": mycurrent_drivernum,\r\n            \"deviceToken\": token,\r\n            \"deviceType\": deviceType,\r\n            \"pdaVersion\": this.pdaParams.getAppVersion()\r\n          };\r\n          var filter = { \"where\": { \"deviceToken\": token } };\r\n          this.log.debug(platform + 'CordovaPush.register: check for current registration, filter:' + JSON.stringify(filter));\r\n          this.installationApi.find(filter).subscribe((data: any) => {\r\n            // Try and ensure that there only ever one row for a driver or a token\r\n            // TODO - remove any registrations for this token but NOT for this driver\r\n            // TODO - remove any registrations for this driver but NOT for this token\r\n            // Then register current token for current driver\r\n            if (this.utilService.isEmpty(data) || data === null) {\t\t// no current registration found\r\n              this.log.info(platform + 'CordovaPush.register: no current registration found in installations, saving...');\r\n              //This registers the Google Token with Strongloop and our Database\r\n              this.installationApi.create(installation_object).subscribe(res => {\r\n                // Save data to local storage (it also gets put into $rootScope below)\r\n                localStorage.setItem('osc-push-credentials', JSON.stringify(installation_object));\r\n                //if (!this.sharedService.desktopTesting) {\r\n                  this.storage.set('osc-push-credentials', JSON.stringify(installation_object)).then((res) => {\r\n                    if (res)\r\n                      console.log(\"osc-push-credentials are set\");\r\n                    else\r\n                      console.log(\"osc-push-credentials is not set\");\r\n                  });\r\n                //}\r\n\r\n                this.log.info(\"Sqlite Storage : Setting osc-push-credentials : \" + JSON.stringify(installation_object));\r\n                var alertPopup = this.alertCtrl.create({\r\n                  title: 'Device registered',\r\n                  message: token,\r\n                  buttons: ['Ok'],\r\n                  enableBackdropDismiss: false\r\n                });\r\n                alertPopup.present();\r\n\r\n              }, (error) => {\r\n                this.log.error(platform + 'CordovaPush.register: failed error:' + error);\r\n              });\r\n            }\r\n            else {\r\n\r\n              //Call the createorpatch API\r\n              /* this.installationApi.patchOrCreate(installation_object).subscribe((data)=>{\r\n                this.log.debug(\"The installationApi.patchOrCreate returned:\"+data);\r\n              }); */\r\n              var id = data[0].id;\r\n              this.installationApi.replaceById(id, installation_object).subscribe((result) => {\r\n                this.log.debug(\"The installationApi.replaceById returned:\" + JSON.stringify(result));\r\n              });\r\n\r\n              this.log.info(platform + ':CordovaPush.register: current registration already found in installations');\r\n              this.log.debug(platform + ':CordovaPush.register: data:' + JSON.stringify(data));\r\n            }\r\n            this.registered = true;\t\t// we've either just registered or we were already registered\r\n          });\r\n        });\r\n\r\n\r\n        /*Job Cancel notification*/\r\n        this.pushObject.on('notification').subscribe((notification: any) => {\r\n\r\n\r\n\r\n          this.log.debug(platform + 'CordovaPush:notificationReceived:' + JSON.stringify(notification));\r\n          var payload = notification.additionalData.payload || {};\r\n\r\n          /**\r\n           * Riyaz: Store the last 5 UUIDs in the local storage and compare them with the latest UUID.\r\n           * This solves the issue of duplicate execution of notifications.\r\n           */\r\n          //Get the new uuid\r\n          var new_uuid = payload.uuid;\r\n          this.log.debug(\"New UUID received is:\" + new_uuid);\r\n          this.log.debug(\"Contents of the UUID circular array of length 5 is:\" + localStorage.getItem('uuid'));\r\n\r\n          var uuid = [];\r\n          //if uuid is null, store new uuid and continue\r\n          if (!localStorage.getItem('uuid')) {\r\n            uuid.push(new_uuid);\r\n            //if (!this.sharedService.desktopTesting) {\r\n              this.storage.set('uuid', JSON.stringify(uuid)).then((res) => {\r\n                if (res)\r\n                  console.log(\"uuid is set\");\r\n                else\r\n                  console.log(\"uuid is not set\");\r\n              });\r\n            //}\r\n\r\n            this.log.info(\"Sqlite Storage : Setting UUID : \" + JSON.stringify(uuid));\r\n\r\n            localStorage.setItem('uuid', JSON.stringify(uuid));\r\n\r\n          }\r\n          else {\r\n            uuid = JSON.parse(localStorage.getItem('uuid'));\r\n            //if new_uuid has already been processed, exit out...\r\n            if (uuid.indexOf(new_uuid) != -1) {\r\n              this.log.debug(\" UUIDs are equal, exiting out ..... :\");\r\n              return;\r\n            } else {\r\n              //If the circular array of length 5, is full, chip out the oldest element\r\n              if ((JSON.parse(localStorage.getItem('uuid'))).length >= 5)\r\n                uuid.splice(0, 1);\r\n\r\n              //Push the new uuid to the circular array\r\n              uuid.push(new_uuid);\r\n              //if (!this.sharedService.desktopTesting) {\r\n                this.storage.set('uuid', JSON.stringify(uuid)).then((res) => {\r\n                  if (res)\r\n                    console.log(\"uuid is set\");\r\n                  else\r\n                    console.log(\"uuid is not set\");\r\n                });\r\n              //}\r\n              this.log.info(\"Sqlite Storage : Setting UUID : \" + JSON.stringify(uuid));\r\n              localStorage.setItem('uuid', JSON.stringify(uuid));\r\n\r\n            }\r\n          } /*UUID comparison ends*/\r\n\r\n\r\n          // If there is a payload type we use that as the broadcast event with the supplied payload\r\n          if (payload.type) {\r\n            // Add platform to payload\r\n            payload.platform = platform;\t\t\t// event handler may need to know this\r\n\r\n            // If a sound has been provided add to payload (normally iOS)\r\n            if (notification.sound)\r\n              payload.sound = notification.sound;\r\n\r\n            this.log.debug(platform + 'CordovaPush:about to broadcast:' + payload.type + ':payload:' + JSON.stringify(payload));\r\n\r\n            //if notification.additionalData.payload.type=\"CANCEL\", then call next on CANCEL subject.\r\n            if (payload.type === \"CANCEL\") {\r\n              this.sharedService.CANCEL.next(payload);\r\n            }\r\n            //if notification.additionalData.payload.type=\"NEWJOB\", then call next on NEWJOB subject.\r\n            if (payload.type === \"NEWJOB\") {\r\n              this.sharedService.NEWJOB.next(payload);\r\n            }\r\n\r\n            //if notification.additionalData.payload.type=\"JOBUPDATE\", then call next on JOBUPDATE subject.\r\n            if (payload.type === \"JOBUPDATE\") {\r\n              this.sharedService.JOBUPDATE.next(payload);\r\n            }\r\n\r\n            //if notification.additionalData.payload.type=\"RESUME\", then call next on RESUME subject.\r\n            if (payload.type === \"RESUME\") {\r\n              this.sharedService.RESUME.next(payload);\r\n            }\r\n            //if notification.additionalData.payload.type=\"DESTROY\", then call next on DESTROY subject.\r\n            if (payload.type === \"DESTROY\") {\r\n              this.sharedService.DESTROY.next(payload);\r\n            }\r\n            if (payload.type === \"messageToDriver\") {\r\n              this.sharedService.messageToDriver.next(payload);\r\n            }\r\n\r\n            if (payload.type === \"commandToPDA\") {\r\n              this.sharedService.commandToPDA.next(payload);\r\n            }\r\n          }\r\n\r\n          else {\r\n            // no payload type provided simply broadcast a received event with the full notification\r\n            // add platform to notification so we can check in the event handler\r\n            notification.platform = platform;\r\n\r\n            this.log.debug(platform + 'CordovaPush:about to broadcast:' + 'pushNotificationReceived');\r\n\r\n            // $rootScope.$broadcast('pushNotificationReceived', notification);\t// broadcast to the world\r\n            this.sharedService.pushNotificationReceived.next(notification);\r\n          }\r\n\r\n        });\r\n\r\n        this.pushObject.on('error').subscribe(error =>\r\n          this.log.error(platform + ':CordovaPush :errorOccurred:' + JSON.stringify(error)));\r\n      }// if (platform != null)  ends here\r\n    } //isPlatformReady() ends here\r\n  }///registerForPush() ends here\r\n\r\n\r\n\r\n  getIsRegistered() {\r\n    return this.registered;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/push-service/push-service.ts","import { Injectable } from '@angular/core';\nimport { LaunchNavigator } from '@ionic-native/launch-navigator';\n\nimport { LogServiceProvider } from '../log-service/log-service';\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\nimport { SharedServiceProvider } from '../shared-service/shared-service';\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\nimport { PlatformReadyServiceProvider } from '../platform-ready-service/platform-ready-service';\n/*\n  Generated class for the NavigationServiceProvider provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular DI.\n*/\n\n\n@Injectable()\nexport class NavigationServiceProvider {\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'NavigationServiceProvider' };\n  log = this.logger.getInstance(this.logParams);\n  isReady = false;\n  moduleInstalled = false;\n  SITE_CONFIG_LOADED: boolean = false;\n  navigationServAllowed = false;\n  //myNotReadyErr = \"Sorry Cordova Is Not ready, until this occurs cannot use Navigator Plugin\";\n  myNotModuleInstalled = \"Sorry this module is not installed, please contact your office\";\n  myJobNumber = 0;\n  myJobDate = 0;\n  myaddress = '';\n\n  constructor(\n    private logger: LogServiceProvider,\n    private pdaParams: PdaparamsServiceProvider,\n    private platformReadyService: PlatformReadyServiceProvider,\n    private sharedService: SharedServiceProvider,\n    private siteConfig: SiteconfigServiceProvider,\n    public navigatorPlugin: LaunchNavigator) {\n\n    var lstr = 'Constructing NavigationServiceProvider Provider';\n    // console.log(lstr);\n    this.log.debug(lstr);\n\n    //this.sharedService.SITE_CONFIG_LOADED.subscribe(SITE_CONFIG_LOADED => {\n    this.prepNavigation();\n  }\n\n  prepNavigation = () => {\n    if (localStorage.getItem('SITE_CONFIG_LOADED')) {\n      //if (localStorage.getItem('SITE_CONFIG_LOADED')) {\n      //this.log.debug('NavigationServiceProvider SITE_CONFIG_LOADED Event triggered');\n      if (this.siteConfig.getSiteConfigValue('PDA_REQ_NAVIGATION') == 'Y') {\n        this.moduleInstalled = true;\n\n        this.navigationServAllowed = true;\n        //this.log.debug(\"navigationServAllowed is NOW TRUE\");\n        this.isReady = true;\n        // }\n      }\n      else {\n        // this.log.debug(\"navigationServAllowed:\" + this.myNotModuleInstalled);\n        //alert(this.myNotModuleInstalled);\n      }\n    }\n  }\n\n  isRequired = function () {\n    return this.isReady;//this.myNotModuleInstalled;\n  }\n\n  isModuleInstalled = function () {\n    return this.moduleInstalled;\n  }\n\n\n  registerJobDetails = function (jobnum, jobdate, address) {\n    //this.log.debug(\"Registering jobDetails num \" + jobnum + \" Date \" + jobdate + ' Address = ' + address);\n    this.JobNumber = jobnum;\n    this.JobDate = jobdate;\n    this.myaddress = address;\n  };\n\n  onSuccessCallback = function () {\n    //navigator.notification.alert(\"Successfully launched navigator\");\n    this.log.debug(\"Successfully launched navigator for \");\n  };\n\n  onErrorCallback = function (errMsg) {\n    this.log.debug(\"Failed to  launch navigator error = \" + errMsg);\n  };\n  clearUserChoice = function () {\n\n    this.log.debug(\"User wants Wants to clear preferred app\");\n\n    if (!this.navigationServAllowed) {\n      //alert(this.myNotModuleInstalled);\n      this.log.debug(this.myNotModuleInstalled);\n      return;\n    }\n\n    /* this.navigatorPlugin.appSelection.userChoice.get(function (app) {\n      this.log.debug(\"User preferred app currently is: \" + this.navigatorPlugin.getAppDisplayName(app));\n    });\n */\n\n    this.navigatorPlugin.appSelection.userChoice.clear(function () {\n      this.log.debug(\"Wants to clear app ,so now preferred app is cleared\");\n    });\n\n    alert(\"Your navigator choice has been cleared, you will be prompted the next time you decide to navigate\");\n  };\n\n\n  navigate = (deststr) => {\n    this.log.debug('Navigate: Inside navigate() with deststr:' + deststr);\n\n    this.prepNavigation();\n    this.log.debug('Navigate: Returned from prepNavigation() with:::');\n    this.log.debug('Navigate: this.moduleInstalled::' + this.moduleInstalled);\n    this.log.debug('Navigate: this.navigationServAllowed::' + this.navigationServAllowed);\n    this.log.debug('Navigate: this.isReady::' + this.isReady);\n\n\n    if (!deststr) {\n      //navigator.notification. alert(\"A destination must be specified\");\n      // alert(\"A destination must be specified\");\n      this.log.debug(\"A destination must be specified\");\n      return;\n    }\n\n    if (this.isReady) {\n      this.log.debug('Navigate: inside this.isReady');\n      this.log.debug('Navigate: Value of this.navigatorPlugin::' + this.navigatorPlugin);\n      this.log.debug('Navigate: ::this.navigatorPlugin.APP::' + this.navigatorPlugin.APP);\n      \n\n      this.navigatorPlugin.navigate(deststr, {\n        start: \"\",\n        enableDebug: true\n      }).then(\n        success => alert('Launched navigator'),\n        error => alert('Error launching navigator: ' + error)\n      );\n\n      /* .then(success =>\n              this.log.debug('navigatorPlugin.navigate success::'),\n              error =>\n                this.log.error('navigatorPlugin.navigate error::' + error)\n            ); */\n    }\n    else {\n      //alert(\"cordovaReady.isDeviceReady = false, cant use Navigator Plugin\");\n      this.log.debug(\"cordovaReady.isDeviceReady = false, cant use Navigator Plugin\");\n    }\n  };\n\n}\n\n\n//\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/navigation-service/navigation-service.ts","\r\nimport { Component } from '@angular/core';\r\nimport { App, Platform, AlertController } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { LoopBackConfig } from '../../shared/sdk';\r\ndeclare const lbclient: any;\r\n\r\nimport { BaseServiceProvider } from '../providers/base-service/base-service';\r\nimport { SiteconfigServiceProvider } from '../providers/siteconfig-service/siteconfig-service';\r\nimport { ConfigServiceProvider } from '../providers/config-service/config-service';\r\nimport { SharedServiceProvider } from '../providers/shared-service/shared-service';\r\nimport { SodServiceProvider } from '../providers/sod-service/sod-service';\r\nimport { CustomerconnServiceProvider } from '../providers/customerconn-service/customerconn-service'\r\nimport { PdaparamsServiceProvider } from '../providers/pdaparams-service/pdaparams-service';\r\nimport { ConnectivityMonitorProvider } from '../providers/connectivity-monitor/connectivity-monitor';\r\nimport { MessageServiceProvider } from '../providers/message-service/message-service';\r\nimport { JseaServiceProvider } from '../providers/jsea-service/jsea-service';\r\nimport { ImageServiceProvider } from '../providers/image-service/image-service';\r\nimport { DeviceDiagnosticServiceProvider } from '../providers/device-diagnostic-service/device-diagnostic-service';\r\nimport { SqliteServiceProvider } from '../providers/sqlite-service/sqlite-service';\r\nimport { LogServiceProvider } from '../providers/log-service/log-service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\n\r\nexport class MyApp {\r\n\r\n  allowed: boolean = false;\r\n  connDetails;\r\n  userId;\r\n  result;\r\n  Job = lbclient.models.LocalJob;\r\n  rootPage: any;\r\n  startTime;\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'app.component.ts' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  constructor(public app: App, public storage: SqliteServiceProvider, public statusBar: StatusBar,\r\n    private alertCtrl: AlertController, public splashScreen: SplashScreen,\r\n    private pdaParams: PdaparamsServiceProvider, private platform: Platform,\r\n    private connectivityMonitor: ConnectivityMonitorProvider,\r\n    private base: BaseServiceProvider, private sharedService: SharedServiceProvider,\r\n    private customerConn: CustomerconnServiceProvider, private siteConfig: SiteconfigServiceProvider,\r\n    private configService: ConfigServiceProvider, private sodService: SodServiceProvider,\r\n    private messageService: MessageServiceProvider, private jseaService: JseaServiceProvider,\r\n    private imageService: ImageServiceProvider,\r\n    private deviceDiagnosticService: DeviceDiagnosticServiceProvider,\r\n    private logger: LogServiceProvider) {\r\n\r\n    console.log(\"Hello app.component.ts\");\r\n\r\n    (async () => {\r\n\r\n      await this.platform.ready().then((readySource) => {\r\n        console.log('Platform ready from ::', readySource);\r\n        // Platform now ready, execute any required native code       \r\n\t\t//\r\n\t\t// NOTE - logging in this component may well be logged as driver 0 so be aware\r\n\t\tthis.log.info(\"constructor\");\r\n      });\r\n\r\n\r\n      //0. Make sure the sqlite storage is opened and ready for work\r\n      if (!this.sharedService.desktopTesting) {\r\n\r\n        if (!this.sharedService.isDbOpen) {\r\n          await this.storage.opendbOnDeviceReady().then((res: boolean) => {\r\n            this.sharedService.isDbOpen = res;\r\n            console.log(\"this.sharedService.isDbOpen in the app.component.ts::\" + this.sharedService.isDbOpen);\r\n            this.log.info(\"this.sharedService.isDbOpen in the app.component.ts::\" + this.sharedService.isDbOpen);\r\n          });\r\n        }\r\n      }\r\n\r\n\r\n      //1.Is the user logged in?\r\n      //2. No,the user is not logged in. \r\n      if (!(localStorage.getItem('login'))) {\r\n        console.log('There is no login available in local storage. SG CHANGE');\r\n        this.log.info('There is no login available in local storage. SG CHANGE');\r\n        var loginVar;\r\n        //2.1. Check if it is available in the sqlite db    \r\n        if (!this.sharedService.desktopTesting) {\r\n\r\n          /****** SG CHANGE TO HAVE a TEST for IOS *****/\r\n          await this.storage.get(\"login\").then((val) => {\r\n            if (val) {\r\n              loginVar = val;\r\n              console.log('There is a login available in sqlite storage.');\r\n              this.log.info('There is a login available in sqlite storage.');\r\n            }\r\n            else {\r\n              loginVar = null;\r\n              console.log('There is NO login available in sqlite storage.');\r\n              this.log.info('There is NO login available in sqlite storage.');\r\n            }\r\n\r\n            this.sharedService.localStorageZapped = loginVar;\r\n          });\r\n        }\r\n\r\n        //2.2. Is the localstorage zapped?\r\n        if (this.sharedService.localStorageZapped) {\r\n          console.log('LocalStorage has been zapped!!');\r\n          /*\r\n          * 2.3 If yes,localstorage has been zapped, retrive all variables from sqlite and write to localstorage \r\n          * */\r\n          localStorage.setItem('login', loginVar);\r\n\r\n          console.log('LocalStorage has been zapped, so we copy the contents of SqliteStorage to LocalStorage.');\r\n          this.log.info('LocalStorage has been zapped, so we copy the contents of SqliteStorage to LocalStorage.');\r\n          await this.storage.getAndSetToLocalStorage().then((val: any) => {\r\n            //Also, set firstlogin to false and redirecting to index.html to sync with lbclient\r\n            localStorage.setItem('firstlogin', 'false');\r\n            document.location.href = 'index.html';\r\n            return;\r\n\r\n          });\r\n        }\r\n\r\n        //2.4. localstorage is not zapped.\r\n        //\r\n        else {\r\n          console.log('LocalStorage has NOT been zapped, so we are redirected to the login page.');\r\n          this.log.info('LocalStorage has NOT been zapped, so we are redirected to the login page.');\r\n          //clear previous data in the storage, if any.\r\n          localStorage.clear();\r\n          this.storage.clear();\r\n          //Set the firstime login variable\r\n          localStorage.setItem('firstlogin', 'true');\r\n          //this.splashScreen.hide();\r\n          //Direct him to the login page..\r\n          this.rootPage = \"LoginPage\";\r\n          return;\r\n        }\r\n\r\n      }\r\n      /*    }\r\n         else {\r\n           localStorage.setItem('firstlogin', 'true');\r\n           this.rootPage = \"LoginPage\";\r\n           return;\r\n         }\r\n    */\r\n      //set the tab string in shared-service\r\n      this.sharedService.tab = \"App.Component.ts\";\r\n\r\n      //3. Is the Server API Url set?\r\n      //4. No, the Server API Url is not set. Get & Set the the Server API Url.\r\n      //Also set the server path for the loopback SDK builder in the ./shared/sdk directory.\r\n      if (!(localStorage.getItem('apiURL'))) {\r\n        this.userId = localStorage.getItem('userId');\r\n\r\n        //Hack:Set userid into sqlite as its not being set from login.ts\r\n        if (!this.sharedService.desktopTesting) {\r\n          this.storage.set(\"userId\", this.userId).then((res) => {\r\n            if (res) {\r\n              console.log(\"userid is set\");\r\n              this.log.debug(\"userid is set\");\r\n\t\t\t}\r\n            else {\r\n              console.log(\"userid is NOT set\");\r\n              this.log.debug(\"userid is NOT set\");\r\n\t\t\t}\r\n          });\r\n       }\r\n\r\n\r\n        //console.log('userId====' + this.userId);\r\n        this.connDetails = this.customerConn.getConnectionDetails(this.userId.toLowerCase());\r\n        this.configService.setSiteDetails(this.connDetails);\r\n\r\n        if (!localStorage.getItem('clientId'))\r\n          localStorage.setItem('clientId', this.connDetails.clientId);\r\n\r\n        //console.log(\"================The site id is===================::\" + this.pdaParams.getSiteId());\r\n        //console.log(\"lbclient.dataSources.adduserid\"+lbclient.dataSources.adduserid);\r\n\r\n        //Set the server path for the loopback SDK builder in the ./shared/sdk directory.     \r\n        LoopBackConfig.setBaseURL((this.connDetails.url));\r\n        LoopBackConfig.setApiVersion('api');\r\n      }\r\n\r\n\r\n\r\n      //5.Check & set All Config data\r\n      if (!(localStorage.getItem('SITE_CONFIG_LOADED'))) {\r\n        //console.log(\"Getting the siteconfigs!\");\r\n        this.userId = localStorage.getItem('userId');\r\n        this.connDetails = this.customerConn.getConnectionDetails(this.userId.toLowerCase());\r\n        LoopBackConfig.setBaseURL((this.connDetails.url));\r\n        LoopBackConfig.setApiVersion('api');\r\n\r\n        let result$: Observable<string> = this.siteConfig\r\n          .loadAllConfigsFromServer()\r\n          .subscribe((result) => {\r\n            console.log(\"Site Config Loaded!\");\r\n\r\n            this.commonCode();\r\n            //this.sharedService.SITE_CONFIG_LOADED.next(true);\r\n          },\r\n            (error) => {\r\n              this.showError(\"Unable to load Site Configs.Please check your connection.\");\r\n              return;\r\n            });\r\n      }\r\n      else {\r\n\r\n        this.commonCode();\r\n        //this.sharedService.SITE_CONFIG_LOADED.next(true);\r\n      }\r\n    })();\r\n  }//constructor ends here\r\n\r\n  //Shared code which should executes after siteconfigs are loaded.\r\n  commonCode = () => {\r\n    this.platform.ready().then(() => {\r\n      //Riyaz:Take care of the android hardware back button press.\r\n      this.platform.registerBackButtonAction(() => {\r\n        // Catches the active view\r\n        let nav = this.app.getActiveNavs()[0];\r\n        let activePage = nav.getActive().name;\r\n        // Checks if can go back before show up the alert\r\n        if (nav.canGoBack()) {\r\n          nav.pop();\r\n        } else {\r\n          const alert = this.alertCtrl.create({\r\n            title: 'Warning',\r\n            message: 'This will close the app and disable GPS tracking.  Are you sure you want to exit?',\r\n            buttons: [{\r\n              text: 'Cancel',\r\n              role: 'cancel',\r\n              handler: () => {\r\n                nav.setRoot(activePage);\r\n              }\r\n            }, {\r\n              text: 'OK',\r\n              handler: () => {\r\n                let mystr = 'backbutton: operator selected OK to exit app, tab:' + activePage;\r\n                //this.log.info(mystr);\r\n                this.platform.exitApp();\r\n              }\r\n            }],\r\n            enableBackdropDismiss: false\r\n          });\r\n          alert.present();\r\n        }\r\n\r\n      });\r\n    });\r\n\r\n\r\n    //6. Check & set all table metadata\r\n    //6.1 Load the jobs metadata  \r\n\r\n    let result: Observable<any> = this.base.getModelMetadata(this.Job, \"jobMetadata\");\r\n    this.sharedService.jobMetaDataLoadedSubject.subscribe();\r\n\r\n    //7. Check & set all watchers\r\n    //7.1 Start monitoring network connectivity    \r\n    this.connectivityMonitor.startWatching();\r\n\r\n    //7.2 Start monitoring for JSEA changes.\r\n    this.jseaService.startWatching();\r\n\r\n    //7.3 check if this is first start for the day\r\n    this.sodService.checkDoSodAction('FIRST_RESUME');\r\n\r\n    //7.4  Start monitoring images for auto upload \r\n    this.imageService.startWatching();\r\n\r\n    this.platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.        \r\n      //this.statusBar.styleDefault();\r\n      this.statusBar.overlaysWebView(false);\r\n      //this.statusBar.styleLightContent();\r\n      // set status bar to black\r\n      this.statusBar.backgroundColorByHexString('#000000');\r\n\r\n      // Start monitoring for messages  \r\n      this.messageService.startWatching();\r\n\r\n      //Start monitoring the device diagnostics\r\n      this.deviceDiagnosticService.startWatching();\r\n      \r\n      //hide splashscreen\r\n      //this.splashScreen.hide();\r\n\r\n    });\r\n\r\n    //8. If driverid > 0, redirect to jobs page\r\n    if (this.pdaParams.getDriverId() > 0) {\r\n      this.rootPage = \"TabsPage\";\r\n    }\r\n    else {\r\n      //9. If driverid <=0, redirect him to PDA page.     \r\n      this.rootPage = \"PdaPage\";\r\n    }\r\n  }//commonCode() ends here\r\n\r\n  showError(text) {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Error',\r\n      subTitle: text,\r\n      buttons: ['OK'],\r\n      enableBackdropDismiss: false\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\r\n\r\n\r\n/*\r\n  Generated class for the JobChangedServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class JobChangedServiceProvider {\r\n\r\n  constructor() {\r\n    //console.log('Hello JobChangedServiceProvider Provider');\r\n  }\r\n\r\n  lastjobedited = false;\r\n  //Set this in JobsDetailCtrl\r\n\r\n  setlastjobedited = function (arg_tf) {\r\n    this.lastjobedited = arg_tf;\r\n  }\r\n\r\n  //Get this in JobsIndexCtrl\r\n  getlastjobedited = function () {\r\n    return this.lastjobedited;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/job-changed-service/job-changed-service.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n/*\r\n  Generated class for the LoginServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n\r\n  See also https://devdactic.com/login-ionic-2/\r\n*/\r\n\r\nexport class User {\r\n  username: string;\r\n\r\n  constructor(username: string) {\r\n    this.username = username;\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class LoginServiceProvider {\r\n  currentUser: User;\r\n\r\n  constructor() {\r\n    //console.log('Hello LoginServiceProvider Provider');\r\n  }\r\n\r\n\r\n  public login(credentials) {\r\n    //Empty credential check\r\n    if (credentials.username === null || credentials.password === null) {\r\n      return Observable.throw(\"Please insert credentials\");\r\n    }\r\n    else //Run a credential check\r\n    {\r\n      //console.log(\"Logged in with user :\"+credentials.username);\r\n      /* A request to the loopback backend could be made here, to check\r\n       the credentials. But for now, we are using the following hardcoded logic. */\r\n      let access = false;\r\n\r\n      if (credentials.username == 'oscvtest' && credentials.password == 'oscvtest') {\r\n        access = true;\r\n      } else if (credentials.username == 'scope' && credentials.password == 'scope') {\r\n        access = true;\r\n      } else if (credentials.username == 'swift1' && credentials.password == 'swift1') {\r\n        access = true;\r\n      } else if (credentials.username == 'wpe' && credentials.password == 'wpe') {\r\n        access = true;\r\n      } else if (credentials.username == 'aptold' && credentials.password == 'aptold') {\r\n        access = true;\r\n      } else if (credentials.username == 'apt' && credentials.password == 'apt') {\r\n        access = true;\r\n      } else if (credentials.username == 'ces' && credentials.password == 'ces') {\r\n        access = true;\r\n      } else if (credentials.username == 'swift2' && credentials.password == 'swift2') {\r\n        access = true;\r\n      } else if (credentials.username == 'cct' && credentials.password == 'cct') {\t\t\t\t// City Crane\r\n        access = true;\r\n      } else if (credentials.username == 'itd' && credentials.password == 'itd') {\t\t\t\t// Intime\r\n        access = true;\r\n      } else if (credentials.username == 'glc' && credentials.password == 'glc') {\t\t\t\t// Greenlight\r\n        access = true;\r\n      } else if (credentials.username == 'ace' && credentials.password == 'ace') {\t\t\t\t// Ace\r\n        access = true;\r\n      } else if (credentials.username == 'pam' && credentials.password == 'pam') {\t\t\t\t// P and M\r\n        access = true;\r\n      } else if (credentials.username == 'flg' && credentials.password == 'flg') {\t\t\t\t// Fair Logistics\r\n        access = true;\r\n      } else if (credentials.username == 'wads' && credentials.password == 'wads') {\t\t\t// WADS\r\n        access = true;\r\n      } else if (credentials.username == 'univ' && credentials.password == 'univ') {\t\t\t// Universal\r\n        access = true;\r\n      } else if (credentials.username == 'gempost' && credentials.password == 'gempost') {\r\n        access = true;\r\n      } else if (credentials.username == 'rback1' && credentials.password == 'rback1') {\r\n        access = true;\r\n      } else if (credentials.username == 'adlx' && credentials.password == 'adlx') {\r\n        access = true;\r\n      } else if (credentials.username == 'sgs' && credentials.password == 'sgs') {\t\t\t\t// SgS\r\n        access = true;\r\n      } else if (credentials.username == 'transit' && credentials.password == 'transit') {\t\t\t\t// Transit\r\n        access = true;\r\n      } else if (credentials.username == 'rawroad' && credentials.password == 'rawroad') {\t\t\t\t// RawRoad\r\n        access = true;\r\n      } else if (credentials.username == 'capmel' && credentials.password == 'capmel') {\r\n        access = true;\r\n      } else if (credentials.username == 'capsyd' && credentials.password == 'capsyd') {\r\n        access = true;\r\n      } else if (credentials.username == 'capper' && credentials.password == 'capper') {\r\n        access = true;\r\n      } else if (credentials.username == 'capadl' && credentials.password == 'capadl') {\r\n        access = true;\r\n      } else if (credentials.username == 'capbne' && credentials.password == 'capbne') {\r\n        access = true;\r\n      } else if (credentials.username == 'oth' && credentials.password == 'oth') {\r\n        access = true;\r\n      } else if (credentials.username == 'lfr' && credentials.password == 'lfr') {\r\n        access = true;\r\n      }\r\n\r\n      else {\r\n        return Observable.throw(\"Wrong credentials!\");\r\n      }\r\n\r\n      return Observable.create(\r\n        observer => {\r\n          this.currentUser = new User(credentials.username);\r\n          observer.next(access);\r\n          observer.complete();\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  public getUserInfo(): User {\r\n    return this.currentUser;\r\n  }\r\n\r\n  public logout() {\r\n    return Observable.create(\r\n      observer => {\r\n        this.currentUser = null;\r\n        observer.next(true);\r\n        observer.complete();\r\n      }\r\n    );\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/login-service/login-service.ts","import { Injectable } from '@angular/core';\n\n\ndeclare const lbclient: any;\ninterface optionsInterface {\n  filter: string;\n  lastFilter: string;\n};\ninterface sinceInterface {\n  push: number;\n  pull: number;\n}\n/*\n  Generated class for the BarcodeReplicationServiceProvider provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular DI.\n*/\n@Injectable()\nexport class BarcodeReplicationServiceProvider {\n\n  LocalBarcodeHist = lbclient.models.LocalBarcodeHist;\n  RemoteBarcodeHist = lbclient.models.RemoteBarcodeHist;\n  models = lbclient.models;\n  lastFilter = {};\n  d = new Date();\n  isOnline;\n  since: sinceInterface = { push: -1, pull: -1 };\n\n\n  constructor() {\n    //console.log('Hello BarcodeReplicationServiceProvider Provider');\n\n    this.LocalBarcodeHist.on('before save', function (ctx, next) {\n      next();\n    });\n\n    // sync local changes if connected\n    this.LocalBarcodeHist.on('after save', function (ctx, next) {\n      next();\n      this.barcode_sync();\n    });\n    this.LocalBarcodeHist.on('after delete', function (ctx, next) {\n      next();\n      this.barcode_sync();\n    });\n  }\n\n  barcode_sync = (callback, filter) => {\n\n    var options: optionsInterface = { filter: '', lastFilter: '' };\n    var cb = null;\n    cb = callback;\n    options.filter = filter;\n    options.lastFilter = filter;\n    this.lastFilter = filter;\n\n    var counter = 0;\n\n    //console.log(new Date().toISOString() + ': starting replication');\n\n    // LT - 10/12/2015 - original code - does remote first\n    this.LocalBarcodeHist.replicate(\n      this.since.push,\n      this.RemoteBarcodeHist,\n      options,\n      (err, conflicts, cps) => {\n        this.since.push = cps;\n        this.LocalBarcodeHist.replicate(\n          this.since.push,\n          this.RemoteBarcodeHist,\n          options,\n          (err, conflicts, cps) => {\n            this.since.pull = cps;\n           // console.log(new Date().toISOString() + ': finished replication');\n            cb && cb(err, conflicts);\n          });\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/barcode-replication-service/barcode-replication-service.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { JobReplicationServiceProvider } from '../job-replication-service/job-replication-service';\r\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service'\r\n/*\r\n  Generated class for the SyncServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class SyncServiceProvider {\r\n\r\n\r\n  mystr;\r\n  lcallingfunc;\r\n  isSyncing: boolean = false;\r\n  pda_disable_background_sync;\r\n\r\n  //sync = lbclient.sync(this.arg1,this.arg2);\r\n\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'SyncServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n\r\n  constructor(private logger: LogServiceProvider, private siteConfig: SiteconfigServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider, private sharedService: SharedServiceProvider,\r\n    public jobReplicationService: JobReplicationServiceProvider) {\r\n    //console.log('Hello SyncServiceProvider Provider');\r\n    this.pda_disable_background_sync = (this.pdaParams.pda_disable_background_sync || (this.siteConfig.getSiteConfigValue('PDA_DISABLE_BACKGROUND_SYNC') == 'Y'));\r\n  }\r\n\r\n\r\n  hybridSync = (callback, filter) => {\r\n\r\n\r\n    //this.mystr = 'syncService: About to sync SyncInprogress = ' + this.isSyncing + \" Called from (last value set =) [\" + this.lcallingfunc + \"]\";\r\n    //this.log.debug(this.mystr);\r\n\r\n    //  if (!this.isSyncing) {\r\n    if (this.sharedService.getSyncInProgress() == false) {     // this.isSyncing = true;\r\n\r\n      //this.mystr = 'syncService: isSyncInprogress is off so turn it on before Replication sync call ';\r\n      //this.log.debug(this.mystr);\r\n\r\n\r\n      this.pda_disable_background_sync = (this.pdaParams.pda_disable_background_sync || (this.siteConfig.getSiteConfigValue('PDA_DISABLE_BACKGROUND_SYNC') == 'Y'));\r\n\r\n      //If the app is in the background and pda_disable_background_sync is true, do not sync\r\n      if (this.pda_disable_background_sync && this.sharedService.isAppinBackground)\r\n        this.log.info(\"Since app is the background and pda_disable_background_sync is set to true, replication code will NOT be executed.\");\r\n      else {\r\n\r\n        this.sharedService.setSyncInProgress(true);\r\n        //var startTime: number = new Date().getTime();\r\n        //this.log.debug(\"============SYNC: STARTED AT ============\" + startTime);\r\n        this.log.debug(\"============SYNC: STARTED============\");\r\n        //alert(\"SYNC STARTED\");\r\n        this.jobReplicationService.sync(callback, filter);\r\n        //this.log.debug(\"============SYNC: FINISHED============\");\r\n        //this.sharedService.setSyncInProgress(false);\r\n        //var endTime: number = new Date().getTime();\r\n        //this.log.debug(\"============SYNC: FINISHED AT ============:\" + endTime);        \r\n        //this.log.debug(\"============SYNC: TOOK ============:\" + (endTime - startTime) + \" ms\");\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  getSyncInProgress = () => {\r\n\r\n    this.mystr = 'syncService: getSyncInProgress:' + this.isSyncing;\r\n    this.log.debug(this.mystr);\r\n\r\n    return this.isSyncing;\r\n  };\r\n\r\n  setCallingFunc = (callingfunc) => {\r\n\r\n    this.mystr = 'syncService: In setCallingFunc value = ' + callingfunc;\r\n    this.log.debug(this.mystr);\r\n\r\n    this.lcallingfunc = callingfunc;\r\n  };\r\n\r\n  setSyncInProgress = (torf) => {\r\n\r\n    this.isSyncing = torf;\r\n    this.mystr = 'syncService: In setSyncInprogress setting value = ' + this.isSyncing;\r\n    this.log.debug(this.mystr);\r\n  };\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sync-service/sync-service.ts","import { Injectable } from '@angular/core';\n\n\ndeclare const lbclient: any;\ninterface optionsInterface {\n  filter: string;\n  lastFilter: string;\n};\ninterface sinceInterface {\n  push: number;\n  pull: number;\n}\n\n/*\n  Generated class for the JobnoteReplicationServiceProvider provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular DI.\n*/\n@Injectable()\nexport class JobnoteReplicationServiceProvider {\n\n  LocalNote = lbclient.models.LocalNote;\n  RemoteNote = lbclient.models.RemoteNote;\n  models = lbclient.models;\n  lastFilter = {};\n  d = new Date();\n  isOnline;\n  since: sinceInterface = { push: -1, pull: -1 };\n\n  constructor() {\n    //console.log('Hello JobnoteReplicationServiceProvider Provider');\n\n    // LT - don't work with our current loopback version - use observe ?  Maybe need filter (and callback?)\n    this.LocalNote.on('before save', function (ctx, next) {\n      next();\n    });\n\n    // sync local changes if connected\n    this.LocalNote.on('after save', function (ctx, next) {\n      next();\n      this.job_note_sync();\n    });\n    this.LocalNote.on('after delete', function (ctx, next) {\n      next();\n      this.job_note_sync();\n    });\n\n  }\n\n  job_note_sync = (callback, filter) => {\n\n    var options: optionsInterface = { filter: '', lastFilter: '' };\n    var cb = null;\n    cb = callback;\n    options.filter = filter;\n    options.lastFilter = filter;\n    this.lastFilter = filter;\n    var counter = 0;\n\n    //console.log(new Date().toISOString() + ': starting replication');\n\n    // LT - 10/12/2015 - original code - does remote first\n    this.LocalNote.replicate(\n      this.since.push,\n      this.RemoteNote,\n      options,\n      (err, conflicts, cps) => {\n        this.since.push = cps;\n        this.LocalNote.replicate(\n          this.since.push,\n          this.RemoteNote,\n          options,\n          (err, conflicts, cps) => {\n            this.since.pull = cps;\n            //console.log(new Date().toISOString() + ': finished replication');\n            cb && cb(err, conflicts);\n          });\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/jobnote-replication-service/jobnote-replication-service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Http } from '@angular/http';\n\nimport { ConfigServiceProvider } from '../config-service/config-service';\n\n/*\n  Generated class for the AttachServiceProvider provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular DI.\n*/\n\n@Injectable()\nexport class AttachServiceProvider {\n\n  constructor(public http: Http, private configService: ConfigServiceProvider) {\n    //console.log('Hello AttachServiceProvider Provider');\n  }\n\n  getAttachments(job): Observable<any> {\n    // Query server to get list of attachments for this job - return as a promise\n    // Initial implementation of API takes job date and no. and is not concerned with legs\n\n    var client = job.mobjobClientCode;\n    var jobnum = job.mobjobNumber;\t\t\t// TODO - should this be basejob?\n    var jobdate = Math.floor(job.mobjobSeq / 100000000);\t\t// e.g. 20160502\n\n    var serverIP = this.configService.getServerIP();\n\n    if (serverIP == '')\n      serverIP = JSON.parse(localStorage.getItem('clientConfig')).serverIP;\n\n    //var serverPort = this.configService.getServerPort();\n    var compURL = 'http://' + serverIP + '/other-cgi/listfiles.pl?output_type=JSON&client=' + client + '&job_number=' + jobnum + '&job_date=' + jobdate;\n\n    return this.http.get(compURL).map(res => res.json()).catch((err) => err);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/attach-service/attach-service.ts","import { Injectable } from '@angular/core';\n\n\ndeclare const lbclient: any;\ninterface optionsInterface {\n  filter: string;\n  lastFilter: string;\n};\ninterface sinceInterface {\n  push: number;\n  pull: number;\n}\n\n/*\n  Generated class for the JseaAnswersReplicationServiceProvider provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular DI.\n*/\n@Injectable()\nexport class JseaAnswersReplicationServiceProvider {\n\n  LocalJseaDriverAnswers = lbclient.models.LocalJseaDriverAnswers;\n  RemoteJseaDriverAnswers = lbclient.models.RemoteJseaDriverAnswers;\n  models = lbclient.models;\n  lastFilter = {};\n  d = new Date();\n  isOnline;\n  since: sinceInterface = { push: -1, pull: -1 };\n\n  constructor() {\n    //console.log('Hello JseaAnswersReplicationServiceProvider Provider');\n\n    this.LocalJseaDriverAnswers.on('before save', function (ctx, next) {\n      next();\n    });\n\n    // sync local changes if connected\n    this.LocalJseaDriverAnswers.on('after save', function (ctx, next) {\n      next();\n      this.jseaAnswers_sync();\n    });\n    this.LocalJseaDriverAnswers.on('after delete', function (ctx, next) {\n      next();\n      this.jseaAnswers_sync();\n    });\n\n  }\n\n  jseaAnswers_sync = (callback, filter) => {\n\n    var options: optionsInterface = { filter: '', lastFilter: '' };\n    var cb = null;\n    cb = callback;\n    options.filter = filter;\n    options.lastFilter = filter;\n    this.lastFilter = filter;\n\n    var counter = 0;\n\n    //console.log(new Date().toISOString() + ': starting replication');\n\n    // LT - 10/12/2015 - original code - does remote first\n    this.LocalJseaDriverAnswers.replicate(\n      this.since.push,\n      this.RemoteJseaDriverAnswers,\n      options,\n      (err, conflicts, cps) => {\n        this.since.push = cps;\n\t\t\t\t/* \tLocalJseaDriverAnswers.replicate(\n\t\t\t\t\t\tsince.push,\n\t\t\t\t\t\tRemoteJseaDriverAnswers,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tfunction pulled(err, conflicts, cps) {\n\t\t\t\t\t\t\tsince.pull = cps; */\n        //console.log(new Date().toISOString() + ': finished replication');\n        cb && cb(err, conflicts);\n        /* }); */\n      });\n\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/jsea-answers-replication-service/jsea-answers-replication-service.ts","import { Injectable } from '@angular/core';\r\nimport { DespatchToDriverMessagesApi } from '../../../shared/sdk';\r\n\r\n/*\r\n  Generated class for the DriverMessageServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n\r\nexport interface driverMsgInt {\r\n  drvmDriverId: any;\r\n  drvmDate: any;\r\n  drvmTimestamp: any;\r\n  drvmMessage: string;\r\n  drvmSender: any;\r\n  drvmRecipient: any;\r\n  drvmSpare: any;\r\n}\r\n\r\n@Injectable()\r\nexport class DriverMessageServiceProvider {\r\n  constructor(private despatchToDriverMessages: DespatchToDriverMessagesApi) {\r\n    //console.log('Hello DriverMessageServiceProvider Provider');\r\n  }\r\n\r\n  driverMsg: driverMsgInt;\r\n\r\n  getMessages(driverId) {\r\n    // TODO - limit shoud be a config or pda parameter\r\n    var filter = {\r\n      \"where\": { \"drvmDriverId\": driverId },\r\n      \"order\": 'drvmSeqid DESC',\r\n      \"limit\": 20\r\n    };\r\n\r\n    return (this.despatchToDriverMessages.find(filter).subscribe());\r\n  };\r\n\r\n  addMessage(driverId, message, cb) {\r\n\r\n    //console.log(\"driverId, message, cb\" + driverId + \",\" + message + \",\" + cb);\r\n    var now = new Date().toISOString();\r\n\r\n    this.driverMsg = {\r\n      drvmDriverId: driverId,\r\n      drvmDate: now,\r\n      drvmTimestamp: now,\r\n      drvmMessage: message,\t\t// TODO - should make sure <:512 chars\r\n      drvmSender: driverId,\r\n      drvmRecipient: \"DESPATCH\",\r\n      drvmSpare: ''\r\n    };\t// for now will always be DESPATCH until we maybe have a reply concept\r\n\r\n    this.despatchToDriverMessages.create(this.driverMsg).subscribe();\r\n    //this.despatchToDriverMessages.upsert(this.driverMsg).subscribe();\r\n  };\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/driver-message-service/driver-message-service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport {enableProdMode} from '@angular/core';\r\nimport { AppModule } from './app.module';\r\n\r\nenableProdMode();\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { MyApp } from './app.component';\r\n\r\n\r\n\r\nimport { IonicStorageModule } from '@ionic/storage';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { Device } from '@ionic-native/device';\r\nimport { Insomnia } from '@ionic-native/insomnia';\r\n//import { BackgroundGeolocation } from '@ionic-native/background-geolocation';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport { LaunchNavigator } from '@ionic-native/launch-navigator';\r\nimport { DeviceFeedback } from '@ionic-native/device-feedback';\r\nimport { File } from '@ionic-native/file';\r\nimport { FileTransfer, FileTransferObject } from '@ionic-native/file-transfer';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { Network } from '@ionic-native/network';\r\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\r\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\r\nimport { Media } from '@ionic-native/media';\r\nimport { Push } from '@ionic-native/push';\r\nimport { BackgroundMode } from '@ionic-native/background-mode';\r\nimport { Diagnostic } from '@ionic-native/diagnostic';\r\n\r\n\r\n\r\nimport { SDKBrowserModule } from '../../shared/sdk';\r\nimport { LoggerService } from '../../shared/sdk/services/custom/logger.service';\r\n\r\n\r\n\r\nimport { LoginServiceProvider } from '../providers/login-service/login-service';\r\nimport { ConfigServiceProvider } from '../providers/config-service/config-service';\r\nimport { CustomerconnServiceProvider } from '../providers/customerconn-service/customerconn-service';\r\nimport { PdaparamsServiceProvider } from '../providers/pdaparams-service/pdaparams-service';\r\nimport { SiteconfigServiceProvider } from '../providers/siteconfig-service/siteconfig-service';\r\nimport { SharedServiceProvider } from '../providers/shared-service/shared-service';\r\nimport { BaseServiceProvider } from '../providers/base-service/base-service';\r\nimport { UtilServiceProvider } from '../providers/util-service/util-service';\r\nimport { JseaServiceProvider } from '../providers/jsea-service/jsea-service';\r\nimport { MessageServiceProvider } from '../providers/message-service/message-service';\r\nimport { FixedQueueServiceProvider } from '../providers/fixed-queue-service/fixed-queue-service';\r\nimport { DeviceServiceProvider } from '../providers/device-service/device-service';\r\nimport { PlatformReadyServiceProvider } from '../providers/platform-ready-service/platform-ready-service';\r\nimport { BackgroundGeolocationServiceProvider } from '../providers/background-geolocation-service/background-geolocation-service';\r\nimport { GpsAuditServiceProvider } from '../providers/gps-audit-service/gps-audit-service';\r\nimport { LogServiceProvider } from '../providers/log-service/log-service';\r\nimport { JobServiceProvider } from '../providers/job-service/job-service';\r\nimport { EventServiceProvider } from '../providers/event-service/event-service';\r\nimport { WindowRefServiceProvider } from '../providers/window-ref-service/window-ref-service';\r\nimport { SodServiceProvider } from '../providers/sod-service/sod-service';\r\nimport { PushServiceProvider } from '../providers/push-service/push-service';\r\nimport { ExitServiceProvider } from '../providers/exit-service/exit-service';\r\nimport { GpsServiceProvider } from '../providers/gps-service/gps-service';\r\nimport { JobChangedServiceProvider } from '../providers/job-changed-service/job-changed-service';\r\nimport { ImageServiceProvider } from '../providers/image-service/image-service';\r\nimport { ImageFileServiceProvider } from '../providers/image-file-service/image-file-service';\r\nimport { DriverMessageServiceProvider } from '../providers/driver-message-service/driver-message-service';\r\nimport { ConnectivityMonitorProvider } from '../providers/connectivity-monitor/connectivity-monitor';\r\nimport { SyncServiceProvider } from '../providers/sync-service/sync-service';\r\nimport { JobReplicationServiceProvider } from '../providers/job-replication-service/job-replication-service';\r\nimport { BarcodeServiceProvider } from '../providers/barcode-service/barcode-service';\r\nimport { JobnoteReplicationServiceProvider } from '../providers/jobnote-replication-service/jobnote-replication-service';\r\nimport { BarcodeReplicationServiceProvider } from '../providers/barcode-replication-service/barcode-replication-service';\r\nimport { JseaAnswersReplicationServiceProvider } from '../providers/jsea-answers-replication-service/jsea-answers-replication-service';\r\n\r\n\r\nimport { NavigationServiceProvider } from '../providers/navigation-service/navigation-service';\r\nimport { AttachServiceProvider } from '../providers/attach-service/attach-service';\r\nimport { DeviceDiagnosticServiceProvider } from '../providers/device-diagnostic-service/device-diagnostic-service';\nimport { SqliteServiceProvider } from '../providers/sqlite-service/sqlite-service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    IonicModule.forRoot(MyApp, { statusbarPadding: true }),\r\n    SDKBrowserModule.forRoot(),\r\n    IonicStorageModule.forRoot(),\r\n    HttpModule\r\n  ],\r\n\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp\r\n\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    {\r\n      provide: ErrorHandler,\r\n      useClass: IonicErrorHandler\r\n    },\r\n    Diagnostic,\r\n    LoginServiceProvider,\r\n    ConfigServiceProvider,\r\n    CustomerconnServiceProvider,\r\n    PdaparamsServiceProvider,\r\n    SiteconfigServiceProvider,\r\n    SharedServiceProvider,\r\n    BaseServiceProvider,\r\n    UtilServiceProvider,\r\n    JseaServiceProvider,\r\n    MessageServiceProvider,\r\n    FixedQueueServiceProvider,\r\n    DeviceServiceProvider,\r\n    PlatformReadyServiceProvider,\r\n    BackgroundGeolocationServiceProvider,\r\n    Device,\r\n    LogServiceProvider,\r\n    LoggerService,\r\n    GpsAuditServiceProvider,\r\n    //BackgroundGeolocation,\r\n    Insomnia,\r\n    JobServiceProvider,\r\n    EventServiceProvider,\r\n    WindowRefServiceProvider,\r\n    SodServiceProvider,\r\n    PushServiceProvider,\r\n    ExitServiceProvider,\r\n    GpsServiceProvider,\r\n    Geolocation,\r\n    LaunchNavigator,\r\n    JobChangedServiceProvider,\r\n    DeviceFeedback,\r\n    ImageServiceProvider,\r\n    ImageFileServiceProvider,\r\n    File,\r\n    Camera,\r\n    Network,\r\n    DriverMessageServiceProvider,\r\n    BarcodeScanner,\r\n    InAppBrowser,\r\n    FileTransfer,\r\n    FileTransferObject,\r\n    ConnectivityMonitorProvider,\r\n    SyncServiceProvider,\r\n    Media,\r\n    JobReplicationServiceProvider,\r\n    BarcodeServiceProvider,\r\n    Push,\r\n    JobnoteReplicationServiceProvider,\r\n    BarcodeReplicationServiceProvider,\r\n    JseaAnswersReplicationServiceProvider,\r\n    NavigationServiceProvider,\r\n    AttachServiceProvider,\r\n    BackgroundMode,\r\n    DeviceDiagnosticServiceProvider,\n    SqliteServiceProvider\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/* tslint:disable */\nimport * as io from 'socket.io-client';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketBrowser\n* @license MIT\n* @description\n* This module handle socket connections for web browsers, it will be DI Swapped\n* depending on the platform environment.\n* This module will be generated when the -d ng2web flag is set\n**/\nexport class SocketBrowser {\n  /**\n   * @method connect\n   * @param {string} url URL path to connect with the server.\n   * @param {any} options Any socket.io v1 =< valid options\n   * @return {any} Not currently a socket.ioClient for web Typings implemented.\n   * @description\n   * This method will return a valid socket connection.  \n   **/\n  connect(url: string, options: any): any {\n    return io(url, options);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/sockets/socket.browser.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 530\n// module chunks = 15","/* tslint:disable */\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nexport class IO {\n\n  private socket: any;\n  private observables: any = {};\n\n  constructor(socket: any) { this.socket = socket; }\n\n  emit(event: string, data: any): void {\n    this.socket.emit('ME:RT:1://event', {\n        event : event,\n        data  : data\n    });\n  }\n\n  on(event: string): Observable<any> {\n    if (this.observables[event]) { return this.observables[event]; }\n    let subject: Subject<any> = new Subject<any>();\n    this.socket.on(event, (res: any) => subject.next(res));\n    this.observables[event] = subject.asObservable();\n    return this.observables[event];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/core/io.service.ts","/* tslint:disable */\nimport { FireLoopRef } from './index';\n\nexport class FireLoop {\n\n  private references: any = {};\n\n  constructor(private socket: any, private models: { get: Function }) {}\n\n  public ref<T>(model: any): FireLoopRef<T> {\n    let name: string = model.getModelName();\n    model.models = this.models;\n    this.references[name] = new FireLoopRef<T>(model, this.socket);\n    return this.references[name];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/FireLoop.ts","/* tslint:disable */\nimport 'rxjs/add/observable/merge';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { catchError } from 'rxjs/operators';\nimport 'rxjs/add/operator/merge';\nimport { LoopBackFilter, StatFilter } from './index';\nimport { SocketConnection } from '../sockets/socket.connections';\n/**\n * @class FireLoopRef<T>\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * This class allows to create FireLoop References which will be in sync with\n * Server. It also allows to create FireLoop Reference Childs, that allows to\n * persist data according the generic model relationships.\n **/\nexport class FireLoopRef<T> {\n  // Reference ID\n  private id: number = this.buildId();\n  // Model Instance (For child references, empty on root references)\n  private instance: any;\n  // Model Childs\n  private childs: any = {};\n  // Disposable Events\n  private disposable: { [key: string]: any } = {};\n  /**\n  * @method constructor\n  * @param {any} model The model we want to create a reference\n  * @param {SocketConnection} socket Socket connection to handle events\n  * @param {FireLoopRef<any>} parent Parent FireLoop model reference\n  * @param {string} relationship The defined model relationship\n  * @description\n  * The constructor will receive the required parameters and then will register this reference\n  * into the server, needed to allow multiple references for the same model.\n  * This ids are referenced into this specific client connection and won't have issues\n  * with other client ids.\n  **/\n  constructor(\n    private model: any,\n    private socket: SocketConnection,\n    private parent: FireLoopRef<any> = null,\n    private relationship: string = null\n  ) {\n    this.socket.emit(\n      `Subscribe.${!parent ? model.getModelName() : parent.model.getModelName()}`,\n      { id: this.id, scope: model.getModelName(), relationship: relationship }\n    );\n    return this;\n  }\n  /**\n  * @method dispose\n  * @return {void}\n  * @description\n  * This method is super important to avoid memory leaks in the server.\n  * This method requires to be called on components destroy\n  *\n  * ngOnDestroy() {\n  *  this.someRef.dispose() \n  * }\n  **/\n  public dispose(): void {\n    const subscription = this.operation('dispose', {}).subscribe(() => {\n      Object.keys(this.disposable).forEach((channel: string) => {\n        this.socket.removeListener(channel, this.disposable[channel]);\n        this.socket.removeAllListeners(channel);\n      });\n      subscription.unsubscribe();\n    });\n  }\n  /**\n  * @method upsert\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for upsert function.\n  **/\n  public upsert(data: T): Observable<T> {\n    return this.operation('upsert', data);\n  }\n  /**\n  * @method create\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for create function.\n  **/\n  public create(data: T): Observable<T> {\n    return this.operation('create', data);\n  }\n  /**\n  * @method remove\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for remove function.\n  **/\n  public remove(data: T): Observable<T> {\n    return this.operation('remove', data);\n  }\n  /**\n  * @method remote\n  * @param {string} method Remote method name\n  * @param {any[]=} params Parameters to be applied into the remote method\n  * @param {boolean} broadcast Flag to define if the method results should be broadcasted\n  * @return {Observable<any>}\n  * @description\n  * This method calls for any remote method. It is flexible enough to\n  * allow you call either built-in or custom remote methods.\n  *\n  * FireLoop provides this interface to enable calling remote methods\n  * but also to optionally send any defined accept params that will be\n  * applied within the server.\n  **/\n  public remote(method: string, params?: any[], broadcast: boolean = false): Observable<any> {\n    return this.operation('remote', { method, params, broadcast });\n  }\n  /**\n  * @method onRemote\n  * @param {string} method Remote method name\n  * @return {Observable<any>}\n  * @description\n  * This method listen for public broadcasted remote method results. If the remote method\n  * execution is not public only the owner will receive the result data.\n  **/\n  public onRemote(method: string): Observable<any> {\n    let event: string = 'remote';\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n    }\n    return this.broadcasts(event, {});\n  }\n  /**\n  * @method on\n  * @param {string} event Event name\n  * @param {LoopBackFilter} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for different type of events. Valid events are:\n  *   - change (Triggers on any model change Create, update, remove-)\n  *   - value (Triggers on new entries)\n  *   - child_added (Triggers when a child is added)\n  *   - child_updated (Triggers when a child is updated)\n  *   - child_removed (Triggers when a child is removed)\n  **/\n  public on(event: string, filter: LoopBackFilter = { limit: 100, order: 'id DESC' }): Observable<T | T[]> {\n    if (event === 'remote') {\n      throw new Error('The \"remote\" event is not allowed using \"on()\" method, use \"onRemote()\" instead');\n    }\n    let request: any;\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n      request = { filter };\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n      request = { filter, parent: this.parent.instance };\n    }\n    if (event.match(/(value|change|stats)/)) {\n      return Observable.merge(\n        this.pull(event, request),\n        this.broadcasts(event, request)\n      );\n    } else {\n      return this.broadcasts(event, request);\n    }\n  }\n  /**\n  * @method stats\n  * @param {LoopBackFilter=} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for real-time statistics, will trigger on every\n  * statistic modification.\n  * TIP: You can improve performance by adding memcached to LoopBack models.\n  **/\n  public stats(filter?: StatFilter): Observable<T | T[]> {\n    return this.on('stats', filter);\n  }\n  /**\n  * @method make\n  * @param {any} instance Persisted model instance reference\n  * @return {Observable<T>}\n  * @description\n  * This method will set a model instance into this a new FireLoop Reference.\n  * This allows to persiste parentship when creating related instances.\n  *\n  * It also allows to have multiple different persisted instance references to same model.\n  * otherwise if using singleton will replace a previous instance for a new instance, when\n  * we actually want to have more than 1 instance of same model.\n  **/\n  public make(instance: any): FireLoopRef<T> {\n    let reference: FireLoopRef<T> = new FireLoopRef<T>(this.model, this.socket);\n    reference.instance = instance;\n    return reference;\n  }\n  /**\n  * @method child\n  * @param {string} relationship A defined model relationship\n  * @return {FireLoopRef<T>}\n  * @description\n  * This method creates child references, which will persist related model\n  * instances. e.g. Room.messages, where messages belongs to a specific Room.\n  **/\n  public child<T>(relationship: string): FireLoopRef<T> {\n    // Return singleton instance\n    if (this.childs[relationship]) { return this.childs[relationship]; }\n    // Try to get relation settings from current model\n    let settings: any = this.model.getModelDefinition().relations[relationship];\n    // Verify the relationship actually exists\n    if (!settings) {\n      throw new Error(`Invalid model relationship ${this.model.getModelName()} <-> ${relationship}, verify your model settings.`);\n    }\n    // Verify if the relationship model is public\n    if (settings.model === '') {\n      throw new Error(`Relationship model is private, cam't use ${relationship} unless you set your model as public.`);\n    }\n    // Lets get a model reference and add a reference for all of the models\n    let model: any = this.model.models.get(settings.model);\n    model.models = this.model.models;\n    // If everything goes well, we will store a child reference and return it.\n    this.childs[relationship] = new FireLoopRef<T>(model, this.socket, this, relationship);\n    return this.childs[relationship];\n  }\n  /**\n  * @method pull\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This method will pull initial data from server\n  **/\n  private pull(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let that: FireLoopRef<T> = this;\n    let nowEvent: any = `${event}.pull.requested.${this.id}`;\n    this.socket.emit(`${event}.pull.request.${this.id}`, request);\n    function pullNow(data: any) {\n      if (that.socket.removeListener) {\n        that.socket.removeListener(nowEvent, pullNow);\n      }\n      sbj.next(data);\n    };\n    this.socket.on(nowEvent, pullNow);\n    return sbj.asObservable();\n  }\n  /**\n  * @method broadcasts\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This will listen for public broadcasts announces and then request\n  * for data according a specific client request, not shared with other clients.\n  **/\n  private broadcasts(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let channels: { announce: string, broadcast: string } = {\n      announce: `${event}.broadcast.announce.${this.id}`,\n      broadcast: `${event}.broadcast.${this.id}`\n    };\n    let that = this;\n    // Announces Handler\n    this.disposable[channels.announce] = function (res: T) {\n      that.socket.emit(`${event}.broadcast.request.${that.id}`, request)\n    };\n    // Broadcasts Handler\n    this.disposable[channels.broadcast] = function (data: any) {\n      sbj.next(data);\n    };\n    this.socket.on(channels.announce, this.disposable[channels.announce]);\n    this.socket.on(channels.broadcast, this.disposable[channels.broadcast]);\n    return sbj.asObservable();\n  }\n  /**\n  * @method operation\n  * @param {string} event Event name\n  * @param {any} data Any type of data sent to the server\n  * @return {Observable<T>}\n  * @description\n  * This internal method will run operations depending on current context \n  **/\n  private operation(event: string, data: any): Observable<T> {\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}.${this.id}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}.${this.id}`;\n    }\n    let subject: Subject<T> = new Subject<T>();\n    let config: { data: any, parent: any } = {\n      data,\n      parent: this.parent && this.parent.instance ? this.parent.instance : null\n    };\n    this.socket.emit(event, config);\n    let resultEvent: string = '';\n    if (!this.relationship) {\n      resultEvent = `${this.model.getModelName()}.value.result.${this.id}`;\n    } else {\n      resultEvent = `${this.parent.model.getModelName()}.${this.relationship}.value.result.${this.id}`;\n    }\n    this.socket.on(resultEvent, (res: any) => {\n      if (res.error) {\n        subject.error(res);\n      } else {\n        subject.next(res);\n      }\n    });\n    if (event.match('dispose')) {\n      setTimeout(() => subject.next());\n    }\n    // This event listener will be wiped within socket.connections\n    this.socket.sharedObservables.sharedOnDisconnect.subscribe(() => subject.complete());\n    return subject.asObservable().pipe(catchError((error: any) => Observable.throw(error)));\n  }\n  /**\n  * @method buildId\n  * @return {number}\n  * @description\n  * This internal method build an ID for this reference, this allows to have\n  * multiple references for the same model or relationships.\n  **/\n  private buildId(): number {\n    return Date.now() + Math.floor(Math.random() * 100800) *\n      Math.floor(Math.random() * 100700) *\n      Math.floor(Math.random() * 198500);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/FireLoopRef.ts","/* tslint:disable */\nexport * from './auth.service';\nexport * from './error.service';\nexport * from './base.service';\nexport * from './real.time';\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/core/index.ts","import { Injectable } from '@angular/core';\r\n/*\r\n  Generated class for the UtilServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class UtilServiceProvider {\r\n  startTime;\r\n  replTime;\r\n  oneDay = 60 * 60 * 24 * 1000;\r\n  scrollBarWidth = null;\r\n\r\n  constructor() {\r\n    //console.log('Hello UtilServiceProvider Provider');\r\n  }\r\n\r\n\r\n  dateDiff(older, newer) {\r\n    var data = <any>{};\r\n    // Elapsed milliseconds\r\n    data.elapsed = newer.getTime() - older.getTime();\r\n    // Elapsed Days\r\n    data.days = Math.round((((data.elapsed / 1000) / 60) / 60) / 24);\r\n    // Elapsed Hours\r\n    data.hours = Math.round(((data.elapsed / 1000) / 60) / 60);\r\n    // Elapsed Months\r\n    var monthDiff = (newer.getMonth() + 1) - (older.getMonth() + 1);\r\n    var yearDiff = newer.getFullYear() - older.getFullYear();\r\n    data.months = monthDiff + (yearDiff * 12);\r\n    // Return data\r\n    return data;\r\n  }\r\n\r\n  arraysIdentical(array1, array2) {\r\n    return (JSON.stringify(array1) === JSON.stringify(array2));\r\n  }\r\n\r\n  trimLeadingSpaces(s) {\r\n    var index = 0;\r\n    var lastLeadingString = -1;\r\n    while (s.charCodeAt(index) < 33) {\r\n      lastLeadingString++;\r\n      index++;\r\n    }\r\n    if (lastLeadingString >= 0) {\r\n      var sTrim = s.substr(lastLeadingString + 1);\r\n      return sTrim;\r\n    }\r\n    else {\r\n      return s;\r\n    }\r\n  }\r\n\r\n  nameSort(a, b) {\r\n    if (a.name < b.name) {\r\n      return -1;\r\n    }\r\n    if (a.name > b.name) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n\r\n  findArrayIndexByKey(data, key, value) {\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (data[i][key] === value) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  findArrayItemByKey(data, key, value) {\r\n    //console.log(\"data in findArrayItemByKey::::\" + data);\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (data[i][key] === value) {\r\n        return data[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  findArrayItemsByKey(data, key, value) {\r\n    var retArray = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (data[i][key] === value) {\r\n        retArray.push(data[i]);\r\n      }\r\n    }\r\n    return retArray;\r\n  }\r\n\r\n\r\n  isNumber(n) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n  }\r\n\r\n  getParamFromURL(url, key) {\r\n    var params = url.split(\"?\");\r\n    var value = \"\";\r\n    if (params.length > 1) {\r\n      params = params[1].split(\"&\");\r\n      for (var i = 0; (i < params.length) && (value === \"\"); i++) {\r\n        if (params[i].indexOf(key) === 0) {\r\n          var param = params[i].split(\"=\");\r\n          if (param.length > 1) {\r\n            value = param[1];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return decodeURIComponent(value);\r\n  }\r\n\r\n\r\n\r\n  getScrollbarWidth() {\r\n    if (this.scrollBarWidth !== null) {\r\n      return this.scrollBarWidth;\r\n    }\r\n    var outer = document.createElement(\"div\");\r\n    outer.style.visibility = \"hidden\";\r\n    outer.style.width = \"100px\";\r\n    outer.style.msOverflowStyle = \"scrollbar\"; // needed for WinJS apps\r\n\r\n    document.body.appendChild(outer);\r\n\r\n    var widthNoScroll = outer.offsetWidth;\r\n    // force scrollbars\r\n    outer.style.overflow = \"scroll\";\r\n\r\n    // add innerdiv\r\n    var inner = document.createElement(\"div\");\r\n    inner.style.width = \"100%\";\r\n    outer.appendChild(inner);\r\n\r\n    var widthWithScroll = inner.offsetWidth;\r\n\r\n    // remove divs\r\n    outer.parentNode.removeChild(outer);\r\n\r\n    this.scrollBarWidth = widthNoScroll - widthWithScroll;\r\n    return this.scrollBarWidth;\r\n  }\r\n\r\n  /*  ShowDataErrorMessage(value, message) {\r\n     if ((value === \"Error\") || (value === \"\")) {\r\n       if (message === \"\") {\r\n         message = \"An Error has occured retrieving your data.  Please try again or return to the Previous Page.\";\r\n       }\r\n       $(\".tabContentContainer\").html(\"\");\r\n       $(\"<div class='dataError'>\" + message + \"</div>\").appendTo($(\".tabContentContainer\"));\r\n       $(\".tabContentContainer\")[0].scrollIntoViewIfNeeded(false);\r\n       return true;\r\n     }\r\n     else {\r\n       return false;\r\n     }\r\n \r\n   } */\r\n\r\n\r\n\r\n  /*  GetResponsiveScreenSize() {\r\n     var visible = false;\r\n     visible = $(\"#Screen-XS\").is(\":visible\");\r\n     if (visible === true) {\r\n       return \"XS\";\r\n     }\r\n     visible = $(\"#Screen-SM\").is(\":visible\");\r\n     if (visible === true) {\r\n       return \"SM\";\r\n     }\r\n     visible = $(\"#Screen-MD\").is(\":visible\");\r\n     if (visible === true) {\r\n       return \"MD\";\r\n     }\r\n     visible = $(\"#Screen-LG\").is(\":visible\");\r\n     if (visible === true) {\r\n       return \"LG\";\r\n     }\r\n     return \"\";\r\n   } */\r\n\r\n  copyObject(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n  }\r\n\r\n  arrayUnique(array, property) {\r\n    var a = array.concat();\r\n    for (var i = 0; i < a.length; ++i) {\r\n      for (var j = i + 1; j < a.length; ++j) {\r\n        if (property === undefined) {\r\n          if (a[i] === a[j]) {\r\n            a.splice(j--, 1);\r\n          }\r\n        }\r\n        else {\r\n          var x = a[i][property];\r\n          var x2 = a[j][property];\r\n          if (x === x2) {\r\n            a.splice(j--, 1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return a;\r\n  }\r\n\r\n\r\n  isEmpty = (obj) => {\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key))\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n  executionTime = (str) => {\r\n    const duration = performance.now() - this.startTime;\r\n    //console.log(`============executionTime() upto ${str} took ${duration}ms======================`);\r\n  }\r\n\r\n  supplant(str, o) {\r\n    return str.replace(\r\n      /\\{([^{}]*)\\}/g,\r\n      function (a, b) {\r\n        var r = o[b];\r\n        return typeof r === 'string' || typeof r === 'number' ? r : a;\r\n      }\r\n    );\r\n  };\r\n\r\n  getFormattedTimestamp(date) {\r\n    return this.supplant('{0}:{1}:{2}:{3}', [\r\n      date.getHours(),\r\n      date.getMinutes(),\r\n      date.getSeconds(),\r\n      date.getMilliseconds()\r\n    ]);\r\n  };\r\n  getLogTimestamp(date) {\r\n    return (date.toISOString());\r\n  };\r\n\r\n  getLocalTimestamp(date) {\r\n    var tzo = -date.getTimezoneOffset();\r\n    var dif = tzo >= 0 ? '+' : '-';\r\n    function pad(num) {\r\n      var norm = Math.abs(Math.floor(num));\r\n      return (norm < 10 ? '0' : '') + norm;\r\n    };\r\n    return date.getFullYear()\r\n      + '-' + pad(date.getMonth() + 1)\r\n      + '-' + pad(date.getDate())\r\n      + 'T' + pad(date.getHours())\r\n      + ':' + pad(date.getMinutes())\r\n      + ':' + pad(date.getSeconds())\r\n      + dif + pad(tzo / 60)\r\n      + ':' + pad(tzo % 60);\r\n  };\r\n\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/util-service/util-service.ts","/* tslint:disable */\nexport * from './Job';\nexport * from './JobChange';\nexport * from './TpmPdaController';\nexport * from './GpsHistory';\nexport * from './Application';\nexport * from './Installation';\nexport * from './Notification';\nexport * from './Push';\nexport * from './Mobile_event';\nexport * from './SiteConfig';\nexport * from './DespatchToDriverMessages';\nexport * from './JseaDriverQuestions';\nexport * from './JseaDriverAnswers';\nexport * from './JseaDriverAnswersChange';\nexport * from './Photocontainer';\nexport * from './Image';\nexport * from './BarcodeHist';\nexport * from './BarcodeHistChange';\nexport * from './DeviceDiagnostics';\nexport * from './SDKModels';\nexport * from './logger.service';\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/index.ts","import { Injectable } from '@angular/core';\r\n\r\n//import 'reflect-metadata';\r\n/*\r\n  Generated class for the ClientConfigProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class ConfigServiceProvider {\r\n\r\n  _clientConfig = {\r\n    clientId: '',\r\n    serverIP: '',\r\n    serverPort: 0,\r\n    apiURL: '',\r\n    API_VERSION: ''\r\n  }\r\n\r\n\r\n  //IMPORTANT Note: if appConfig.version < 2.35, then push notifications won't work properly.\r\n  appConfig = {\r\n    'version': '3.1.14',\r\n    'build': 31,\r\n    'logServerIP': 'opensyscon.com.au',\r\n    'logServerPort': 5678\r\n  }\r\n\r\n  clientId = '';\r\n  serverIP = '';\r\n  serverPort = 0;\r\n  apiURL = '';\r\n  API_VERSION = '';\r\n\r\n  constructor() {\r\n    //console.log('Hello ClientConfigProvider Provider');\r\n\r\n    if (JSON.parse(localStorage.getItem('clientConfig'))) {\r\n      this._clientConfig = JSON.parse(localStorage.getItem('clientConfig'));\r\n      this.clientId = this._clientConfig.clientId;\r\n      this.serverIP = this._clientConfig.serverIP;\r\n      this.serverPort = this._clientConfig.serverPort;\r\n      this.apiURL = this._clientConfig.apiURL;\r\n      //console.log(\"this.apiURL is:::\" + this.apiURL);\r\n      this.API_VERSION = this._clientConfig.API_VERSION;\r\n    }\r\n    //console.log(' ======this._apiURL in config-service.ts is ::==============' + this.apiURL);\r\n\r\n  }//End of the constructor\r\n\r\n\r\n  setSiteDetails = (siteDetails) => {\r\n    /* \r\n    https://github.com/mean-expert-official/loopback-sdk-builder/wiki/4.-First-Steps\r\n   */\r\n    //this.apiURL = (siteDetails.url).slice(0, -4);\r\n    this.apiURL = siteDetails.url;\r\n    //console.log(\"in setSiteDetails, this.apiURL is:::\" + this.apiURL);\r\n    this.API_VERSION = 'api';\r\n    localStorage.setItem('clientId', siteDetails.clientId);\r\n    console.log(\"Set the clientId with :\" + siteDetails.clientId);\r\n    localStorage.setItem('apiURL', this.apiURL);\r\n    localStorage.setItem('API_VERSION', this.API_VERSION);\r\n\r\n    this._clientConfig.clientId = siteDetails.clientId;\r\n    this._clientConfig.serverIP = siteDetails.serverIP;\r\n    this._clientConfig.serverPort = siteDetails.serverPort;\r\n    this._clientConfig.apiURL = this.apiURL;\r\n    this._clientConfig.API_VERSION = this.API_VERSION;\r\n\r\n    localStorage.setItem('clientConfig', JSON.stringify(this._clientConfig));\r\n  }\r\n\r\n  getSiteId() {\r\n    return localStorage.getItem('clientId');\r\n  }\r\n\r\n  getBaseUrl() {\r\n    return localStorage.getItem('apiURL');\r\n  }\r\n\r\n  getApiVersion() {\r\n    return localStorage.getItem('API_VERSION');\r\n  }\r\n\r\n  getClientConfig() {\r\n    return JSON.parse(localStorage.getItem('clientConfig'));\r\n  }\r\n\r\n  getServerIP() {\r\n    return this.serverIP;\r\n  }\r\n\r\n  getServerPort() {\r\n    return this.serverPort;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/config-service/config-service.ts","import { Injectable } from '@angular/core';\r\nimport { Device } from '@ionic-native/device';\r\nimport { Platform } from 'ionic-angular';\r\nimport { Insomnia } from '@ionic-native/insomnia';\r\nimport { BackgroundMode } from '@ionic-native/background-mode';\r\n\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { BackgroundGeolocationServiceProvider } from '../background-geolocation-service/background-geolocation-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\nimport { SiteconfigServiceProvider } from '../siteconfig-service/siteconfig-service';\r\n\r\n/*\r\n  Generated class for the PlatformReadyServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n\r\n\r\n@Injectable()\r\nexport class PlatformReadyServiceProvider {\r\n\r\n  logOb;\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'PlatformReadyServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  isready: boolean = false;\r\n  bgenabled = false;\r\n  pda_disable_diagnostics_bgps_on_logoff;\r\n\r\n  constructor(private device: Device, private logger: LogServiceProvider,\r\n    private pdaParams: PdaparamsServiceProvider, public platform: Platform,\r\n    private insomnia: Insomnia, private backgroundGeolocationService: BackgroundGeolocationServiceProvider,\r\n    private sharedService: SharedServiceProvider, private backgroundMode: BackgroundMode,\r\n    private siteConfig: SiteconfigServiceProvider) {\r\n    console.log('constructed');\r\n    this.log.debug('constructed');\r\n    this.pda_disable_diagnostics_bgps_on_logoff = (this.pdaParams.pda_disable_diagnostics_bgps_on_logoff || (this.siteConfig.getSiteConfigValue('PDA_DISABLE_DIAGNOSTICS_BGPS_ON_LOGOFF') == 'Y'));\r\n    this.platform.ready().then((readySource) => {\r\n\r\n      var osplatform = this.device.platform;\r\n\r\n\t\tconsole.log('platform ready from:' + readySource + ', osplatform:' + osplatform);\r\n\t\tthis.log.debug('platform ready from:' + readySource + ', osplatform:' + osplatform);\r\n\r\n      if (osplatform != null) {\r\n\r\n        this.log.debug('Platform ready from :' + readySource);\r\n        // Platform now ready, execute any required native code\r\n        var model = this.device.model;\r\n        //var platforms = this.platform.platforms();\r\n        var version = this.device.version;\r\n        var manufacturer = this.device.manufacturer\r\n\r\n        if (this.platform.is('cordova')) {\r\n          this.isready = true;\r\n        }\r\n\r\n        //this.isready = false;\r\n        this.log.info(\"Device Model:\" + model + \", Manufacturer:\" + manufacturer + \", platform:\" + osplatform + \", OS ver:\" + version);\r\n\r\n        if (model == 'CipherLab RS30') {\r\n          this.log.debug(\"Device is a CipherLab RS30 \" + model);\r\n        }\r\n        else {\r\n          this.log.debug(\"Device is not a CipherLab RS30 HEAD scanning NOT Available: \" + model);\r\n        }\r\n\r\n        // Keep screen on for our app\r\n        this.insomnia.keepAwake();\r\n\r\n        this.backgroundMode.on(\"enable\").subscribe(() => {\r\n          this.log.debug(\"BGMODE:::BGMODE ENABLED\");\r\n        });\r\n\r\n        this.backgroundMode.on(\"deactivate\").subscribe(() => {\r\n          this.log.debug(\"BGMODE:::BGMODE DEACTIVATED\");\r\n          this.bgenabled = false;\r\n        });\r\n\r\n        this.backgroundMode.on(\"failure\").subscribe(() => {\r\n          this.log.debug(\"BGMODE:::BGMODE FAILED\");\r\n        });\r\n\r\n        this.backgroundMode.on(\"activate\").subscribe(() => {\r\n          this.log.debug(\"BGMODE:::BGMODE ACTIVATED WITH BGENABLED FLAG AS :\" + this.bgenabled);\r\n          if (this.bgenabled == false) {\r\n            this.backgroundMode.disableWebViewOptimizations();\r\n            this.log.debug(\"BGMODE:::BG MODE ON EVENT FIRED !! DISABLEWEBVIEWOPTIMIZATIONS() CALLED!!\");\r\n            this.bgenabled = true;\r\n          }\r\n        }\r\n          ,\r\n          (err) => {\r\n            if (err.error === 'cordova_not_available' || err.error === 'plugin_not_available') {\r\n              this.log.debug('activate:plugin not install');\r\n            }\r\n          });\r\n\r\n        this.backgroundMode.on(\"disable\").subscribe(() => {\r\n          this.log.debug(\"BGMODE:::BGMODE DISABLED\");\r\n          this.bgenabled = false;\r\n        }, (err) => {\r\n          this.log.debug('BG MODE DISABLE: ERR = ' + err);\r\n        });\r\n\r\n        this.backgroundMode.enable();\r\n        this.backgroundMode.setDefaults({\r\n          hidden: true, title: 'App is running in the background', text: 'Doing Background GPS...'\r\n        });\r\n\r\n        this.platform.pause.subscribe(() => {\r\n\r\n          this.pda_disable_diagnostics_bgps_on_logoff = (this.pdaParams.pda_disable_diagnostics_bgps_on_logoff || (this.siteConfig.getSiteConfigValue('PDA_DISABLE_DIAGNOSTICS_BGPS_ON_LOGOFF') == 'Y'));\r\n\r\n          this.log.info(\"platform.pause: Inside this.platform.pause.subscribe() \");\r\n          if (!this.sharedService.loginFlag && this.pda_disable_diagnostics_bgps_on_logoff)\r\n            this.log.info(\"PAUSE event fired: Background GPS will not fire because pda_disable_diagnostics_bgps_on_logoff is set to TRUE.\");\r\n          else {\r\n            this.log.info(\"PAUSE event fired: Background GPS about to START.\");\r\n            this.backgroundGeolocationService.start();\r\n          }\r\n\r\n          this.sharedService.isAppinBackground = true;\r\n          this.sharedService.PAUSE.next(true);\r\n        });\r\n\r\n        this.platform.resume.subscribe(() => {\r\n          this.log.info(\"RESUME event fired: Background GPS about to STOP.\");\r\n          this.backgroundGeolocationService.stop();\r\n          this.sharedService.isAppinBackground = false;\r\n          this.sharedService.RESUME.next(true);\r\n        });\r\n      }\r\n    });\r\n\r\n  }//constructor ends;\r\n\r\n\r\n  isPlatformReady() {\r\n    return this.isready;\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/platform-ready-service/platform-ready-service.ts","import { LoopBackConfig } from '../../../shared/sdk/lb.config';\r\nimport { Http } from '@angular/http';\r\n\r\n\r\n\r\n\r\nexport class LogServiceInstance {\r\n\r\n    _log;\r\n    log;\r\n    info;\r\n    error;\r\n    context;\r\n    driverId;\r\n    logServerIP;\r\n    logServerPort;\r\n    pdaParams;\r\n    sharedService;\r\n    isEnabled = true;\r\n    utilService;\r\n    //loggerService;\r\n    http: Http;\r\n    platform;\r\n    OSC_log = {\r\n        Time: '',\r\n        Localtime: '',\r\n        Seq: 0,\r\n        Logtype: '',\r\n        Context: {\r\n            site: '',\r\n            driver: 0,\r\n            fn: ''\r\n        },\r\n        Message: '',\r\n        Tab: ''\r\n    }\r\n\r\n\r\n\r\n    constructor(http, context, driverId, logServerIP, logServerPort, pdaParams, sharedService, platform, utilService) {\r\n        this.http = http;\r\n        this.context = context;\r\n        this.driverId = driverId;\r\n        this.logServerIP = logServerIP;\r\n        this.logServerPort = logServerPort;\r\n        this.pdaParams = pdaParams;\r\n        //this.loggerService = new LoggerService();\r\n        this.sharedService = sharedService;\r\n        this.platform = platform;\r\n        this.utilService = utilService;\r\n\r\n\r\n        //console.log('Hello LogServiceInstance class');\r\n    }\r\n\r\n    debug(arg: string) {\r\n        if (LoopBackConfig.debuggable())\r\n            console.debug(arg);\r\n    }\r\n    warn(arg: string) {\r\n        if (LoopBackConfig.debuggable())\r\n            console.warn(arg);\r\n    }\r\n}//class LogServiceInstance ends here\r\n\r\nLogServiceInstance.prototype._log = function (originalFn, args) {\r\n    if (!this.isEnabled) {\r\n        return;\r\n    }\r\n\r\n    var contentType = 'application/json; charset=UTF-8';\r\n    var now = this.utilService.getFormattedTimestamp(new Date());\r\n    var message = '',\r\n        supplantData = [];\r\n    var logstring = '';\r\n\r\n\r\n    // LT - BAD - HACK - check driver id and if zero update context\r\n    // Logger function should not know details of context or what a driver id is!!!!\r\n\r\n    if (this.context.driver == 0 || (typeof this.context.driver == 'undefined'))\r\n        //this.context.driver = this.pdaParamService.getDriverId();\r\n        this.context.driver = Number(this.pdaParams.getDriverId());\r\n\r\n    this.context.driver = Number(this.context.driver);\r\n\r\n    // LT - for our OSC PDA app context is a JSON object so need to convert to string\r\n    var lcontext = JSON.stringify(this.context);\r\n    switch (args.length) {\r\n        case 1:\r\n            message = this.utilService.supplant(\"{0} - {1}: {2}\", [now, lcontext, args[0]]);\r\n            logstring = args[0];\r\n            break;\r\n        case 3:\r\n            supplantData = args[2];\r\n            message = this.utilService.supplant(\"{0} - {1}::{2}(\\'{3}\\')\", [now, lcontext, args[0], args[1]]);\r\n            this.logtype = args[0];\r\n            logstring = this.utilService.supplant(args[1], supplantData);\r\n            break;\r\n        case 2:\r\n            if (typeof args[1] === 'string') {\r\n                message = this.utilService.supplant(\"{0} - {1}::{2}(\\'{3}\\')\", [now, lcontext, args[0], args[1]]);\r\n                this.logtype = args[0];\r\n                logstring = args[1];\r\n            } else {\r\n                supplantData = args[1];\r\n                message = this.utilService.supplant(\"{0} - {1}: {2}\", [now, lcontext, args[0]]);\r\n                logstring = this.utilService.supplant(args[0], supplantData);\r\n            }\r\n            break;\r\n    }\r\n\r\n\r\n\r\n    //this.loggerService[originalFn].call(null, this.utilService.supplant(message, supplantData));\r\n\r\n\r\n    // LT - POST to log server\r\n    /* The angular $http service cannot be used in the $log\r\n     * decorator because it will cause a circular dependecy.\r\n     * To overcome this  a direct ajax call should be made.\r\n     * TODO - maybe use \"request\" https://github.com/request/request/blob/master/README.md instead of jQuery to reduce footprint\r\n     */\r\n    this.sharedService.seqno++;\r\n    if (this.sharedService.seqno > 999)\r\n        this.sharedService.seqno = 1;\r\n\r\n    var d = new Date();\r\n\r\n\r\n\r\n    this.OSC_log = {\r\n        Time: this.utilService.getLogTimestamp(d),\r\n        Localtime: this.utilService.getLocalTimestamp(d),\r\n        Seq: this.sharedService.seqno,\r\n        Logtype: originalFn,\r\n        Context: this.context,\r\n        Message: logstring,\r\n        Tab: this.sharedService.tab\r\n    }\r\n\r\n\r\n    if (this.sharedService.isAppinBackground)\r\n        this.OSC_log.Tab = \"App is in the background.\"\r\n\r\n    var clientid = localStorage.getItem('clientId');\r\n\r\n    if (clientid !== null && clientid !== '')\r\n        this.OSC_log.Context.site = clientid.toUpperCase();\r\n\r\n    else\r\n        this.OSC_log.Context.site = 'UNSET';\r\n\r\n\r\n    this.OSC_log.Context.driver = Number(this.pdaParams.getDriverId());\r\n\r\n    var url = 'http://' + this.logServerIP + ':' + this.logServerPort;\r\n    var data = JSON.stringify({\r\n        '[====NewTPLUSMobilelog====]': this.OSC_log\r\n    });\r\n\r\n    this.http.post(url, data).subscribe(data => {\r\n        //console.log(\"log test:::\" + data);\r\n    }, error => {\r\n        //console.log(\"log test error:::\" + error);\r\n    });\r\n\r\n    //this.http.open()\r\n\r\n\r\n};//LogServiceInstance.prototype._log() ends here\r\n\r\n\r\nLogServiceInstance.prototype.log = function () {\r\n    this._log('log', arguments);\r\n};\r\nLogServiceInstance.prototype.info = function () {\r\n    this._log('info', arguments);\r\n};\r\nLogServiceInstance.prototype.warn = function () {\r\n    this._log('warn', arguments);\r\n\r\n};\r\nLogServiceInstance.prototype.debug = function () {\r\n    this._log('debug', arguments);\r\n};\r\n\r\nLogServiceInstance.prototype.error = function () {\r\n    this._log('error', arguments);\r\n};\r\n\r\nLogServiceInstance.prototype.context = this.context;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/log-service/log-service-instance.ts","/* tslint:disable */\n/**\n* @module SDKModule\n* @author Jonathan Casarrubias <t:@johncasarrubias> <gh:jonathanCasarrubias>\n* @license MIT 2016 Jonathan Casarrubias\n* @version 2.1.0\n* @description\n* The SDKModule is a generated Software Development Kit automatically built by\n* the LoopBack SDK Builder open source module.\n*\n* The SDKModule provides Angular 2 >= RC.5 support, which means that NgModules\n* can import this Software Development Kit as follows:\n*\n*\n* APP Route Module Context\n* ============================================================================\n* import { NgModule }       from '@angular/core';\n* import { BrowserModule }  from '@angular/platform-browser';\n* // App Root \n* import { AppComponent }   from './app.component';\n* // Feature Modules\n* import { SDK[Browser|Node|Native]Module } from './shared/sdk/sdk.module';\n* // Import Routing\n* import { routing }        from './app.routing';\n* @NgModule({\n*  imports: [\n*    BrowserModule,\n*    routing,\n*    SDK[Browser|Node|Native]Module.forRoot()\n*  ],\n*  declarations: [ AppComponent ],\n*  bootstrap:    [ AppComponent ]\n* })\n* export class AppModule { }\n*\n**/\nimport { ErrorHandler } from './services/core/error.service';\nimport { LoopBackAuth } from './services/core/auth.service';\nimport { LoggerService } from './services/custom/logger.service';\nimport { SDKModels } from './services/custom/SDKModels';\nimport { InternalStorage, SDKStorage } from './storage/storage.swaps';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CookieBrowser } from './storage/cookie.browser';\nimport { StorageBrowser } from './storage/storage.browser';\nimport { SocketBrowser } from './sockets/socket.browser';\nimport { SocketDriver } from './sockets/socket.driver';\nimport { SocketConnection } from './sockets/socket.connections';\nimport { RealTime } from './services/core/real.time';\nimport { JobApi } from './services/custom/Job';\nimport { JobChangeApi } from './services/custom/JobChange';\nimport { TpmPdaControllerApi } from './services/custom/TpmPdaController';\nimport { GpsHistoryApi } from './services/custom/GpsHistory';\nimport { ApplicationApi } from './services/custom/Application';\nimport { InstallationApi } from './services/custom/Installation';\nimport { NotificationApi } from './services/custom/Notification';\nimport { PushApi } from './services/custom/Push';\nimport { Mobile_eventApi } from './services/custom/Mobile_event';\nimport { SiteConfigApi } from './services/custom/SiteConfig';\nimport { DespatchToDriverMessagesApi } from './services/custom/DespatchToDriverMessages';\nimport { JseaDriverQuestionsApi } from './services/custom/JseaDriverQuestions';\nimport { JseaDriverAnswersApi } from './services/custom/JseaDriverAnswers';\nimport { JseaDriverAnswersChangeApi } from './services/custom/JseaDriverAnswersChange';\nimport { PhotocontainerApi } from './services/custom/Photocontainer';\nimport { ImageApi } from './services/custom/Image';\nimport { BarcodeHistApi } from './services/custom/BarcodeHist';\nimport { BarcodeHistChangeApi } from './services/custom/BarcodeHistChange';\nimport { DeviceDiagnosticsApi } from './services/custom/DeviceDiagnostics';\n/**\n* @module SDKBrowserModule\n* @description\n* This module should be imported when building a Web Application in the following scenarios:\n*\n*  1.- Regular web application\n*  2.- Angular universal application (Browser Portion)\n*  3.- Progressive applications (Angular Mobile, Ionic, WebViews, etc)\n**/\n@NgModule({\n  imports:      [ CommonModule, HttpClientModule ],\n  declarations: [ ],\n  exports:      [ ],\n  providers:    [\n    ErrorHandler,\n    SocketConnection\n  ]\n})\nexport class SDKBrowserModule {\n  static forRoot(internalStorageProvider: any = {\n    provide: InternalStorage,\n    useClass: CookieBrowser\n  }): ModuleWithProviders {\n    return {\n      ngModule  : SDKBrowserModule,\n      providers : [\n        LoopBackAuth,\n        LoggerService,\n        SDKModels,\n        RealTime,\n        JobApi,\n        JobChangeApi,\n        TpmPdaControllerApi,\n        GpsHistoryApi,\n        ApplicationApi,\n        InstallationApi,\n        NotificationApi,\n        PushApi,\n        Mobile_eventApi,\n        SiteConfigApi,\n        DespatchToDriverMessagesApi,\n        JseaDriverQuestionsApi,\n        JseaDriverAnswersApi,\n        JseaDriverAnswersChangeApi,\n        PhotocontainerApi,\n        ImageApi,\n        BarcodeHistApi,\n        BarcodeHistChangeApi,\n        DeviceDiagnosticsApi,\n        internalStorageProvider,\n        { provide: SDKStorage, useClass: StorageBrowser },\n        { provide: SocketDriver, useClass: SocketBrowser }\n      ]\n    };\n  }\n}\n/**\n* Have Fun!!!\n* - Jon\n**/\nexport * from './models/index';\nexport * from './services/index';\nexport * from './lb.config';\nexport * from './storage/storage.swaps';\nexport { CookieBrowser } from './storage/cookie.browser';\nexport { StorageBrowser } from './storage/storage.browser';\n\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/index.ts","import { Injectable } from '@angular/core';\r\n\r\n\r\n\r\nimport { PdaparamsServiceProvider } from '../pdaparams-service/pdaparams-service';\r\nimport { LogServiceProvider } from '../log-service/log-service';\r\nimport { SharedServiceProvider } from '../shared-service/shared-service';\r\n\r\ndeclare const lbclient: any;\r\n/*\r\n  Generated class for the BarcodeServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class BarcodeServiceProvider {\r\n  //When App starts Get from localstorage\r\n  syncrequired: any = localStorage.getItem('BARCODES_SYNC_REQD');\r\n  logParams = { site: this.pdaParams.getSiteId(), driver: this.pdaParams.getDriverId(), fn: 'BackgroundGeolocationServiceProvider' };\r\n  log = this.logger.getInstance(this.logParams);\r\n  apponline: any = true;\r\n  barcode_sync = lbclient.barcode_sync;\r\n\r\n  constructor( private pdaParams: PdaparamsServiceProvider,\r\n    private logger: LogServiceProvider, private sharedService: SharedServiceProvider) {\r\n    //console.log('Hello BarcodeServiceProvider Provider');\r\n    this.syncrequired = (this.syncrequired == \"true\");\r\n    this.sharedService.APP_ON_LINE.subscribe(event => {\r\n      this.syncrequired = localStorage.getItem('BARCODES_SYNC_REQD');\r\n      this.syncrequired = (this.syncrequired == \"true\");\r\n      this.apponline = localStorage.getItem('APP_CONECTIVITY');\r\n      this.apponline = (this.apponline == \"true\");\r\n      this.log.debug(\" APP_ON_LINE: Syncrequired = \" + this.syncrequired + \" AppOnline From LocaStorage = \" + this.apponline);\r\n\r\n      //If the last state from localstorage was offline the sync if required\r\n      if (this.syncrequired && this.apponline == false) {\r\n        this.log.debug(\" SYNC Required and apponline from LStorage is FALSE so will barcode_sync:\" + event);\r\n        this.barcode_sync();\r\n        localStorage.setItem('BARCODES_SYNC_REQD', 'false');\r\n      }\r\n\r\n      //Now Update Local Storage\r\n      this.apponline = true;\r\n      localStorage.setItem('APP_CONECTIVITY', this.apponline);\r\n    });\r\n    this.sharedService.APP_OFF_LINE.subscribe(event => {\r\n      this.apponline = false;\r\n      localStorage.setItem('APP_CONECTIVITY', this.apponline);\r\n    });\r\n\r\n  }//End of the constructor.\r\n\r\n  //This is called from BarcodeCtrl and will update Local Storage\r\n  setSyncRequired = (val) => {\r\n    localStorage.setItem('BARCODES_SYNC_REQD', val);\r\n    this.log.debug(\" setSyncRequired:\" + val);\r\n    this.syncrequired = val;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/barcode-service/barcode-service.ts","/* tslint:disable */\nexport * from './core/index';\nexport * from './custom/index';\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/index.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { LoopBackConfig } from '../../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module LoggerService\n* @license MIT\n* @description\n* Console Log wrapper that can be disabled in production mode\n**/\n@Injectable()\nexport class LoggerService {\n\n  log(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.log.apply(console, args);\n  }\n\n  info(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.info.apply(console, args);\n  }\n\n  error(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.error.apply(console, args);\n  }\n\n  count(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  group(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  groupEnd() {\n    if (LoopBackConfig.debuggable())\n    console.groupEnd();\n  }\n\n  profile(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  profileEnd() {\n    if (LoopBackConfig.debuggable())\n    console.profileEnd();\n  }\n\n  time(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.time(arg);\n  }\n\n  timeEnd(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.timeEnd(arg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/services/custom/logger.service.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface GpsHistoryInterface {\n  \"gps_driver_id\"?: number;\n  \"gps_timestamp\": Date;\n  \"gps_latitude\": number;\n  \"gps_longitude\": number;\n  \"gps_quality\": number;\n  \"gps_time\"?: number;\n  \"gps_heading\": number;\n  \"gps_speed\": number;\n  \"mobjobNumber\"?: number;\n  \"mobjobBookingDay\"?: Date;\n  \"mobjobStatus\"?: string;\n}\n\nexport class GpsHistory implements GpsHistoryInterface {\n  \"gps_driver_id\": number;\n  \"gps_timestamp\": Date;\n  \"gps_latitude\": number;\n  \"gps_longitude\": number;\n  \"gps_quality\": number;\n  \"gps_time\": number;\n  \"gps_heading\": number;\n  \"gps_speed\": number;\n  \"mobjobNumber\": number;\n  \"mobjobBookingDay\": Date;\n  \"mobjobStatus\": string;\n  constructor(data?: GpsHistoryInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `GpsHistory`.\n   */\n  public static getModelName() {\n    return \"GpsHistory\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of GpsHistory for dynamic purposes.\n  **/\n  public static factory(data: GpsHistoryInterface): GpsHistory{\n    return new GpsHistory(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'GpsHistory',\n      plural: 'gpsHistorys',\n      path: 'gpsHistorys',\n      idName: 'gps_driver_id',\n      properties: {\n        \"gps_driver_id\": {\n          name: 'gps_driver_id',\n          type: 'number'\n        },\n        \"gps_timestamp\": {\n          name: 'gps_timestamp',\n          type: 'Date'\n        },\n        \"gps_latitude\": {\n          name: 'gps_latitude',\n          type: 'number'\n        },\n        \"gps_longitude\": {\n          name: 'gps_longitude',\n          type: 'number'\n        },\n        \"gps_quality\": {\n          name: 'gps_quality',\n          type: 'number'\n        },\n        \"gps_time\": {\n          name: 'gps_time',\n          type: 'number'\n        },\n        \"gps_heading\": {\n          name: 'gps_heading',\n          type: 'number'\n        },\n        \"gps_speed\": {\n          name: 'gps_speed',\n          type: 'number'\n        },\n        \"mobjobNumber\": {\n          name: 'mobjobNumber',\n          type: 'number'\n        },\n        \"mobjobBookingDay\": {\n          name: 'mobjobBookingDay',\n          type: 'Date'\n        },\n        \"mobjobStatus\": {\n          name: 'mobjobStatus',\n          type: 'string'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shared/sdk/models/GpsHistory.ts"],"sourceRoot":""}